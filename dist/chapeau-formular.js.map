{"version":3,"file":"chapeau-formular.js","sources":["../src/async_form.js","../node_modules/filepond/dist/filepond.esm.js","../node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.esm.js","../node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.esm.js","../src/fileupload.js","../src/conversion.js","../node_modules/advanced-webflow-forms/dist/awf.js","../src/chapeau_form.js"],"sourcesContent":["export class AsyncForm {\n\tconstructor(el) {\n\t\tif (el.dataset.refAsyncForm) {\n\t\t\treturn AsyncForm.refs[el.dataset.refAsyncForm];\n\t\t}\n\n\t\tthis.ref = Math.random();\n\t\tAsyncForm.refs[this.ref] = this;\n\t\tel.dataset.refAsyncForm = this.ref;\n\n\t\tthis.el = el;\n\n\t\tthis.form = el.querySelector(\"form\");\n\t\tthis.formSuccess = el.querySelector(\".w-form-done\");\n\t\tthis.formFail = el.querySelector(\".w-form-fail\");\n\n\t\tthis.submitButton = el.querySelector('[type=\"submit\"]');\n\t\tthis.buttonText = this.getSubmitText();\n\t\tthis.waitingText = this.submitButton.dataset.wait;\n\n\t\t/** @type {BeforeSubmitHandler[]} */\n\t\tthis.beforeSubmitHandlers = [];\n\t\t/** @type {PayloadHandler[]} */\n\t\tthis.payloadHandlers = [];\n\t\t/** @type {InputHandler[]} */\n\t\tthis.inputHandlers = [];\n\t\t/** @type {StateHandler[]} */\n\t\tthis.onStateHandlers = [];\n\n\t\tthis.el.addEventListener(\"submit\", (e) => this.submit(e));\n\t}\n\n\t/**\n\t * @callback BeforeSubmitHandler\n\t * @returns {bool} if false then the form is not submitted\n\t */\n\n\t/**\n\t * Gets called before the form starts to submit\n\t * Allows to cancel the submit by returning false\n\t * @type {BeforeSubmitHandler}\n\t */\n\tset onBeforeSubmit(fn) {\n\t\tthis.beforeSubmitHandlers.push(fn);\n\t}\n\n\t/**\n\t * @callback PayloadHandler\n\t * @param {Object} payload The current payload\n\t * @returns {Object} The new payload\n\t */\n\n\t/**\n\t * Allows for adding custom value to the payload\n\t * Gets called before form elements are converted\n\t * All handlers will be called in the order they were registered\n\t * @type {PayloadHandler}\n\t */\n\tset onPayload(fn) {\n\t\tthis.payloadHandlers.push(fn);\n\t}\n\n\t/**\n\t * @callback InputHandler\n\t * @param {HTMLElement} input The input element\n\t * @param {String} value The current value\n\t * @returns {String} The new value\n\t */\n\n\t/**\n\t * Allows for transforming the values of the form elements\n\t * All handlers will be called in the order they were registered\n\t * Can be async\n\t * @type {InputHandler}\n\t */\n\tset onInput(fn) {\n\t\tthis.inputHandlers.push(fn);\n\t}\n\n\t/**\n\t * @callback StateHandler\n\t * @param {'loading' | 'success' | 'error'} state\n\t */\n\n\t/**\n\t * Gets called when the forms state changes\n\t * @type {StateHandler}\n\t */\n\tset onState(fn) {\n\t\tthis.onStateHandlers.push(fn);\n\t}\n\n\tasync submit(event) {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tconst shouldSubmit = this.beforeSubmitHandlers.reduce((prev, handler) => handler() && prev, true);\n\t\t\tif (!shouldSubmit) return;\n\n\t\t\tthis.setState(\"loading\");\n\n\t\t\tconst payload = await this.createPayload();\n\t\t\tconst url = this.form.action;\n\t\t\tconst method = this.form.method;\n\n\t\t\tconst options = {\n\t\t\t\tmethod: method,\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t};\n\n\t\t\tconst response = await fetch(url, options);\n\n\t\t\tif (response.ok) {\n\t\t\t\tthis.setState(\"success\");\n\t\t\t} else {\n\t\t\t\tthis.setState(\"error\");\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tthis.setState(\"error\");\n\t\t}\n\t}\n\n\tasync createPayload() {\n\t\tlet payload = this.payloadHandlers.reduce((payload, handler) => handler(payload), {});\n\n\t\tconst inputElements = this.elements.filter((el) => el.name !== \"\");\n\t\tfor (const input of inputElements) {\n\t\t\tconst name = input.name;\n\t\t\tlet value = input.value;\n\n\t\t\tfor (const inputHandler of this.inputHandlers) {\n\t\t\t\tvalue = await inputHandler(input, value);\n\t\t\t}\n\n\t\t\tif (value === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (input.type === \"checkbox\") {\n\t\t\t\tvalue = input.checked;\n\t\t\t}\n\n\t\t\tif (input.type === \"radio\" && !input.checked) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (typeof payload[name] !== \"undefined\") {\n\t\t\t\tif (!Array.isArray(payload[name])) {\n\t\t\t\t\tpayload[name] = [payload[name]];\n\t\t\t\t}\n\n\t\t\t\tpayload[name].push(value);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpayload[name] = value;\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * @param {'loading' | 'success' | 'error'} state\n\t */\n\tsetState(state) {\n\t\tswitch (state) {\n\t\t\tcase \"loading\":\n\t\t\t\tthis.form.style.display = null;\n\t\t\t\tthis.formSuccess.style.display = null;\n\t\t\t\tthis.formFail.style.display = null;\n\t\t\t\tthis.elements.forEach((el) => (el.disabled = true));\n\t\t\t\tthis.setSubmitText(this.waitingText);\n\t\t\t\tbreak;\n\t\t\tcase \"success\":\n\t\t\t\tthis.form.style.display = \"none\";\n\t\t\t\tthis.formSuccess.style.display = \"block\";\n\t\t\t\tthis.formFail.style.display = \"none\";\n\t\t\t\tthis.elements.forEach((el) => (el.disabled = false));\n\t\t\t\tthis.setSubmitText(this.buttonText);\n\n\t\t\t\tthis.form.reset();\n\t\t\t\tthis.formSuccess.scrollIntoView({\n\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t\tblock: \"center\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"error\":\n\t\t\t\tthis.form.style.display = null;\n\t\t\t\tthis.formSuccess.style.display = null;\n\t\t\t\tthis.formFail.style.display = \"block\";\n\t\t\t\tthis.elements.forEach((el) => (el.disabled = false));\n\t\t\t\tthis.setSubmitText(this.buttonText);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.onStateHandlers.forEach((handler) => handler(state));\n\t}\n\n\tgetSubmitText() {\n\t\tif (this.submitButton instanceof HTMLInputElement) {\n\t\t\treturn this.submitButton.value;\n\t\t} else {\n\t\t\treturn this.submitButton.textContent;\n\t\t}\n\t}\n\n\tsetSubmitText(value) {\n\t\tif (this.submitButton instanceof HTMLInputElement) {\n\t\t\tthis.submitButton.value = value;\n\t\t} else {\n\t\t\tthis.submitButton.textContent = value;\n\t\t}\n\t}\n\n\tget elements() {\n\t\treturn Array.from(this.form.elements);\n\t}\n}\n\nAsyncForm.refs = {};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\tArray.from(document.querySelectorAll(\"[c-async-form]\")).forEach((el) => new AsyncForm(el));\n});\n","/*!\n * FilePond 4.30.6\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst isNode = value => value instanceof HTMLElement;\n\nconst createStore = (initialState, queries = [], actions = []) => {\n    // internal state\n    const state = {\n        ...initialState,\n    };\n\n    // contains all actions for next frame, is clear when actions are requested\n    const actionQueue = [];\n    const dispatchQueue = [];\n\n    // returns a duplicate of the current state\n    const getState = () => ({ ...state });\n\n    // returns a duplicate of the actions array and clears the actions array\n    const processActionQueue = () => {\n        // create copy of actions queue\n        const queue = [...actionQueue];\n\n        // clear actions queue (we don't want no double actions)\n        actionQueue.length = 0;\n\n        return queue;\n    };\n\n    // processes actions that might block the main UI thread\n    const processDispatchQueue = () => {\n        // create copy of actions queue\n        const queue = [...dispatchQueue];\n\n        // clear actions queue (we don't want no double actions)\n        dispatchQueue.length = 0;\n\n        // now dispatch these actions\n        queue.forEach(({ type, data }) => {\n            dispatch(type, data);\n        });\n    };\n\n    // adds a new action, calls its handler and\n    const dispatch = (type, data, isBlocking) => {\n        // is blocking action (should never block if document is hidden)\n        if (isBlocking && !document.hidden) {\n            dispatchQueue.push({ type, data });\n            return;\n        }\n\n        // if this action has a handler, handle the action\n        if (actionHandlers[type]) {\n            actionHandlers[type](data);\n        }\n\n        // now add action\n        actionQueue.push({\n            type,\n            data,\n        });\n    };\n\n    const query = (str, ...args) => (queryHandles[str] ? queryHandles[str](...args) : null);\n\n    const api = {\n        getState,\n        processActionQueue,\n        processDispatchQueue,\n        dispatch,\n        query,\n    };\n\n    let queryHandles = {};\n    queries.forEach(query => {\n        queryHandles = {\n            ...query(state),\n            ...queryHandles,\n        };\n    });\n\n    let actionHandlers = {};\n    actions.forEach(action => {\n        actionHandlers = {\n            ...action(dispatch, query, state),\n            ...actionHandlers,\n        };\n    });\n\n    return api;\n};\n\nconst defineProperty = (obj, property, definition) => {\n    if (typeof definition === 'function') {\n        obj[property] = definition;\n        return;\n    }\n    Object.defineProperty(obj, property, { ...definition });\n};\n\nconst forin = (obj, cb) => {\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n            continue;\n        }\n\n        cb(key, obj[key]);\n    }\n};\n\nconst createObject = definition => {\n    const obj = {};\n    forin(definition, property => {\n        defineProperty(obj, property, definition[property]);\n    });\n    return obj;\n};\n\nconst attr = (node, name, value = null) => {\n    if (value === null) {\n        return node.getAttribute(name) || node.hasAttribute(name);\n    }\n    node.setAttribute(name, value);\n};\n\nconst ns = 'http://www.w3.org/2000/svg';\nconst svgElements = ['svg', 'path']; // only svg elements used\n\nconst isSVGElement = tag => svgElements.includes(tag);\n\nconst createElement = (tag, className, attributes = {}) => {\n    if (typeof className === 'object') {\n        attributes = className;\n        className = null;\n    }\n    const element = isSVGElement(tag)\n        ? document.createElementNS(ns, tag)\n        : document.createElement(tag);\n    if (className) {\n        if (isSVGElement(tag)) {\n            attr(element, 'class', className);\n        } else {\n            element.className = className;\n        }\n    }\n    forin(attributes, (name, value) => {\n        attr(element, name, value);\n    });\n    return element;\n};\n\nconst appendChild = parent => (child, index) => {\n    if (typeof index !== 'undefined' && parent.children[index]) {\n        parent.insertBefore(child, parent.children[index]);\n    } else {\n        parent.appendChild(child);\n    }\n};\n\nconst appendChildView = (parent, childViews) => (view, index) => {\n    if (typeof index !== 'undefined') {\n        childViews.splice(index, 0, view);\n    } else {\n        childViews.push(view);\n    }\n\n    return view;\n};\n\nconst removeChildView = (parent, childViews) => view => {\n    // remove from child views\n    childViews.splice(childViews.indexOf(view), 1);\n\n    // remove the element\n    if (view.element.parentNode) {\n        parent.removeChild(view.element);\n    }\n\n    return view;\n};\n\nconst IS_BROWSER = (() =>\n    typeof window !== 'undefined' && typeof window.document !== 'undefined')();\nconst isBrowser = () => IS_BROWSER;\n\nconst testElement = isBrowser() ? createElement('svg') : {};\nconst getChildCount =\n    'children' in testElement ? el => el.children.length : el => el.childNodes.length;\n\nconst getViewRect = (elementRect, childViews, offset, scale) => {\n    const left = offset[0] || elementRect.left;\n    const top = offset[1] || elementRect.top;\n    const right = left + elementRect.width;\n    const bottom = top + elementRect.height * (scale[1] || 1);\n\n    const rect = {\n        // the rectangle of the element itself\n        element: {\n            ...elementRect,\n        },\n\n        // the rectangle of the element expanded to contain its children, does not include any margins\n        inner: {\n            left: elementRect.left,\n            top: elementRect.top,\n            right: elementRect.right,\n            bottom: elementRect.bottom,\n        },\n\n        // the rectangle of the element expanded to contain its children including own margin and child margins\n        // margins will be added after we've recalculated the size\n        outer: {\n            left,\n            top,\n            right,\n            bottom,\n        },\n    };\n\n    // expand rect to fit all child rectangles\n    childViews\n        .filter(childView => !childView.isRectIgnored())\n        .map(childView => childView.rect)\n        .forEach(childViewRect => {\n            expandRect(rect.inner, { ...childViewRect.inner });\n            expandRect(rect.outer, { ...childViewRect.outer });\n        });\n\n    // calculate inner width and height\n    calculateRectSize(rect.inner);\n\n    // append additional margin (top and left margins are included in top and left automatically)\n    rect.outer.bottom += rect.element.marginBottom;\n    rect.outer.right += rect.element.marginRight;\n\n    // calculate outer width and height\n    calculateRectSize(rect.outer);\n\n    return rect;\n};\n\nconst expandRect = (parent, child) => {\n    // adjust for parent offset\n    child.top += parent.top;\n    child.right += parent.left;\n    child.bottom += parent.top;\n    child.left += parent.left;\n\n    if (child.bottom > parent.bottom) {\n        parent.bottom = child.bottom;\n    }\n\n    if (child.right > parent.right) {\n        parent.right = child.right;\n    }\n};\n\nconst calculateRectSize = rect => {\n    rect.width = rect.right - rect.left;\n    rect.height = rect.bottom - rect.top;\n};\n\nconst isNumber = value => typeof value === 'number';\n\n/**\n * Determines if position is at destination\n * @param position\n * @param destination\n * @param velocity\n * @param errorMargin\n * @returns {boolean}\n */\nconst thereYet = (position, destination, velocity, errorMargin = 0.001) => {\n    return Math.abs(position - destination) < errorMargin && Math.abs(velocity) < errorMargin;\n};\n\n/**\n * Spring animation\n */\nconst spring =\n    // default options\n    ({ stiffness = 0.5, damping = 0.75, mass = 10 } = {}) =>\n        // method definition\n        {\n            let target = null;\n            let position = null;\n            let velocity = 0;\n            let resting = false;\n\n            // updates spring state\n            const interpolate = (ts, skipToEndState) => {\n                // in rest, don't animate\n                if (resting) return;\n\n                // need at least a target or position to do springy things\n                if (!(isNumber(target) && isNumber(position))) {\n                    resting = true;\n                    velocity = 0;\n                    return;\n                }\n\n                // calculate spring force\n                const f = -(position - target) * stiffness;\n\n                // update velocity by adding force based on mass\n                velocity += f / mass;\n\n                // update position by adding velocity\n                position += velocity;\n\n                // slow down based on amount of damping\n                velocity *= damping;\n\n                // we've arrived if we're near target and our velocity is near zero\n                if (thereYet(position, target, velocity) || skipToEndState) {\n                    position = target;\n                    velocity = 0;\n                    resting = true;\n\n                    // we done\n                    api.onupdate(position);\n                    api.oncomplete(position);\n                } else {\n                    // progress update\n                    api.onupdate(position);\n                }\n            };\n\n            /**\n             * Set new target value\n             * @param value\n             */\n            const setTarget = value => {\n                // if currently has no position, set target and position to this value\n                if (isNumber(value) && !isNumber(position)) {\n                    position = value;\n                }\n\n                // next target value will not be animated to\n                if (target === null) {\n                    target = value;\n                    position = value;\n                }\n\n                // let start moving to target\n                target = value;\n\n                // already at target\n                if (position === target || typeof target === 'undefined') {\n                    // now resting as target is current position, stop moving\n                    resting = true;\n                    velocity = 0;\n\n                    // done!\n                    api.onupdate(position);\n                    api.oncomplete(position);\n\n                    return;\n                }\n\n                resting = false;\n            };\n\n            // need 'api' to call onupdate callback\n            const api = createObject({\n                interpolate,\n                target: {\n                    set: setTarget,\n                    get: () => target,\n                },\n                resting: {\n                    get: () => resting,\n                },\n                onupdate: value => {},\n                oncomplete: value => {},\n            });\n\n            return api;\n        };\n\nconst easeLinear = t => t;\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\nconst tween =\n    // default values\n    ({ duration = 500, easing = easeInOutQuad, delay = 0 } = {}) =>\n        // method definition\n        {\n            let start = null;\n            let t;\n            let p;\n            let resting = true;\n            let reverse = false;\n            let target = null;\n\n            const interpolate = (ts, skipToEndState) => {\n                if (resting || target === null) return;\n\n                if (start === null) {\n                    start = ts;\n                }\n\n                if (ts - start < delay) return;\n\n                t = ts - start - delay;\n\n                if (t >= duration || skipToEndState) {\n                    t = 1;\n                    p = reverse ? 0 : 1;\n                    api.onupdate(p * target);\n                    api.oncomplete(p * target);\n                    resting = true;\n                } else {\n                    p = t / duration;\n                    api.onupdate((t >= 0 ? easing(reverse ? 1 - p : p) : 0) * target);\n                }\n            };\n\n            // need 'api' to call onupdate callback\n            const api = createObject({\n                interpolate,\n                target: {\n                    get: () => (reverse ? 0 : target),\n                    set: value => {\n                        // is initial value\n                        if (target === null) {\n                            target = value;\n                            api.onupdate(value);\n                            api.oncomplete(value);\n                            return;\n                        }\n\n                        // want to tween to a smaller value and have a current value\n                        if (value < target) {\n                            target = 1;\n                            reverse = true;\n                        } else {\n                            // not tweening to a smaller value\n                            reverse = false;\n                            target = value;\n                        }\n\n                        // let's go!\n                        resting = false;\n                        start = null;\n                    },\n                },\n                resting: {\n                    get: () => resting,\n                },\n                onupdate: value => {},\n                oncomplete: value => {},\n            });\n\n            return api;\n        };\n\nconst animator = {\n    spring,\n    tween,\n};\n\n/*\n { type: 'spring', stiffness: .5, damping: .75, mass: 10 };\n { translation: { type: 'spring', ... }, ... }\n { translation: { x: { type: 'spring', ... } } }\n*/\nconst createAnimator = (definition, category, property) => {\n    // default is single definition\n    // we check if transform is set, if so, we check if property is set\n    const def =\n        definition[category] && typeof definition[category][property] === 'object'\n            ? definition[category][property]\n            : definition[category] || definition;\n\n    const type = typeof def === 'string' ? def : def.type;\n    const props = typeof def === 'object' ? { ...def } : {};\n\n    return animator[type] ? animator[type](props) : null;\n};\n\nconst addGetSet = (keys, obj, props, overwrite = false) => {\n    obj = Array.isArray(obj) ? obj : [obj];\n    obj.forEach(o => {\n        keys.forEach(key => {\n            let name = key;\n            let getter = () => props[key];\n            let setter = value => (props[key] = value);\n\n            if (typeof key === 'object') {\n                name = key.key;\n                getter = key.getter || getter;\n                setter = key.setter || setter;\n            }\n\n            if (o[name] && !overwrite) {\n                return;\n            }\n\n            o[name] = {\n                get: getter,\n                set: setter,\n            };\n        });\n    });\n};\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// setup animators\n\nconst animations = ({ mixinConfig, viewProps, viewInternalAPI, viewExternalAPI }) => {\n    // initial properties\n    const initialProps = { ...viewProps };\n\n    // list of all active animations\n    const animations = [];\n\n    // setup animators\n    forin(mixinConfig, (property, animation) => {\n        const animator = createAnimator(animation);\n        if (!animator) {\n            return;\n        }\n\n        // when the animator updates, update the view state value\n        animator.onupdate = value => {\n            viewProps[property] = value;\n        };\n\n        // set animator target\n        animator.target = initialProps[property];\n\n        // when value is set, set the animator target value\n        const prop = {\n            key: property,\n            setter: value => {\n                // if already at target, we done!\n                if (animator.target === value) {\n                    return;\n                }\n\n                animator.target = value;\n            },\n            getter: () => viewProps[property],\n        };\n\n        // add getters and setters\n        addGetSet([prop], [viewInternalAPI, viewExternalAPI], viewProps, true);\n\n        // add it to the list for easy updating from the _write method\n        animations.push(animator);\n    });\n\n    // expose internal write api\n    return {\n        write: ts => {\n            let skipToEndState = document.hidden;\n            let resting = true;\n            animations.forEach(animation => {\n                if (!animation.resting) resting = false;\n                animation.interpolate(ts, skipToEndState);\n            });\n            return resting;\n        },\n        destroy: () => {},\n    };\n};\n\nconst addEvent = element => (type, fn) => {\n    element.addEventListener(type, fn);\n};\n\nconst removeEvent = element => (type, fn) => {\n    element.removeEventListener(type, fn);\n};\n\n// mixin\nconst listeners = ({\n    mixinConfig,\n    viewProps,\n    viewInternalAPI,\n    viewExternalAPI,\n    viewState,\n    view,\n}) => {\n    const events = [];\n\n    const add = addEvent(view.element);\n    const remove = removeEvent(view.element);\n\n    viewExternalAPI.on = (type, fn) => {\n        events.push({\n            type,\n            fn,\n        });\n        add(type, fn);\n    };\n\n    viewExternalAPI.off = (type, fn) => {\n        events.splice(events.findIndex(event => event.type === type && event.fn === fn), 1);\n        remove(type, fn);\n    };\n\n    return {\n        write: () => {\n            // not busy\n            return true;\n        },\n        destroy: () => {\n            events.forEach(event => {\n                remove(event.type, event.fn);\n            });\n        },\n    };\n};\n\n// add to external api and link to props\n\nconst apis = ({ mixinConfig, viewProps, viewExternalAPI }) => {\n    addGetSet(mixinConfig, viewExternalAPI, viewProps);\n};\n\nconst isDefined = value => value != null;\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// set initial state based on props in viewProps\n// apply as transforms each frame\n\nconst defaults = {\n    opacity: 1,\n    scaleX: 1,\n    scaleY: 1,\n    translateX: 0,\n    translateY: 0,\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    originX: 0,\n    originY: 0,\n};\n\nconst styles = ({ mixinConfig, viewProps, viewInternalAPI, viewExternalAPI, view }) => {\n    // initial props\n    const initialProps = { ...viewProps };\n\n    // current props\n    const currentProps = {};\n\n    // we will add those properties to the external API and link them to the viewState\n    addGetSet(mixinConfig, [viewInternalAPI, viewExternalAPI], viewProps);\n\n    // override rect on internal and external rect getter so it takes in account transforms\n    const getOffset = () => [viewProps['translateX'] || 0, viewProps['translateY'] || 0];\n    const getScale = () => [viewProps['scaleX'] || 0, viewProps['scaleY'] || 0];\n    const getRect = () =>\n        view.rect ? getViewRect(view.rect, view.childViews, getOffset(), getScale()) : null;\n    viewInternalAPI.rect = { get: getRect };\n    viewExternalAPI.rect = { get: getRect };\n\n    // apply view props\n    mixinConfig.forEach(key => {\n        viewProps[key] =\n            typeof initialProps[key] === 'undefined' ? defaults[key] : initialProps[key];\n    });\n\n    // expose api\n    return {\n        write: () => {\n            // see if props have changed\n            if (!propsHaveChanged(currentProps, viewProps)) {\n                return;\n            }\n\n            // moves element to correct position on screen\n            applyStyles(view.element, viewProps);\n\n            // store new transforms\n            Object.assign(currentProps, { ...viewProps });\n\n            // no longer busy\n            return true;\n        },\n        destroy: () => {},\n    };\n};\n\nconst propsHaveChanged = (currentProps, newProps) => {\n    // different amount of keys\n    if (Object.keys(currentProps).length !== Object.keys(newProps).length) {\n        return true;\n    }\n\n    // lets analyze the individual props\n    for (const prop in newProps) {\n        if (newProps[prop] !== currentProps[prop]) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nconst applyStyles = (\n    element,\n    {\n        opacity,\n        perspective,\n        translateX,\n        translateY,\n        scaleX,\n        scaleY,\n        rotateX,\n        rotateY,\n        rotateZ,\n        originX,\n        originY,\n        width,\n        height,\n    }\n) => {\n    let transforms = '';\n    let styles = '';\n\n    // handle transform origin\n    if (isDefined(originX) || isDefined(originY)) {\n        styles += `transform-origin: ${originX || 0}px ${originY || 0}px;`;\n    }\n\n    // transform order is relevant\n    // 0. perspective\n    if (isDefined(perspective)) {\n        transforms += `perspective(${perspective}px) `;\n    }\n\n    // 1. translate\n    if (isDefined(translateX) || isDefined(translateY)) {\n        transforms += `translate3d(${translateX || 0}px, ${translateY || 0}px, 0) `;\n    }\n\n    // 2. scale\n    if (isDefined(scaleX) || isDefined(scaleY)) {\n        transforms += `scale3d(${isDefined(scaleX) ? scaleX : 1}, ${\n            isDefined(scaleY) ? scaleY : 1\n        }, 1) `;\n    }\n\n    // 3. rotate\n    if (isDefined(rotateZ)) {\n        transforms += `rotateZ(${rotateZ}rad) `;\n    }\n\n    if (isDefined(rotateX)) {\n        transforms += `rotateX(${rotateX}rad) `;\n    }\n\n    if (isDefined(rotateY)) {\n        transforms += `rotateY(${rotateY}rad) `;\n    }\n\n    // add transforms\n    if (transforms.length) {\n        styles += `transform:${transforms};`;\n    }\n\n    // add opacity\n    if (isDefined(opacity)) {\n        styles += `opacity:${opacity};`;\n\n        // if we reach zero, we make the element inaccessible\n        if (opacity === 0) {\n            styles += `visibility:hidden;`;\n        }\n\n        // if we're below 100% opacity this element can't be clicked\n        if (opacity < 1) {\n            styles += `pointer-events:none;`;\n        }\n    }\n\n    // add height\n    if (isDefined(height)) {\n        styles += `height:${height}px;`;\n    }\n\n    // add width\n    if (isDefined(width)) {\n        styles += `width:${width}px;`;\n    }\n\n    // apply styles\n    const elementCurrentStyle = element.elementCurrentStyle || '';\n\n    // if new styles does not match current styles, lets update!\n    if (styles.length !== elementCurrentStyle.length || styles !== elementCurrentStyle) {\n        element.style.cssText = styles;\n        // store current styles so we can compare them to new styles later on\n        // _not_ getting the style value is faster\n        element.elementCurrentStyle = styles;\n    }\n};\n\nconst Mixins = {\n    styles,\n    listeners,\n    animations,\n    apis,\n};\n\nconst updateRect = (rect = {}, element = {}, style = {}) => {\n    if (!element.layoutCalculated) {\n        rect.paddingTop = parseInt(style.paddingTop, 10) || 0;\n        rect.marginTop = parseInt(style.marginTop, 10) || 0;\n        rect.marginRight = parseInt(style.marginRight, 10) || 0;\n        rect.marginBottom = parseInt(style.marginBottom, 10) || 0;\n        rect.marginLeft = parseInt(style.marginLeft, 10) || 0;\n        element.layoutCalculated = true;\n    }\n\n    rect.left = element.offsetLeft || 0;\n    rect.top = element.offsetTop || 0;\n    rect.width = element.offsetWidth || 0;\n    rect.height = element.offsetHeight || 0;\n\n    rect.right = rect.left + rect.width;\n    rect.bottom = rect.top + rect.height;\n\n    rect.scrollTop = element.scrollTop;\n\n    rect.hidden = element.offsetParent === null;\n\n    return rect;\n};\n\nconst createView =\n    // default view definition\n    ({\n        // element definition\n        tag = 'div',\n        name = null,\n        attributes = {},\n\n        // view interaction\n        read = () => {},\n        write = () => {},\n        create = () => {},\n        destroy = () => {},\n\n        // hooks\n        filterFrameActionsForChild = (child, actions) => actions,\n        didCreateView = () => {},\n        didWriteView = () => {},\n\n        // rect related\n        ignoreRect = false,\n        ignoreRectUpdate = false,\n\n        // mixins\n        mixins = [],\n    } = {}) => (\n        // each view requires reference to store\n        store,\n        // specific properties for this view\n        props = {}\n    ) => {\n        // root element should not be changed\n        const element = createElement(tag, `filepond--${name}`, attributes);\n\n        // style reference should also not be changed\n        const style = window.getComputedStyle(element, null);\n\n        // element rectangle\n        const rect = updateRect();\n        let frameRect = null;\n\n        // rest state\n        let isResting = false;\n\n        // pretty self explanatory\n        const childViews = [];\n\n        // loaded mixins\n        const activeMixins = [];\n\n        // references to created children\n        const ref = {};\n\n        // state used for each instance\n        const state = {};\n\n        // list of writers that will be called to update this view\n        const writers = [\n            write, // default writer\n        ];\n\n        const readers = [\n            read, // default reader\n        ];\n\n        const destroyers = [\n            destroy, // default destroy\n        ];\n\n        // core view methods\n        const getElement = () => element;\n        const getChildViews = () => childViews.concat();\n        const getReference = () => ref;\n        const createChildView = store => (view, props) => view(store, props);\n        const getRect = () => {\n            if (frameRect) {\n                return frameRect;\n            }\n            frameRect = getViewRect(rect, childViews, [0, 0], [1, 1]);\n            return frameRect;\n        };\n        const getStyle = () => style;\n\n        /**\n         * Read data from DOM\n         * @private\n         */\n        const _read = () => {\n            frameRect = null;\n\n            // read child views\n            childViews.forEach(child => child._read());\n\n            const shouldUpdate = !(ignoreRectUpdate && rect.width && rect.height);\n            if (shouldUpdate) {\n                updateRect(rect, element, style);\n            }\n\n            // readers\n            const api = { root: internalAPI, props, rect };\n            readers.forEach(reader => reader(api));\n        };\n\n        /**\n         * Write data to DOM\n         * @private\n         */\n        const _write = (ts, frameActions, shouldOptimize) => {\n            // if no actions, we assume that the view is resting\n            let resting = frameActions.length === 0;\n\n            // writers\n            writers.forEach(writer => {\n                const writerResting = writer({\n                    props,\n                    root: internalAPI,\n                    actions: frameActions,\n                    timestamp: ts,\n                    shouldOptimize,\n                });\n                if (writerResting === false) {\n                    resting = false;\n                }\n            });\n\n            // run mixins\n            activeMixins.forEach(mixin => {\n                // if one of the mixins is still busy after write operation, we are not resting\n                const mixinResting = mixin.write(ts);\n                if (mixinResting === false) {\n                    resting = false;\n                }\n            });\n\n            // updates child views that are currently attached to the DOM\n            childViews\n                .filter(child => !!child.element.parentNode)\n                .forEach(child => {\n                    // if a child view is not resting, we are not resting\n                    const childResting = child._write(\n                        ts,\n                        filterFrameActionsForChild(child, frameActions),\n                        shouldOptimize\n                    );\n                    if (!childResting) {\n                        resting = false;\n                    }\n                });\n\n            // append new elements to DOM and update those\n            childViews\n                //.filter(child => !child.element.parentNode)\n                .forEach((child, index) => {\n                    // skip\n                    if (child.element.parentNode) {\n                        return;\n                    }\n\n                    // append to DOM\n                    internalAPI.appendChild(child.element, index);\n\n                    // call read (need to know the size of these elements)\n                    child._read();\n\n                    // re-call write\n                    child._write(\n                        ts,\n                        filterFrameActionsForChild(child, frameActions),\n                        shouldOptimize\n                    );\n\n                    // we just added somthing to the dom, no rest\n                    resting = false;\n                });\n\n            // update resting state\n            isResting = resting;\n\n            didWriteView({\n                props,\n                root: internalAPI,\n                actions: frameActions,\n                timestamp: ts,\n            });\n\n            // let parent know if we are resting\n            return resting;\n        };\n\n        const _destroy = () => {\n            activeMixins.forEach(mixin => mixin.destroy());\n            destroyers.forEach(destroyer => {\n                destroyer({ root: internalAPI, props });\n            });\n            childViews.forEach(child => child._destroy());\n        };\n\n        // sharedAPI\n        const sharedAPIDefinition = {\n            element: {\n                get: getElement,\n            },\n            style: {\n                get: getStyle,\n            },\n            childViews: {\n                get: getChildViews,\n            },\n        };\n\n        // private API definition\n        const internalAPIDefinition = {\n            ...sharedAPIDefinition,\n            rect: {\n                get: getRect,\n            },\n\n            // access to custom children references\n            ref: {\n                get: getReference,\n            },\n\n            // dom modifiers\n            is: needle => name === needle,\n            appendChild: appendChild(element),\n            createChildView: createChildView(store),\n            linkView: view => {\n                childViews.push(view);\n                return view;\n            },\n            unlinkView: view => {\n                childViews.splice(childViews.indexOf(view), 1);\n            },\n            appendChildView: appendChildView(element, childViews),\n            removeChildView: removeChildView(element, childViews),\n            registerWriter: writer => writers.push(writer),\n            registerReader: reader => readers.push(reader),\n            registerDestroyer: destroyer => destroyers.push(destroyer),\n            invalidateLayout: () => (element.layoutCalculated = false),\n\n            // access to data store\n            dispatch: store.dispatch,\n            query: store.query,\n        };\n\n        // public view API methods\n        const externalAPIDefinition = {\n            element: {\n                get: getElement,\n            },\n            childViews: {\n                get: getChildViews,\n            },\n            rect: {\n                get: getRect,\n            },\n            resting: {\n                get: () => isResting,\n            },\n            isRectIgnored: () => ignoreRect,\n            _read,\n            _write,\n            _destroy,\n        };\n\n        // mixin API methods\n        const mixinAPIDefinition = {\n            ...sharedAPIDefinition,\n            rect: {\n                get: () => rect,\n            },\n        };\n\n        // add mixin functionality\n        Object.keys(mixins)\n            .sort((a, b) => {\n                // move styles to the back of the mixin list (so adjustments of other mixins are applied to the props correctly)\n                if (a === 'styles') {\n                    return 1;\n                } else if (b === 'styles') {\n                    return -1;\n                }\n                return 0;\n            })\n            .forEach(key => {\n                const mixinAPI = Mixins[key]({\n                    mixinConfig: mixins[key],\n                    viewProps: props,\n                    viewState: state,\n                    viewInternalAPI: internalAPIDefinition,\n                    viewExternalAPI: externalAPIDefinition,\n                    view: createObject(mixinAPIDefinition),\n                });\n\n                if (mixinAPI) {\n                    activeMixins.push(mixinAPI);\n                }\n            });\n\n        // construct private api\n        const internalAPI = createObject(internalAPIDefinition);\n\n        // create the view\n        create({\n            root: internalAPI,\n            props,\n        });\n\n        // append created child views to root node\n        const childCount = getChildCount(element); // need to know the current child count so appending happens in correct order\n        childViews.forEach((child, index) => {\n            internalAPI.appendChild(child.element, childCount + index);\n        });\n\n        // call did create\n        didCreateView(internalAPI);\n\n        // expose public api\n        return createObject(externalAPIDefinition);\n    };\n\nconst createPainter = (read, write, fps = 60) => {\n    const name = '__framePainter';\n\n    // set global painter\n    if (window[name]) {\n        window[name].readers.push(read);\n        window[name].writers.push(write);\n        return;\n    }\n\n    window[name] = {\n        readers: [read],\n        writers: [write],\n    };\n\n    const painter = window[name];\n\n    const interval = 1000 / fps;\n    let last = null;\n    let id = null;\n    let requestTick = null;\n    let cancelTick = null;\n\n    const setTimerType = () => {\n        if (document.hidden) {\n            requestTick = () => window.setTimeout(() => tick(performance.now()), interval);\n            cancelTick = () => window.clearTimeout(id);\n        } else {\n            requestTick = () => window.requestAnimationFrame(tick);\n            cancelTick = () => window.cancelAnimationFrame(id);\n        }\n    };\n\n    document.addEventListener('visibilitychange', () => {\n        if (cancelTick) cancelTick();\n        setTimerType();\n        tick(performance.now());\n    });\n\n    const tick = ts => {\n        // queue next tick\n        id = requestTick(tick);\n\n        // limit fps\n        if (!last) {\n            last = ts;\n        }\n\n        const delta = ts - last;\n\n        if (delta <= interval) {\n            // skip frame\n            return;\n        }\n\n        // align next frame\n        last = ts - (delta % interval);\n\n        // update view\n        painter.readers.forEach(read => read());\n        painter.writers.forEach(write => write(ts));\n    };\n\n    setTimerType();\n    tick(performance.now());\n\n    return {\n        pause: () => {\n            cancelTick(id);\n        },\n    };\n};\n\nconst createRoute = (routes, fn) => ({ root, props, actions = [], timestamp, shouldOptimize }) => {\n    actions\n        .filter(action => routes[action.type])\n        .forEach(action =>\n            routes[action.type]({ root, props, action: action.data, timestamp, shouldOptimize })\n        );\n    if (fn) {\n        fn({ root, props, actions, timestamp, shouldOptimize });\n    }\n};\n\nconst insertBefore = (newNode, referenceNode) =>\n    referenceNode.parentNode.insertBefore(newNode, referenceNode);\n\nconst insertAfter = (newNode, referenceNode) => {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n};\n\nconst isArray = value => Array.isArray(value);\n\nconst isEmpty = value => value == null;\n\nconst trim = str => str.trim();\n\nconst toString = value => '' + value;\n\nconst toArray = (value, splitter = ',') => {\n    if (isEmpty(value)) {\n        return [];\n    }\n    if (isArray(value)) {\n        return value;\n    }\n    return toString(value)\n        .split(splitter)\n        .map(trim)\n        .filter(str => str.length);\n};\n\nconst isBoolean = value => typeof value === 'boolean';\n\nconst toBoolean = value => (isBoolean(value) ? value : value === 'true');\n\nconst isString = value => typeof value === 'string';\n\nconst toNumber = value =>\n    isNumber(value) ? value : isString(value) ? toString(value).replace(/[a-z]+/gi, '') : 0;\n\nconst toInt = value => parseInt(toNumber(value), 10);\n\nconst toFloat = value => parseFloat(toNumber(value));\n\nconst isInt = value => isNumber(value) && isFinite(value) && Math.floor(value) === value;\n\nconst toBytes = (value, base = 1000) => {\n    // is in bytes\n    if (isInt(value)) {\n        return value;\n    }\n\n    // is natural file size\n    let naturalFileSize = toString(value).trim();\n\n    // if is value in megabytes\n    if (/MB$/i.test(naturalFileSize)) {\n        naturalFileSize = naturalFileSize.replace(/MB$i/, '').trim();\n        return toInt(naturalFileSize) * base * base;\n    }\n\n    // if is value in kilobytes\n    if (/KB/i.test(naturalFileSize)) {\n        naturalFileSize = naturalFileSize.replace(/KB$i/, '').trim();\n        return toInt(naturalFileSize) * base;\n    }\n\n    return toInt(naturalFileSize);\n};\n\nconst isFunction = value => typeof value === 'function';\n\nconst toFunctionReference = string => {\n    let ref = self;\n    let levels = string.split('.');\n    let level = null;\n    while ((level = levels.shift())) {\n        ref = ref[level];\n        if (!ref) {\n            return null;\n        }\n    }\n    return ref;\n};\n\nconst methods = {\n    process: 'POST',\n    patch: 'PATCH',\n    revert: 'DELETE',\n    fetch: 'GET',\n    restore: 'GET',\n    load: 'GET',\n};\n\nconst createServerAPI = outline => {\n    const api = {};\n\n    api.url = isString(outline) ? outline : outline.url || '';\n    api.timeout = outline.timeout ? parseInt(outline.timeout, 10) : 0;\n    api.headers = outline.headers ? outline.headers : {};\n\n    forin(methods, key => {\n        api[key] = createAction(key, outline[key], methods[key], api.timeout, api.headers);\n    });\n\n    // remove process if no url or process on outline\n    api.process = outline.process || isString(outline) || outline.url ? api.process : null;\n\n    // special treatment for remove\n    api.remove = outline.remove || null;\n\n    // remove generic headers from api object\n    delete api.headers;\n\n    return api;\n};\n\nconst createAction = (name, outline, method, timeout, headers) => {\n    // is explicitely set to null so disable\n    if (outline === null) {\n        return null;\n    }\n\n    // if is custom function, done! Dev handles everything.\n    if (typeof outline === 'function') {\n        return outline;\n    }\n\n    // build action object\n    const action = {\n        url: method === 'GET' || method === 'PATCH' ? `?${name}=` : '',\n        method,\n        headers,\n        withCredentials: false,\n        timeout,\n        onload: null,\n        ondata: null,\n        onerror: null,\n    };\n\n    // is a single url\n    if (isString(outline)) {\n        action.url = outline;\n        return action;\n    }\n\n    // overwrite\n    Object.assign(action, outline);\n\n    // see if should reformat headers;\n    if (isString(action.headers)) {\n        const parts = action.headers.split(/:(.+)/);\n        action.headers = {\n            header: parts[0],\n            value: parts[1],\n        };\n    }\n\n    // if is bool withCredentials\n    action.withCredentials = toBoolean(action.withCredentials);\n\n    return action;\n};\n\nconst toServerAPI = value => createServerAPI(value);\n\nconst isNull = value => value === null;\n\nconst isObject = value => typeof value === 'object' && value !== null;\n\nconst isAPI = value => {\n    return (\n        isObject(value) &&\n        isString(value.url) &&\n        isObject(value.process) &&\n        isObject(value.revert) &&\n        isObject(value.restore) &&\n        isObject(value.fetch)\n    );\n};\n\nconst getType = value => {\n    if (isArray(value)) {\n        return 'array';\n    }\n\n    if (isNull(value)) {\n        return 'null';\n    }\n\n    if (isInt(value)) {\n        return 'int';\n    }\n\n    if (/^[0-9]+ ?(?:GB|MB|KB)$/gi.test(value)) {\n        return 'bytes';\n    }\n\n    if (isAPI(value)) {\n        return 'api';\n    }\n\n    return typeof value;\n};\n\nconst replaceSingleQuotes = str =>\n    str\n        .replace(/{\\s*'/g, '{\"')\n        .replace(/'\\s*}/g, '\"}')\n        .replace(/'\\s*:/g, '\":')\n        .replace(/:\\s*'/g, ':\"')\n        .replace(/,\\s*'/g, ',\"')\n        .replace(/'\\s*,/g, '\",');\n\nconst conversionTable = {\n    array: toArray,\n    boolean: toBoolean,\n    int: value => (getType(value) === 'bytes' ? toBytes(value) : toInt(value)),\n    number: toFloat,\n    float: toFloat,\n    bytes: toBytes,\n    string: value => (isFunction(value) ? value : toString(value)),\n    function: value => toFunctionReference(value),\n    serverapi: toServerAPI,\n    object: value => {\n        try {\n            return JSON.parse(replaceSingleQuotes(value));\n        } catch (e) {\n            return null;\n        }\n    },\n};\n\nconst convertTo = (value, type) => conversionTable[type](value);\n\nconst getValueByType = (newValue, defaultValue, valueType) => {\n    // can always assign default value\n    if (newValue === defaultValue) {\n        return newValue;\n    }\n\n    // get the type of the new value\n    let newValueType = getType(newValue);\n\n    // is valid type?\n    if (newValueType !== valueType) {\n        // is string input, let's attempt to convert\n        const convertedValue = convertTo(newValue, valueType);\n\n        // what is the type now\n        newValueType = getType(convertedValue);\n\n        // no valid conversions found\n        if (convertedValue === null) {\n            throw `Trying to assign value with incorrect type to \"${option}\", allowed type: \"${valueType}\"`;\n        } else {\n            newValue = convertedValue;\n        }\n    }\n\n    // assign new value\n    return newValue;\n};\n\nconst createOption = (defaultValue, valueType) => {\n    let currentValue = defaultValue;\n    return {\n        enumerable: true,\n        get: () => currentValue,\n        set: newValue => {\n            currentValue = getValueByType(newValue, defaultValue, valueType);\n        },\n    };\n};\n\nconst createOptions = options => {\n    const obj = {};\n    forin(options, prop => {\n        const optionDefinition = options[prop];\n        obj[prop] = createOption(optionDefinition[0], optionDefinition[1]);\n    });\n    return createObject(obj);\n};\n\nconst createInitialState = options => ({\n    // model\n    items: [],\n\n    // timeout used for calling update items\n    listUpdateTimeout: null,\n\n    // timeout used for stacking metadata updates\n    itemUpdateTimeout: null,\n\n    // queue of items waiting to be processed\n    processingQueue: [],\n\n    // options\n    options: createOptions(options),\n});\n\nconst fromCamels = (string, separator = '-') =>\n    string\n        .split(/(?=[A-Z])/)\n        .map(part => part.toLowerCase())\n        .join(separator);\n\nconst createOptionAPI = (store, options) => {\n    const obj = {};\n    forin(options, key => {\n        obj[key] = {\n            get: () => store.getState().options[key],\n            set: value => {\n                store.dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n                    value,\n                });\n            },\n        };\n    });\n    return obj;\n};\n\nconst createOptionActions = options => (dispatch, query, state) => {\n    const obj = {};\n    forin(options, key => {\n        const name = fromCamels(key, '_').toUpperCase();\n\n        obj[`SET_${name}`] = action => {\n            try {\n                state.options[key] = action.value;\n            } catch (e) {\n                // nope, failed\n            }\n\n            // we successfully set the value of this option\n            dispatch(`DID_SET_${name}`, { value: state.options[key] });\n        };\n    });\n    return obj;\n};\n\nconst createOptionQueries = options => state => {\n    const obj = {};\n    forin(options, key => {\n        obj[`GET_${fromCamels(key, '_').toUpperCase()}`] = action => state.options[key];\n    });\n    return obj;\n};\n\nconst InteractionMethod = {\n    API: 1,\n    DROP: 2,\n    BROWSE: 3,\n    PASTE: 4,\n    NONE: 5,\n};\n\nconst getUniqueId = () =>\n    Math.random()\n        .toString(36)\n        .substring(2, 11);\n\nconst arrayRemove = (arr, index) => arr.splice(index, 1);\n\nconst run = (cb, sync) => {\n    if (sync) {\n        cb();\n    } else if (document.hidden) {\n        Promise.resolve(1).then(cb);\n    } else {\n        setTimeout(cb, 0);\n    }\n};\n\nconst on = () => {\n    const listeners = [];\n    const off = (event, cb) => {\n        arrayRemove(\n            listeners,\n            listeners.findIndex(listener => listener.event === event && (listener.cb === cb || !cb))\n        );\n    };\n    const fire = (event, args, sync) => {\n        listeners\n            .filter(listener => listener.event === event)\n            .map(listener => listener.cb)\n            .forEach(cb => run(() => cb(...args), sync));\n    };\n    return {\n        fireSync: (event, ...args) => {\n            fire(event, args, true);\n        },\n        fire: (event, ...args) => {\n            fire(event, args, false);\n        },\n        on: (event, cb) => {\n            listeners.push({ event, cb });\n        },\n        onOnce: (event, cb) => {\n            listeners.push({\n                event,\n                cb: (...args) => {\n                    off(event, cb);\n                    cb(...args);\n                },\n            });\n        },\n        off,\n    };\n};\n\nconst copyObjectPropertiesToObject = (src, target, excluded) => {\n    Object.getOwnPropertyNames(src)\n        .filter(property => !excluded.includes(property))\n        .forEach(key =>\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(src, key))\n        );\n};\n\nconst PRIVATE = [\n    'fire',\n    'process',\n    'revert',\n    'load',\n    'on',\n    'off',\n    'onOnce',\n    'retryLoad',\n    'extend',\n    'archive',\n    'archived',\n    'release',\n    'released',\n    'requestProcessing',\n    'freeze',\n];\n\nconst createItemAPI = item => {\n    const api = {};\n    copyObjectPropertiesToObject(item, api, PRIVATE);\n    return api;\n};\n\nconst removeReleasedItems = items => {\n    items.forEach((item, index) => {\n        if (item.released) {\n            arrayRemove(items, index);\n        }\n    });\n};\n\nconst ItemStatus = {\n    INIT: 1,\n    IDLE: 2,\n    PROCESSING_QUEUED: 9,\n    PROCESSING: 3,\n    PROCESSING_COMPLETE: 5,\n    PROCESSING_ERROR: 6,\n    PROCESSING_REVERT_ERROR: 10,\n    LOADING: 7,\n    LOAD_ERROR: 8,\n};\n\nconst FileOrigin = {\n    INPUT: 1,\n    LIMBO: 2,\n    LOCAL: 3,\n};\n\nconst getNonNumeric = str => /[^0-9]+/.exec(str);\n\nconst getDecimalSeparator = () => getNonNumeric((1.1).toLocaleString())[0];\n\nconst getThousandsSeparator = () => {\n    // Added for browsers that do not return the thousands separator (happend on native browser Android 4.4.4)\n    // We check against the normal toString output and if they're the same return a comma when decimal separator is a dot\n    const decimalSeparator = getDecimalSeparator();\n    const thousandsStringWithSeparator = (1000.0).toLocaleString();\n    const thousandsStringWithoutSeparator = (1000.0).toString();\n    if (thousandsStringWithSeparator !== thousandsStringWithoutSeparator) {\n        return getNonNumeric(thousandsStringWithSeparator)[0];\n    }\n    return decimalSeparator === '.' ? ',' : '.';\n};\n\nconst Type = {\n    BOOLEAN: 'boolean',\n    INT: 'int',\n    NUMBER: 'number',\n    STRING: 'string',\n    ARRAY: 'array',\n    OBJECT: 'object',\n    FUNCTION: 'function',\n    ACTION: 'action',\n    SERVER_API: 'serverapi',\n    REGEX: 'regex',\n};\n\n// all registered filters\nconst filters = [];\n\n// loops over matching filters and passes options to each filter, returning the mapped results\nconst applyFilterChain = (key, value, utils) =>\n    new Promise((resolve, reject) => {\n        // find matching filters for this key\n        const matchingFilters = filters.filter(f => f.key === key).map(f => f.cb);\n\n        // resolve now\n        if (matchingFilters.length === 0) {\n            resolve(value);\n            return;\n        }\n\n        // first filter to kick things of\n        const initialFilter = matchingFilters.shift();\n\n        // chain filters\n        matchingFilters\n            .reduce(\n                // loop over promises passing value to next promise\n                (current, next) => current.then(value => next(value, utils)),\n\n                // call initial filter, will return a promise\n                initialFilter(value, utils)\n\n                // all executed\n            )\n            .then(value => resolve(value))\n            .catch(error => reject(error));\n    });\n\nconst applyFilters = (key, value, utils) =>\n    filters.filter(f => f.key === key).map(f => f.cb(value, utils));\n\n// adds a new filter to the list\nconst addFilter = (key, cb) => filters.push({ key, cb });\n\nconst extendDefaultOptions = additionalOptions => Object.assign(defaultOptions, additionalOptions);\n\nconst getOptions = () => ({ ...defaultOptions });\n\nconst setOptions = opts => {\n    forin(opts, (key, value) => {\n        // key does not exist, so this option cannot be set\n        if (!defaultOptions[key]) {\n            return;\n        }\n        defaultOptions[key][0] = getValueByType(\n            value,\n            defaultOptions[key][0],\n            defaultOptions[key][1]\n        );\n    });\n};\n\n// default options on app\nconst defaultOptions = {\n    // the id to add to the root element\n    id: [null, Type.STRING],\n\n    // input field name to use\n    name: ['filepond', Type.STRING],\n\n    // disable the field\n    disabled: [false, Type.BOOLEAN],\n\n    // classname to put on wrapper\n    className: [null, Type.STRING],\n\n    // is the field required\n    required: [false, Type.BOOLEAN],\n\n    // Allow media capture when value is set\n    captureMethod: [null, Type.STRING],\n    // - \"camera\", \"microphone\" or \"camcorder\",\n    // - Does not work with multiple on apple devices\n    // - If set, acceptedFileTypes must be made to match with media wildcard \"image/*\", \"audio/*\" or \"video/*\"\n\n    // sync `acceptedFileTypes` property with `accept` attribute\n    allowSyncAcceptAttribute: [true, Type.BOOLEAN],\n\n    // Feature toggles\n    allowDrop: [true, Type.BOOLEAN], // Allow dropping of files\n    allowBrowse: [true, Type.BOOLEAN], // Allow browsing the file system\n    allowPaste: [true, Type.BOOLEAN], // Allow pasting files\n    allowMultiple: [false, Type.BOOLEAN], // Allow multiple files (disabled by default, as multiple attribute is also required on input to allow multiple)\n    allowReplace: [true, Type.BOOLEAN], // Allow dropping a file on other file to replace it (only works when multiple is set to false)\n    allowRevert: [true, Type.BOOLEAN], // Allows user to revert file upload\n    allowRemove: [true, Type.BOOLEAN], // Allow user to remove a file\n    allowProcess: [true, Type.BOOLEAN], // Allows user to process a file, when set to false, this removes the file upload button\n    allowReorder: [false, Type.BOOLEAN], // Allow reordering of files\n    allowDirectoriesOnly: [false, Type.BOOLEAN], // Allow only selecting directories with browse (no support for filtering dnd at this point)\n\n    // Try store file if `server` not set\n    storeAsFile: [false, Type.BOOLEAN],\n\n    // Revert mode\n    forceRevert: [false, Type.BOOLEAN], // Set to 'force' to require the file to be reverted before removal\n\n    // Input requirements\n    maxFiles: [null, Type.INT], // Max number of files\n    checkValidity: [false, Type.BOOLEAN], // Enables custom validity messages\n\n    // Where to put file\n    itemInsertLocationFreedom: [true, Type.BOOLEAN], // Set to false to always add items to begin or end of list\n    itemInsertLocation: ['before', Type.STRING], // Default index in list to add items that have been dropped at the top of the list\n    itemInsertInterval: [75, Type.INT],\n\n    // Drag 'n Drop related\n    dropOnPage: [false, Type.BOOLEAN], // Allow dropping of files anywhere on page (prevents browser from opening file if dropped outside of Up)\n    dropOnElement: [true, Type.BOOLEAN], // Drop needs to happen on element (set to false to also load drops outside of Up)\n    dropValidation: [false, Type.BOOLEAN], // Enable or disable validating files on drop\n    ignoredFiles: [['.ds_store', 'thumbs.db', 'desktop.ini'], Type.ARRAY],\n\n    // Upload related\n    instantUpload: [true, Type.BOOLEAN], // Should upload files immediately on drop\n    maxParallelUploads: [2, Type.INT], // Maximum files to upload in parallel\n    allowMinimumUploadDuration: [true, Type.BOOLEAN], // if true uploads take at least 750 ms, this ensures the user sees the upload progress giving trust the upload actually happened\n\n    // Chunks\n    chunkUploads: [false, Type.BOOLEAN], // Enable chunked uploads\n    chunkForce: [false, Type.BOOLEAN], // Force use of chunk uploads even for files smaller than chunk size\n    chunkSize: [5000000, Type.INT], // Size of chunks (5MB default)\n    chunkRetryDelays: [[500, 1000, 3000], Type.ARRAY], // Amount of times to retry upload of a chunk when it fails\n\n    // The server api end points to use for uploading (see docs)\n    server: [null, Type.SERVER_API],\n\n    // File size calculations, can set to 1024, this is only used for display, properties use file size base 1000\n    fileSizeBase: [1000, Type.INT],\n\n    // Labels and status messages\n    labelFileSizeBytes: ['bytes', Type.STRING],\n    labelFileSizeKilobytes: ['KB', Type.STRING],\n    labelFileSizeMegabytes: ['MB', Type.STRING],\n    labelFileSizeGigabytes: ['GB', Type.STRING],\n\n    labelDecimalSeparator: [getDecimalSeparator(), Type.STRING], // Default is locale separator\n    labelThousandsSeparator: [getThousandsSeparator(), Type.STRING], // Default is locale separator\n\n    labelIdle: [\n        'Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>',\n        Type.STRING,\n    ],\n    labelInvalidField: ['Field contains invalid files', Type.STRING],\n    labelFileWaitingForSize: ['Waiting for size', Type.STRING],\n    labelFileSizeNotAvailable: ['Size not available', Type.STRING],\n    labelFileCountSingular: ['file in list', Type.STRING],\n    labelFileCountPlural: ['files in list', Type.STRING],\n    labelFileLoading: ['Loading', Type.STRING],\n    labelFileAdded: ['Added', Type.STRING], // assistive only\n    labelFileLoadError: ['Error during load', Type.STRING],\n    labelFileRemoved: ['Removed', Type.STRING], // assistive only\n    labelFileRemoveError: ['Error during remove', Type.STRING],\n    labelFileProcessing: ['Uploading', Type.STRING],\n    labelFileProcessingComplete: ['Upload complete', Type.STRING],\n    labelFileProcessingAborted: ['Upload cancelled', Type.STRING],\n    labelFileProcessingError: ['Error during upload', Type.STRING],\n    labelFileProcessingRevertError: ['Error during revert', Type.STRING],\n\n    labelTapToCancel: ['tap to cancel', Type.STRING],\n    labelTapToRetry: ['tap to retry', Type.STRING],\n    labelTapToUndo: ['tap to undo', Type.STRING],\n\n    labelButtonRemoveItem: ['Remove', Type.STRING],\n    labelButtonAbortItemLoad: ['Abort', Type.STRING],\n    labelButtonRetryItemLoad: ['Retry', Type.STRING],\n    labelButtonAbortItemProcessing: ['Cancel', Type.STRING],\n    labelButtonUndoItemProcessing: ['Undo', Type.STRING],\n    labelButtonRetryItemProcessing: ['Retry', Type.STRING],\n    labelButtonProcessItem: ['Upload', Type.STRING],\n\n    // make sure width and height plus viewpox are even numbers so icons are nicely centered\n    iconRemove: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.586 13l-2.293 2.293a1 1 0 0 0 1.414 1.414L13 14.414l2.293 2.293a1 1 0 0 0 1.414-1.414L14.414 13l2.293-2.293a1 1 0 0 0-1.414-1.414L13 11.586l-2.293-2.293a1 1 0 0 0-1.414 1.414L11.586 13z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconProcess: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 10.414v3.585a1 1 0 0 1-2 0v-3.585l-1.293 1.293a1 1 0 0 1-1.414-1.415l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.415L14 10.414zM9 18a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2H9z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>',\n        Type.STRING,\n    ],\n    iconRetry: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.81 9.185l-.038.02A4.997 4.997 0 0 0 8 13.683a5 5 0 0 0 5 5 5 5 0 0 0 5-5 1 1 0 0 1 2 0A7 7 0 1 1 9.722 7.496l-.842-.21a.999.999 0 1 1 .484-1.94l3.23.806c.535.133.86.675.73 1.21l-.804 3.233a.997.997 0 0 1-1.21.73.997.997 0 0 1-.73-1.21l.23-.928v-.002z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconUndo: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.185 10.81l.02-.038A4.997 4.997 0 0 1 13.683 8a5 5 0 0 1 5 5 5 5 0 0 1-5 5 1 1 0 0 0 0 2A7 7 0 1 0 7.496 9.722l-.21-.842a.999.999 0 1 0-1.94.484l.806 3.23c.133.535.675.86 1.21.73l3.233-.803a.997.997 0 0 0 .73-1.21.997.997 0 0 0-1.21-.73l-.928.23-.002-.001z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconDone: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.293 9.293a1 1 0 0 1 1.414 1.414l-7.002 7a1 1 0 0 1-1.414 0l-3.998-4a1 1 0 1 1 1.414-1.414L12 15.586l6.294-6.293z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n\n    // event handlers\n    oninit: [null, Type.FUNCTION],\n    onwarning: [null, Type.FUNCTION],\n    onerror: [null, Type.FUNCTION],\n    onactivatefile: [null, Type.FUNCTION],\n    oninitfile: [null, Type.FUNCTION],\n    onaddfilestart: [null, Type.FUNCTION],\n    onaddfileprogress: [null, Type.FUNCTION],\n    onaddfile: [null, Type.FUNCTION],\n    onprocessfilestart: [null, Type.FUNCTION],\n    onprocessfileprogress: [null, Type.FUNCTION],\n    onprocessfileabort: [null, Type.FUNCTION],\n    onprocessfilerevert: [null, Type.FUNCTION],\n    onprocessfile: [null, Type.FUNCTION],\n    onprocessfiles: [null, Type.FUNCTION],\n    onremovefile: [null, Type.FUNCTION],\n    onpreparefile: [null, Type.FUNCTION],\n    onupdatefiles: [null, Type.FUNCTION],\n    onreorderfiles: [null, Type.FUNCTION],\n\n    // hooks\n    beforeDropFile: [null, Type.FUNCTION],\n    beforeAddFile: [null, Type.FUNCTION],\n    beforeRemoveFile: [null, Type.FUNCTION],\n    beforePrepareFile: [null, Type.FUNCTION],\n\n    // styles\n    stylePanelLayout: [null, Type.STRING], // null 'integrated', 'compact', 'circle'\n    stylePanelAspectRatio: [null, Type.STRING], // null or '3:2' or 1\n    styleItemPanelAspectRatio: [null, Type.STRING],\n    styleButtonRemoveItemPosition: ['left', Type.STRING],\n    styleButtonProcessItemPosition: ['right', Type.STRING],\n    styleLoadIndicatorPosition: ['right', Type.STRING],\n    styleProgressIndicatorPosition: ['right', Type.STRING],\n    styleButtonRemoveItemAlign: [false, Type.BOOLEAN],\n\n    // custom initial files array\n    files: [[], Type.ARRAY],\n\n    // show support by displaying credits\n    credits: [['https://pqina.nl/', 'Powered by PQINA'], Type.ARRAY],\n};\n\nconst getItemByQuery = (items, query) => {\n    // just return first index\n    if (isEmpty(query)) {\n        return items[0] || null;\n    }\n\n    // query is index\n    if (isInt(query)) {\n        return items[query] || null;\n    }\n\n    // if query is item, get the id\n    if (typeof query === 'object') {\n        query = query.id;\n    }\n\n    // assume query is a string and return item by id\n    return items.find(item => item.id === query) || null;\n};\n\nconst getNumericAspectRatioFromString = aspectRatio => {\n    if (isEmpty(aspectRatio)) {\n        return aspectRatio;\n    }\n    if (/:/.test(aspectRatio)) {\n        const parts = aspectRatio.split(':');\n        return parts[1] / parts[0];\n    }\n    return parseFloat(aspectRatio);\n};\n\nconst getActiveItems = items => items.filter(item => !item.archived);\n\nconst Status = {\n    EMPTY: 0,\n    IDLE: 1, // waiting\n    ERROR: 2, // a file is in error state\n    BUSY: 3, // busy processing or loading\n    READY: 4, // all files uploaded\n};\n\nlet res = null;\nconst canUpdateFileInput = () => {\n    if (res === null) {\n        try {\n            const dataTransfer = new DataTransfer();\n            dataTransfer.items.add(new File(['hello world'], 'This_Works.txt'));\n            const el = document.createElement('input');\n            el.setAttribute('type', 'file');\n            el.files = dataTransfer.files;\n            res = el.files.length === 1;\n        } catch (err) {\n            res = false;\n        }\n    }\n    return res;\n};\n\nconst ITEM_ERROR = [\n    ItemStatus.LOAD_ERROR,\n    ItemStatus.PROCESSING_ERROR,\n    ItemStatus.PROCESSING_REVERT_ERROR,\n];\nconst ITEM_BUSY = [\n    ItemStatus.LOADING,\n    ItemStatus.PROCESSING,\n    ItemStatus.PROCESSING_QUEUED,\n    ItemStatus.INIT,\n];\nconst ITEM_READY = [ItemStatus.PROCESSING_COMPLETE];\n\nconst isItemInErrorState = item => ITEM_ERROR.includes(item.status);\nconst isItemInBusyState = item => ITEM_BUSY.includes(item.status);\nconst isItemInReadyState = item => ITEM_READY.includes(item.status);\n\nconst isAsync = state =>\n    isObject(state.options.server) &&\n    (isObject(state.options.server.process) || isFunction(state.options.server.process));\n\nconst queries = state => ({\n    GET_STATUS: () => {\n        const items = getActiveItems(state.items);\n\n        const { EMPTY, ERROR, BUSY, IDLE, READY } = Status;\n\n        if (items.length === 0) return EMPTY;\n\n        if (items.some(isItemInErrorState)) return ERROR;\n\n        if (items.some(isItemInBusyState)) return BUSY;\n\n        if (items.some(isItemInReadyState)) return READY;\n\n        return IDLE;\n    },\n\n    GET_ITEM: query => getItemByQuery(state.items, query),\n\n    GET_ACTIVE_ITEM: query => getItemByQuery(getActiveItems(state.items), query),\n\n    GET_ACTIVE_ITEMS: () => getActiveItems(state.items),\n\n    GET_ITEMS: () => state.items,\n\n    GET_ITEM_NAME: query => {\n        const item = getItemByQuery(state.items, query);\n        return item ? item.filename : null;\n    },\n\n    GET_ITEM_SIZE: query => {\n        const item = getItemByQuery(state.items, query);\n        return item ? item.fileSize : null;\n    },\n\n    GET_STYLES: () =>\n        Object.keys(state.options)\n            .filter(key => /^style/.test(key))\n            .map(option => ({\n                name: option,\n                value: state.options[option],\n            })),\n\n    GET_PANEL_ASPECT_RATIO: () => {\n        const isShapeCircle = /circle/.test(state.options.stylePanelLayout);\n        const aspectRatio = isShapeCircle\n            ? 1\n            : getNumericAspectRatioFromString(state.options.stylePanelAspectRatio);\n        return aspectRatio;\n    },\n\n    GET_ITEM_PANEL_ASPECT_RATIO: () => state.options.styleItemPanelAspectRatio,\n\n    GET_ITEMS_BY_STATUS: status =>\n        getActiveItems(state.items).filter(item => item.status === status),\n\n    GET_TOTAL_ITEMS: () => getActiveItems(state.items).length,\n\n    SHOULD_UPDATE_FILE_INPUT: () =>\n        state.options.storeAsFile && canUpdateFileInput() && !isAsync(state),\n\n    IS_ASYNC: () => isAsync(state),\n\n    GET_FILE_SIZE_LABELS: query => ({\n        labelBytes: query('GET_LABEL_FILE_SIZE_BYTES') || undefined,\n        labelKilobytes: query('GET_LABEL_FILE_SIZE_KILOBYTES') || undefined,\n        labelMegabytes: query('GET_LABEL_FILE_SIZE_MEGABYTES') || undefined,\n        labelGigabytes: query('GET_LABEL_FILE_SIZE_GIGABYTES') || undefined,\n    }),\n});\n\nconst hasRoomForItem = state => {\n    const count = getActiveItems(state.items).length;\n\n    // if cannot have multiple items, to add one item it should currently not contain items\n    if (!state.options.allowMultiple) {\n        return count === 0;\n    }\n\n    // if allows multiple items, we check if a max item count has been set, if not, there's no limit\n    const maxFileCount = state.options.maxFiles;\n    if (maxFileCount === null) {\n        return true;\n    }\n\n    // we check if the current count is smaller than the max count, if so, another file can still be added\n    if (count < maxFileCount) {\n        return true;\n    }\n\n    // no more room for another file\n    return false;\n};\n\nconst limit = (value, min, max) => Math.max(Math.min(max, value), min);\n\nconst arrayInsert = (arr, index, item) => arr.splice(index, 0, item);\n\nconst insertItem = (items, item, index) => {\n    if (isEmpty(item)) {\n        return null;\n    }\n\n    // if index is undefined, append\n    if (typeof index === 'undefined') {\n        items.push(item);\n        return item;\n    }\n\n    // limit the index to the size of the items array\n    index = limit(index, 0, items.length);\n\n    // add item to array\n    arrayInsert(items, index, item);\n\n    // expose\n    return item;\n};\n\nconst isBase64DataURI = str =>\n    /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i.test(\n        str\n    );\n\nconst getFilenameFromURL = url =>\n    `${url}`\n        .split('/')\n        .pop()\n        .split('?')\n        .shift();\n\nconst getExtensionFromFilename = name => name.split('.').pop();\n\nconst guesstimateExtension = type => {\n    // if no extension supplied, exit here\n    if (typeof type !== 'string') {\n        return '';\n    }\n\n    // get subtype\n    const subtype = type.split('/').pop();\n\n    // is svg subtype\n    if (/svg/.test(subtype)) {\n        return 'svg';\n    }\n\n    if (/zip|compressed/.test(subtype)) {\n        return 'zip';\n    }\n\n    if (/plain/.test(subtype)) {\n        return 'txt';\n    }\n\n    if (/msword/.test(subtype)) {\n        return 'doc';\n    }\n\n    // if is valid subtype\n    if (/[a-z]+/.test(subtype)) {\n        // always use jpg extension\n        if (subtype === 'jpeg') {\n            return 'jpg';\n        }\n\n        // return subtype\n        return subtype;\n    }\n\n    return '';\n};\n\nconst leftPad = (value, padding = '') => (padding + value).slice(-padding.length);\n\nconst getDateString = (date = new Date()) =>\n    `${date.getFullYear()}-${leftPad(date.getMonth() + 1, '00')}-${leftPad(\n        date.getDate(),\n        '00'\n    )}_${leftPad(date.getHours(), '00')}-${leftPad(date.getMinutes(), '00')}-${leftPad(\n        date.getSeconds(),\n        '00'\n    )}`;\n\nconst getFileFromBlob = (blob, filename, type = null, extension = null) => {\n    const file =\n        typeof type === 'string'\n            ? blob.slice(0, blob.size, type)\n            : blob.slice(0, blob.size, blob.type);\n    file.lastModifiedDate = new Date();\n\n    // copy relative path\n    if (blob._relativePath) file._relativePath = blob._relativePath;\n\n    // if blob has name property, use as filename if no filename supplied\n    if (!isString(filename)) {\n        filename = getDateString();\n    }\n\n    // if filename supplied but no extension and filename has extension\n    if (filename && extension === null && getExtensionFromFilename(filename)) {\n        file.name = filename;\n    } else {\n        extension = extension || guesstimateExtension(file.type);\n        file.name = filename + (extension ? '.' + extension : '');\n    }\n\n    return file;\n};\n\nconst getBlobBuilder = () => {\n    return (window.BlobBuilder =\n        window.BlobBuilder ||\n        window.WebKitBlobBuilder ||\n        window.MozBlobBuilder ||\n        window.MSBlobBuilder);\n};\n\nconst createBlob = (arrayBuffer, mimeType) => {\n    const BB = getBlobBuilder();\n\n    if (BB) {\n        const bb = new BB();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mimeType);\n    }\n\n    return new Blob([arrayBuffer], {\n        type: mimeType,\n    });\n};\n\nconst getBlobFromByteStringWithMimeType = (byteString, mimeType) => {\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    return createBlob(ab, mimeType);\n};\n\nconst getMimeTypeFromBase64DataURI = dataURI => {\n    return (/^data:(.+);/.exec(dataURI) || [])[1] || null;\n};\n\nconst getBase64DataFromBase64DataURI = dataURI => {\n    // get data part of string (remove data:image/jpeg...,)\n    const data = dataURI.split(',')[1];\n\n    // remove any whitespace as that causes InvalidCharacterError in IE\n    return data.replace(/\\s/g, '');\n};\n\nconst getByteStringFromBase64DataURI = dataURI => {\n    return atob(getBase64DataFromBase64DataURI(dataURI));\n};\n\nconst getBlobFromBase64DataURI = dataURI => {\n    const mimeType = getMimeTypeFromBase64DataURI(dataURI);\n    const byteString = getByteStringFromBase64DataURI(dataURI);\n\n    return getBlobFromByteStringWithMimeType(byteString, mimeType);\n};\n\nconst getFileFromBase64DataURI = (dataURI, filename, extension) => {\n    return getFileFromBlob(getBlobFromBase64DataURI(dataURI), filename, null, extension);\n};\n\nconst getFileNameFromHeader = header => {\n    // test if is content disposition header, if not exit\n    if (!/^content-disposition:/i.test(header)) return null;\n\n    // get filename parts\n    const matches = header\n        .split(/filename=|filename\\*=.+''/)\n        .splice(1)\n        .map(name => name.trim().replace(/^[\"']|[;\"']{0,2}$/g, ''))\n        .filter(name => name.length);\n\n    return matches.length ? decodeURI(matches[matches.length - 1]) : null;\n};\n\nconst getFileSizeFromHeader = header => {\n    if (/content-length:/i.test(header)) {\n        const size = header.match(/[0-9]+/)[0];\n        return size ? parseInt(size, 10) : null;\n    }\n    return null;\n};\n\nconst getTranfserIdFromHeader = header => {\n    if (/x-content-transfer-id:/i.test(header)) {\n        const id = (header.split(':')[1] || '').trim();\n        return id || null;\n    }\n    return null;\n};\n\nconst getFileInfoFromHeaders = headers => {\n    const info = {\n        source: null,\n        name: null,\n        size: null,\n    };\n\n    const rows = headers.split('\\n');\n    for (let header of rows) {\n        const name = getFileNameFromHeader(header);\n        if (name) {\n            info.name = name;\n            continue;\n        }\n\n        const size = getFileSizeFromHeader(header);\n        if (size) {\n            info.size = size;\n            continue;\n        }\n\n        const source = getTranfserIdFromHeader(header);\n        if (source) {\n            info.source = source;\n            continue;\n        }\n    }\n\n    return info;\n};\n\nconst createFileLoader = fetchFn => {\n    const state = {\n        source: null,\n        complete: false,\n        progress: 0,\n        size: null,\n        timestamp: null,\n        duration: 0,\n        request: null,\n    };\n\n    const getProgress = () => state.progress;\n    const abort = () => {\n        if (state.request && state.request.abort) {\n            state.request.abort();\n        }\n    };\n\n    // load source\n    const load = () => {\n        // get quick reference\n        const source = state.source;\n\n        api.fire('init', source);\n\n        // Load Files\n        if (source instanceof File) {\n            api.fire('load', source);\n        } else if (source instanceof Blob) {\n            // Load blobs, set default name to current date\n            api.fire('load', getFileFromBlob(source, source.name));\n        } else if (isBase64DataURI(source)) {\n            // Load base 64, set default name to current date\n            api.fire('load', getFileFromBase64DataURI(source));\n        } else {\n            // Deal as if is external URL, let's load it!\n            loadURL(source);\n        }\n    };\n\n    // loads a url\n    const loadURL = url => {\n        // is remote url and no fetch method supplied\n        if (!fetchFn) {\n            api.fire('error', {\n                type: 'error',\n                body: \"Can't load URL\",\n                code: 400,\n            });\n            return;\n        }\n\n        // set request start\n        state.timestamp = Date.now();\n\n        // load file\n        state.request = fetchFn(\n            url,\n            response => {\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // done!\n                state.complete = true;\n\n                // turn blob response into a file\n                if (response instanceof Blob) {\n                    response = getFileFromBlob(response, response.name || getFilenameFromURL(url));\n                }\n\n                api.fire(\n                    'load',\n                    // if has received blob, we go with blob, if no response, we return null\n                    response instanceof Blob ? response : response ? response.body : null\n                );\n            },\n            error => {\n                api.fire(\n                    'error',\n                    typeof error === 'string'\n                        ? {\n                              type: 'error',\n                              code: 0,\n                              body: error,\n                          }\n                        : error\n                );\n            },\n            (computable, current, total) => {\n                // collected some meta data already\n                if (total) {\n                    state.size = total;\n                }\n\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // if we can't compute progress, we're not going to fire progress events\n                if (!computable) {\n                    state.progress = null;\n                    return;\n                }\n\n                // update progress percentage\n                state.progress = current / total;\n\n                // expose\n                api.fire('progress', state.progress);\n            },\n            () => {\n                api.fire('abort');\n            },\n            response => {\n                const fileinfo = getFileInfoFromHeaders(\n                    typeof response === 'string' ? response : response.headers\n                );\n                api.fire('meta', {\n                    size: state.size || fileinfo.size,\n                    filename: fileinfo.name,\n                    source: fileinfo.source,\n                });\n            }\n        );\n    };\n\n    const api = {\n        ...on(),\n        setSource: source => (state.source = source),\n        getProgress, // file load progress\n        abort, // abort file load\n        load, // start load\n    };\n\n    return api;\n};\n\nconst isGet = method => /GET|HEAD/.test(method);\n\nconst sendRequest = (data, url, options) => {\n    const api = {\n        onheaders: () => {},\n        onprogress: () => {},\n        onload: () => {},\n        ontimeout: () => {},\n        onerror: () => {},\n        onabort: () => {},\n        abort: () => {\n            aborted = true;\n            xhr.abort();\n        },\n    };\n\n    // timeout identifier, only used when timeout is defined\n    let aborted = false;\n    let headersReceived = false;\n\n    // set default options\n    options = {\n        method: 'POST',\n        headers: {},\n        withCredentials: false,\n        ...options,\n    };\n\n    // encode url\n    url = encodeURI(url);\n\n    // if method is GET, add any received data to url\n\n    if (isGet(options.method) && data) {\n        url = `${url}${encodeURIComponent(typeof data === 'string' ? data : JSON.stringify(data))}`;\n    }\n\n    // create request\n    const xhr = new XMLHttpRequest();\n\n    // progress of load\n    const process = isGet(options.method) ? xhr : xhr.upload;\n    process.onprogress = e => {\n        // no progress event when aborted ( onprogress is called once after abort() )\n        if (aborted) {\n            return;\n        }\n\n        api.onprogress(e.lengthComputable, e.loaded, e.total);\n    };\n\n    // tries to get header info to the app as fast as possible\n    xhr.onreadystatechange = () => {\n        // not interesting in these states ('unsent' and 'openend' as they don't give us any additional info)\n        if (xhr.readyState < 2) {\n            return;\n        }\n\n        // no server response\n        if (xhr.readyState === 4 && xhr.status === 0) {\n            return;\n        }\n\n        if (headersReceived) {\n            return;\n        }\n\n        headersReceived = true;\n\n        // we've probably received some useful data in response headers\n        api.onheaders(xhr);\n    };\n\n    // load successful\n    xhr.onload = () => {\n        // is classified as valid response\n        if (xhr.status >= 200 && xhr.status < 300) {\n            api.onload(xhr);\n        } else {\n            api.onerror(xhr);\n        }\n    };\n\n    // error during load\n    xhr.onerror = () => api.onerror(xhr);\n\n    // request aborted\n    xhr.onabort = () => {\n        aborted = true;\n        api.onabort();\n    };\n\n    // request timeout\n    xhr.ontimeout = () => api.ontimeout(xhr);\n\n    // open up open up!\n    xhr.open(options.method, url, true);\n\n    // set timeout if defined (do it after open so IE11 plays ball)\n    if (isInt(options.timeout)) {\n        xhr.timeout = options.timeout;\n    }\n\n    // add headers\n    Object.keys(options.headers).forEach(key => {\n        const value = unescape(encodeURIComponent(options.headers[key]));\n        xhr.setRequestHeader(key, value);\n    });\n\n    // set type of response\n    if (options.responseType) {\n        xhr.responseType = options.responseType;\n    }\n\n    // set credentials\n    if (options.withCredentials) {\n        xhr.withCredentials = true;\n    }\n\n    // let's send our data\n    xhr.send(data);\n\n    return api;\n};\n\nconst createResponse = (type, code, body, headers) => ({\n    type,\n    code,\n    body,\n    headers,\n});\n\nconst createTimeoutResponse = cb => xhr => {\n    cb(createResponse('error', 0, 'Timeout', xhr.getAllResponseHeaders()));\n};\n\nconst hasQS = str => /\\?/.test(str);\nconst buildURL = (...parts) => {\n    let url = '';\n    parts.forEach(part => {\n        url += hasQS(url) && hasQS(part) ? part.replace(/\\?/, '&') : part;\n    });\n    return url;\n};\n\nconst createFetchFunction = (apiUrl = '', action) => {\n    // custom handler (should also handle file, load, error, progress and abort)\n    if (typeof action === 'function') {\n        return action;\n    }\n\n    // no action supplied\n    if (!action || !isString(action.url)) {\n        return null;\n    }\n\n    // set onload hanlder\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    // internal handler\n    return (url, load, error, progress, abort, headers) => {\n        // do local or remote request based on if the url is external\n        const request = sendRequest(url, buildURL(apiUrl, action.url), {\n            ...action,\n            responseType: 'blob',\n        });\n\n        request.onload = xhr => {\n            // get headers\n            const headers = xhr.getAllResponseHeaders();\n\n            // get filename\n            const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n            // create response\n            load(\n                createResponse(\n                    'load',\n                    xhr.status,\n                    action.method === 'HEAD'\n                        ? null\n                        : getFileFromBlob(onload(xhr.response), filename),\n                    headers\n                )\n            );\n        };\n\n        request.onerror = xhr => {\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.onheaders = xhr => {\n            headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n        };\n\n        request.ontimeout = createTimeoutResponse(error);\n        request.onprogress = progress;\n        request.onabort = abort;\n\n        // should return request\n        return request;\n    };\n};\n\nconst ChunkStatus = {\n    QUEUED: 0,\n    COMPLETE: 1,\n    PROCESSING: 2,\n    ERROR: 3,\n    WAITING: 4,\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort, transfer, options) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\n\n// apiUrl, action, name, file, metadata, load, error, progress, abort, transfer, options\nconst processFileChunked = (\n    apiUrl,\n    action,\n    name,\n    file,\n    metadata,\n    load,\n    error,\n    progress,\n    abort,\n    transfer,\n    options\n) => {\n    // all chunks\n    const chunks = [];\n    const { chunkTransferId, chunkServer, chunkSize, chunkRetryDelays } = options;\n\n    // default state\n    const state = {\n        serverId: chunkTransferId,\n        aborted: false,\n    };\n\n    // set onload handlers\n    const ondata = action.ondata || (fd => fd);\n    const onload =\n        action.onload ||\n        ((xhr, method) =>\n            method === 'HEAD' ? xhr.getResponseHeader('Upload-Offset') : xhr.response);\n    const onerror = action.onerror || (res => null);\n\n    // create server hook\n    const requestTransferId = cb => {\n        const formData = new FormData();\n\n        // add metadata under same name\n        if (isObject(metadata)) formData.append(name, JSON.stringify(metadata));\n\n        const headers =\n            typeof action.headers === 'function'\n                ? action.headers(file, metadata)\n                : {\n                      ...action.headers,\n                      'Upload-Length': file.size,\n                  };\n\n        const requestParams = {\n            ...action,\n            headers,\n        };\n\n        // send request object\n        const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n\n        request.onload = xhr => cb(onload(xhr, requestParams.method));\n\n        request.onerror = xhr =>\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n\n        request.ontimeout = createTimeoutResponse(error);\n    };\n\n    const requestTransferOffset = cb => {\n        const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n\n        const headers =\n            typeof action.headers === 'function'\n                ? action.headers(state.serverId)\n                : {\n                      ...action.headers,\n                  };\n\n        const requestParams = {\n            headers,\n            method: 'HEAD',\n        };\n\n        const request = sendRequest(null, requestUrl, requestParams);\n\n        request.onload = xhr => cb(onload(xhr, requestParams.method));\n\n        request.onerror = xhr =>\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n\n        request.ontimeout = createTimeoutResponse(error);\n    };\n\n    // create chunks\n    const lastChunkIndex = Math.floor(file.size / chunkSize);\n    for (let i = 0; i <= lastChunkIndex; i++) {\n        const offset = i * chunkSize;\n        const data = file.slice(offset, offset + chunkSize, 'application/offset+octet-stream');\n        chunks[i] = {\n            index: i,\n            size: data.size,\n            offset,\n            data,\n            file,\n            progress: 0,\n            retries: [...chunkRetryDelays],\n            status: ChunkStatus.QUEUED,\n            error: null,\n            request: null,\n            timeout: null,\n        };\n    }\n\n    const completeProcessingChunks = () => load(state.serverId);\n\n    const canProcessChunk = chunk =>\n        chunk.status === ChunkStatus.QUEUED || chunk.status === ChunkStatus.ERROR;\n\n    const processChunk = chunk => {\n        // processing is paused, wait here\n        if (state.aborted) return;\n\n        // get next chunk to process\n        chunk = chunk || chunks.find(canProcessChunk);\n\n        // no more chunks to process\n        if (!chunk) {\n            // all done?\n            if (chunks.every(chunk => chunk.status === ChunkStatus.COMPLETE)) {\n                completeProcessingChunks();\n            }\n\n            // no chunk to handle\n            return;\n        }\n\n        // now processing this chunk\n        chunk.status = ChunkStatus.PROCESSING;\n        chunk.progress = null;\n\n        // allow parsing of formdata\n        const ondata = chunkServer.ondata || (fd => fd);\n        const onerror = chunkServer.onerror || (res => null);\n\n        // send request object\n        const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n\n        const headers =\n            typeof chunkServer.headers === 'function'\n                ? chunkServer.headers(chunk)\n                : {\n                      ...chunkServer.headers,\n                      'Content-Type': 'application/offset+octet-stream',\n                      'Upload-Offset': chunk.offset,\n                      'Upload-Length': file.size,\n                      'Upload-Name': file.name,\n                  };\n\n        const request = (chunk.request = sendRequest(ondata(chunk.data), requestUrl, {\n            ...chunkServer,\n            headers,\n        }));\n\n        request.onload = () => {\n            // done!\n            chunk.status = ChunkStatus.COMPLETE;\n\n            // remove request reference\n            chunk.request = null;\n\n            // start processing more chunks\n            processChunks();\n        };\n\n        request.onprogress = (lengthComputable, loaded, total) => {\n            chunk.progress = lengthComputable ? loaded : null;\n            updateTotalProgress();\n        };\n\n        request.onerror = xhr => {\n            chunk.status = ChunkStatus.ERROR;\n            chunk.request = null;\n            chunk.error = onerror(xhr.response) || xhr.statusText;\n            if (!retryProcessChunk(chunk)) {\n                error(\n                    createResponse(\n                        'error',\n                        xhr.status,\n                        onerror(xhr.response) || xhr.statusText,\n                        xhr.getAllResponseHeaders()\n                    )\n                );\n            }\n        };\n\n        request.ontimeout = xhr => {\n            chunk.status = ChunkStatus.ERROR;\n            chunk.request = null;\n            if (!retryProcessChunk(chunk)) {\n                createTimeoutResponse(error)(xhr);\n            }\n        };\n\n        request.onabort = () => {\n            chunk.status = ChunkStatus.QUEUED;\n            chunk.request = null;\n            abort();\n        };\n    };\n\n    const retryProcessChunk = chunk => {\n        // no more retries left\n        if (chunk.retries.length === 0) return false;\n\n        // new retry\n        chunk.status = ChunkStatus.WAITING;\n        clearTimeout(chunk.timeout);\n        chunk.timeout = setTimeout(() => {\n            processChunk(chunk);\n        }, chunk.retries.shift());\n\n        // we're going to retry\n        return true;\n    };\n\n    const updateTotalProgress = () => {\n        // calculate total progress fraction\n        const totalBytesTransfered = chunks.reduce((p, chunk) => {\n            if (p === null || chunk.progress === null) return null;\n            return p + chunk.progress;\n        }, 0);\n\n        // can't compute progress\n        if (totalBytesTransfered === null) return progress(false, 0, 0);\n\n        // calculate progress values\n        const totalSize = chunks.reduce((total, chunk) => total + chunk.size, 0);\n\n        // can update progress indicator\n        progress(true, totalBytesTransfered, totalSize);\n    };\n\n    // process new chunks\n    const processChunks = () => {\n        const totalProcessing = chunks.filter(chunk => chunk.status === ChunkStatus.PROCESSING)\n            .length;\n        if (totalProcessing >= 1) return;\n        processChunk();\n    };\n\n    const abortChunks = () => {\n        chunks.forEach(chunk => {\n            clearTimeout(chunk.timeout);\n            if (chunk.request) {\n                chunk.request.abort();\n            }\n        });\n    };\n\n    // let's go!\n    if (!state.serverId) {\n        requestTransferId(serverId => {\n            // stop here if aborted, might have happened in between request and callback\n            if (state.aborted) return;\n\n            // pass back to item so we can use it if something goes wrong\n            transfer(serverId);\n\n            // store internally\n            state.serverId = serverId;\n            processChunks();\n        });\n    } else {\n        requestTransferOffset(offset => {\n            // stop here if aborted, might have happened in between request and callback\n            if (state.aborted) return;\n\n            // mark chunks with lower offset as complete\n            chunks\n                .filter(chunk => chunk.offset < offset)\n                .forEach(chunk => {\n                    chunk.status = ChunkStatus.COMPLETE;\n                    chunk.progress = chunk.size;\n                });\n\n            // continue processing\n            processChunks();\n        });\n    }\n\n    return {\n        abort: () => {\n            state.aborted = true;\n            abortChunks();\n        },\n    };\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\nconst createFileProcessorFunction = (apiUrl, action, name, options) => (\n    file,\n    metadata,\n    load,\n    error,\n    progress,\n    abort,\n    transfer\n) => {\n    // no file received\n    if (!file) return;\n\n    // if was passed a file, and we can chunk it, exit here\n    const canChunkUpload = options.chunkUploads;\n    const shouldChunkUpload = canChunkUpload && file.size > options.chunkSize;\n    const willChunkUpload = canChunkUpload && (shouldChunkUpload || options.chunkForce);\n    if (file instanceof Blob && willChunkUpload)\n        return processFileChunked(\n            apiUrl,\n            action,\n            name,\n            file,\n            metadata,\n            load,\n            error,\n            progress,\n            abort,\n            transfer,\n            options\n        );\n\n    // set handlers\n    const ondata = action.ondata || (fd => fd);\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    const headers =\n        typeof action.headers === 'function'\n            ? action.headers(file, metadata) || {}\n            : {\n                  ...action.headers,\n              };\n\n    const requestParams = {\n        ...action,\n        headers,\n    };\n\n    // create formdata object\n    var formData = new FormData();\n\n    // add metadata under same name\n    if (isObject(metadata)) {\n        formData.append(name, JSON.stringify(metadata));\n    }\n\n    // Turn into an array of objects so no matter what the input, we can handle it the same way\n    (file instanceof Blob ? [{ name: null, file }] : file).forEach(item => {\n        formData.append(\n            name,\n            item.file,\n            item.name === null ? item.file.name : `${item.name}${item.file.name}`\n        );\n    });\n\n    // send request object\n    const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n    request.onload = xhr => {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n    };\n\n    request.onerror = xhr => {\n        error(\n            createResponse(\n                'error',\n                xhr.status,\n                onerror(xhr.response) || xhr.statusText,\n                xhr.getAllResponseHeaders()\n            )\n        );\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n};\n\nconst createProcessorFunction = (apiUrl = '', action, name, options) => {\n    // custom handler (should also handle file, load, error, progress and abort)\n    if (typeof action === 'function') return (...params) => action(name, ...params, options);\n\n    // no action supplied\n    if (!action || !isString(action.url)) return null;\n\n    // internal handler\n    return createFileProcessorFunction(apiUrl, action, name, options);\n};\n\n/*\n function signature:\n (uniqueFileId, load, error) => { }\n */\nconst createRevertFunction = (apiUrl = '', action) => {\n    // is custom implementation\n    if (typeof action === 'function') {\n        return action;\n    }\n\n    // no action supplied, return stub function, interface will work, but file won't be removed\n    if (!action || !isString(action.url)) {\n        return (uniqueFileId, load) => load();\n    }\n\n    // set onload hanlder\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    // internal implementation\n    return (uniqueFileId, load, error) => {\n        const request = sendRequest(\n            uniqueFileId,\n            apiUrl + action.url,\n            action // contains method, headers and withCredentials properties\n        );\n        request.onload = xhr => {\n            load(\n                createResponse(\n                    'load',\n                    xhr.status,\n                    onload(xhr.response),\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.onerror = xhr => {\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.ontimeout = createTimeoutResponse(error);\n\n        return request;\n    };\n};\n\nconst getRandomNumber = (min = 0, max = 1) => min + Math.random() * (max - min);\n\nconst createPerceivedPerformanceUpdater = (\n    cb,\n    duration = 1000,\n    offset = 0,\n    tickMin = 25,\n    tickMax = 250\n) => {\n    let timeout = null;\n    const start = Date.now();\n\n    const tick = () => {\n        let runtime = Date.now() - start;\n        let delay = getRandomNumber(tickMin, tickMax);\n\n        if (runtime + delay > duration) {\n            delay = runtime + delay - duration;\n        }\n\n        let progress = runtime / duration;\n        if (progress >= 1 || document.hidden) {\n            cb(1);\n            return;\n        }\n\n        cb(progress);\n\n        timeout = setTimeout(tick, delay);\n    };\n\n    if (duration > 0) tick();\n\n    return {\n        clear: () => {\n            clearTimeout(timeout);\n        },\n    };\n};\n\nconst createFileProcessor = (processFn, options) => {\n    const state = {\n        complete: false,\n        perceivedProgress: 0,\n        perceivedPerformanceUpdater: null,\n        progress: null,\n        timestamp: null,\n        perceivedDuration: 0,\n        duration: 0,\n        request: null,\n        response: null,\n    };\n\n    const { allowMinimumUploadDuration } = options;\n\n    const process = (file, metadata) => {\n        const progressFn = () => {\n            // we've not yet started the real download, stop here\n            // the request might not go through, for instance, there might be some server trouble\n            // if state.progress is null, the server does not allow computing progress and we show the spinner instead\n            if (state.duration === 0 || state.progress === null) return;\n\n            // as we're now processing, fire the progress event\n            api.fire('progress', api.getProgress());\n        };\n\n        const completeFn = () => {\n            state.complete = true;\n            api.fire('load-perceived', state.response.body);\n        };\n\n        // let's start processing\n        api.fire('start');\n\n        // set request start\n        state.timestamp = Date.now();\n\n        // create perceived performance progress indicator\n        state.perceivedPerformanceUpdater = createPerceivedPerformanceUpdater(\n            progress => {\n                state.perceivedProgress = progress;\n                state.perceivedDuration = Date.now() - state.timestamp;\n\n                progressFn();\n\n                // if fake progress is done, and a response has been received,\n                // and we've not yet called the complete method\n                if (state.response && state.perceivedProgress === 1 && !state.complete) {\n                    // we done!\n                    completeFn();\n                }\n            },\n            // random delay as in a list of files you start noticing\n            // files uploading at the exact same speed\n            allowMinimumUploadDuration ? getRandomNumber(750, 1500) : 0\n        );\n\n        // remember request so we can abort it later\n        state.request = processFn(\n            // the file to process\n            file,\n\n            // the metadata to send along\n            metadata,\n\n            // callbacks (load, error, progress, abort, transfer)\n            // load expects the body to be a server id if\n            // you want to make use of revert\n            response => {\n                // we put the response in state so we can access\n                // it outside of this method\n                state.response = isObject(response)\n                    ? response\n                    : {\n                          type: 'load',\n                          code: 200,\n                          body: `${response}`,\n                          headers: {},\n                      };\n\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // force progress to 1 as we're now done\n                state.progress = 1;\n\n                // actual load is done let's share results\n                api.fire('load', state.response.body);\n\n                // we are really done\n                // if perceived progress is 1 ( wait for perceived progress to complete )\n                // or if server does not support progress ( null )\n                if (\n                    !allowMinimumUploadDuration ||\n                    (allowMinimumUploadDuration && state.perceivedProgress === 1)\n                ) {\n                    completeFn();\n                }\n            },\n\n            // error is expected to be an object with type, code, body\n            error => {\n                // cancel updater\n                state.perceivedPerformanceUpdater.clear();\n\n                // update others about this error\n                api.fire(\n                    'error',\n                    isObject(error)\n                        ? error\n                        : {\n                              type: 'error',\n                              code: 0,\n                              body: `${error}`,\n                          }\n                );\n            },\n\n            // actual processing progress\n            (computable, current, total) => {\n                // update actual duration\n                state.duration = Date.now() - state.timestamp;\n\n                // update actual progress\n                state.progress = computable ? current / total : null;\n\n                progressFn();\n            },\n\n            // abort does not expect a value\n            () => {\n                // stop updater\n                state.perceivedPerformanceUpdater.clear();\n\n                // fire the abort event so we can switch visuals\n                api.fire('abort', state.response ? state.response.body : null);\n            },\n\n            // register the id for this transfer\n            transferId => {\n                api.fire('transfer', transferId);\n            }\n        );\n    };\n\n    const abort = () => {\n        // no request running, can't abort\n        if (!state.request) return;\n\n        // stop updater\n        state.perceivedPerformanceUpdater.clear();\n\n        // abort actual request\n        if (state.request.abort) state.request.abort();\n\n        // if has response object, we've completed the request\n        state.complete = true;\n    };\n\n    const reset = () => {\n        abort();\n        state.complete = false;\n        state.perceivedProgress = 0;\n        state.progress = 0;\n        state.timestamp = null;\n        state.perceivedDuration = 0;\n        state.duration = 0;\n        state.request = null;\n        state.response = null;\n    };\n\n    const getProgress = allowMinimumUploadDuration\n        ? () => (state.progress ? Math.min(state.progress, state.perceivedProgress) : null)\n        : () => state.progress || null;\n\n    const getDuration = allowMinimumUploadDuration\n        ? () => Math.min(state.duration, state.perceivedDuration)\n        : () => state.duration;\n\n    const api = {\n        ...on(),\n        process, // start processing file\n        abort, // abort active process request\n        getProgress,\n        getDuration,\n        reset,\n    };\n\n    return api;\n};\n\nconst getFilenameWithoutExtension = name => name.substring(0, name.lastIndexOf('.')) || name;\n\nconst createFileStub = source => {\n    let data = [source.name, source.size, source.type];\n\n    // is blob or base64, then we need to set the name\n    if (source instanceof Blob || isBase64DataURI(source)) {\n        data[0] = source.name || getDateString();\n    } else if (isBase64DataURI(source)) {\n        // if is base64 data uri we need to determine the average size and type\n        data[1] = source.length;\n        data[2] = getMimeTypeFromBase64DataURI(source);\n    } else if (isString(source)) {\n        // url\n        data[0] = getFilenameFromURL(source);\n        data[1] = 0;\n        data[2] = 'application/octet-stream';\n    }\n\n    return {\n        name: data[0],\n        size: data[1],\n        type: data[2],\n    };\n};\n\nconst isFile = value => !!(value instanceof File || (value instanceof Blob && value.name));\n\nconst deepCloneObject = src => {\n    if (!isObject(src)) return src;\n    const target = isArray(src) ? [] : {};\n    for (const key in src) {\n        if (!src.hasOwnProperty(key)) continue;\n        const v = src[key];\n        target[key] = v && isObject(v) ? deepCloneObject(v) : v;\n    }\n    return target;\n};\n\nconst createItem = (origin = null, serverFileReference = null, file = null) => {\n    // unique id for this item, is used to identify the item across views\n    const id = getUniqueId();\n\n    /**\n     * Internal item state\n     */\n    const state = {\n        // is archived\n        archived: false,\n\n        // if is frozen, no longer fires events\n        frozen: false,\n\n        // removed from view\n        released: false,\n\n        // original source\n        source: null,\n\n        // file model reference\n        file,\n\n        // id of file on server\n        serverFileReference,\n\n        // id of file transfer on server\n        transferId: null,\n\n        // is aborted\n        processingAborted: false,\n\n        // current item status\n        status: serverFileReference ? ItemStatus.PROCESSING_COMPLETE : ItemStatus.INIT,\n\n        // active processes\n        activeLoader: null,\n        activeProcessor: null,\n    };\n\n    // callback used when abort processing is called to link back to the resolve method\n    let abortProcessingRequestComplete = null;\n\n    /**\n     * Externally added item metadata\n     */\n    const metadata = {};\n\n    // item data\n    const setStatus = status => (state.status = status);\n\n    // fire event unless the item has been archived\n    const fire = (event, ...params) => {\n        if (state.released || state.frozen) return;\n        api.fire(event, ...params);\n    };\n\n    // file data\n    const getFileExtension = () => getExtensionFromFilename(state.file.name);\n    const getFileType = () => state.file.type;\n    const getFileSize = () => state.file.size;\n    const getFile = () => state.file;\n\n    //\n    // logic to load a file\n    //\n    const load = (source, loader, onload) => {\n        // remember the original item source\n        state.source = source;\n\n        // source is known\n        api.fireSync('init');\n\n        // file stub is already there\n        if (state.file) {\n            api.fireSync('load-skip');\n            return;\n        }\n\n        // set a stub file object while loading the actual data\n        state.file = createFileStub(source);\n\n        // starts loading\n        loader.on('init', () => {\n            fire('load-init');\n        });\n\n        // we'eve received a size indication, let's update the stub\n        loader.on('meta', meta => {\n            // set size of file stub\n            state.file.size = meta.size;\n\n            // set name of file stub\n            state.file.filename = meta.filename;\n\n            // if has received source, we done\n            if (meta.source) {\n                origin = FileOrigin.LIMBO;\n                state.serverFileReference = meta.source;\n                state.status = ItemStatus.PROCESSING_COMPLETE;\n            }\n\n            // size has been updated\n            fire('load-meta');\n        });\n\n        // the file is now loading we need to update the progress indicators\n        loader.on('progress', progress => {\n            setStatus(ItemStatus.LOADING);\n\n            fire('load-progress', progress);\n        });\n\n        // an error was thrown while loading the file, we need to switch to error state\n        loader.on('error', error => {\n            setStatus(ItemStatus.LOAD_ERROR);\n\n            fire('load-request-error', error);\n        });\n\n        // user or another process aborted the file load (cannot retry)\n        loader.on('abort', () => {\n            setStatus(ItemStatus.INIT);\n            fire('load-abort');\n        });\n\n        // done loading\n        loader.on('load', file => {\n            // as we've now loaded the file the loader is no longer required\n            state.activeLoader = null;\n\n            // called when file has loaded succesfully\n            const success = result => {\n                // set (possibly) transformed file\n                state.file = isFile(result) ? result : state.file;\n\n                // file received\n                if (origin === FileOrigin.LIMBO && state.serverFileReference) {\n                    setStatus(ItemStatus.PROCESSING_COMPLETE);\n                } else {\n                    setStatus(ItemStatus.IDLE);\n                }\n\n                fire('load');\n            };\n\n            const error = result => {\n                // set original file\n                state.file = file;\n                fire('load-meta');\n\n                setStatus(ItemStatus.LOAD_ERROR);\n                fire('load-file-error', result);\n            };\n\n            // if we already have a server file reference, we don't need to call the onload method\n            if (state.serverFileReference) {\n                success(file);\n                return;\n            }\n\n            // no server id, let's give this file the full treatment\n            onload(file, success, error);\n        });\n\n        // set loader source data\n        loader.setSource(source);\n\n        // set as active loader\n        state.activeLoader = loader;\n\n        // load the source data\n        loader.load();\n    };\n\n    const retryLoad = () => {\n        if (!state.activeLoader) {\n            return;\n        }\n        state.activeLoader.load();\n    };\n\n    const abortLoad = () => {\n        if (state.activeLoader) {\n            state.activeLoader.abort();\n            return;\n        }\n        setStatus(ItemStatus.INIT);\n        fire('load-abort');\n    };\n\n    //\n    // logic to process a file\n    //\n    const process = (processor, onprocess) => {\n        // processing was aborted\n        if (state.processingAborted) {\n            state.processingAborted = false;\n            return;\n        }\n\n        // now processing\n        setStatus(ItemStatus.PROCESSING);\n\n        // reset abort callback\n        abortProcessingRequestComplete = null;\n\n        // if no file loaded we'll wait for the load event\n        if (!(state.file instanceof Blob)) {\n            api.on('load', () => {\n                process(processor, onprocess);\n            });\n            return;\n        }\n\n        // setup processor\n        processor.on('load', serverFileReference => {\n            // need this id to be able to revert the upload\n            state.transferId = null;\n            state.serverFileReference = serverFileReference;\n        });\n\n        // register transfer id\n        processor.on('transfer', transferId => {\n            // need this id to be able to revert the upload\n            state.transferId = transferId;\n        });\n\n        processor.on('load-perceived', serverFileReference => {\n            // no longer required\n            state.activeProcessor = null;\n\n            // need this id to be able to rever the upload\n            state.transferId = null;\n            state.serverFileReference = serverFileReference;\n\n            setStatus(ItemStatus.PROCESSING_COMPLETE);\n            fire('process-complete', serverFileReference);\n        });\n\n        processor.on('start', () => {\n            fire('process-start');\n        });\n\n        processor.on('error', error => {\n            state.activeProcessor = null;\n            setStatus(ItemStatus.PROCESSING_ERROR);\n            fire('process-error', error);\n        });\n\n        processor.on('abort', serverFileReference => {\n            state.activeProcessor = null;\n\n            // if file was uploaded but processing was cancelled during perceived processor time store file reference\n            state.serverFileReference = serverFileReference;\n\n            setStatus(ItemStatus.IDLE);\n            fire('process-abort');\n\n            // has timeout so doesn't interfere with remove action\n            if (abortProcessingRequestComplete) {\n                abortProcessingRequestComplete();\n            }\n        });\n\n        processor.on('progress', progress => {\n            fire('process-progress', progress);\n        });\n\n        // when successfully transformed\n        const success = file => {\n            // if was archived in the mean time, don't process\n            if (state.archived) return;\n\n            // process file!\n            processor.process(file, { ...metadata });\n        };\n\n        // something went wrong during transform phase\n        const error = console.error;\n\n        // start processing the file\n        onprocess(state.file, success, error);\n\n        // set as active processor\n        state.activeProcessor = processor;\n    };\n\n    const requestProcessing = () => {\n        state.processingAborted = false;\n        setStatus(ItemStatus.PROCESSING_QUEUED);\n    };\n\n    const abortProcessing = () =>\n        new Promise(resolve => {\n            if (!state.activeProcessor) {\n                state.processingAborted = true;\n\n                setStatus(ItemStatus.IDLE);\n                fire('process-abort');\n\n                resolve();\n                return;\n            }\n\n            abortProcessingRequestComplete = () => {\n                resolve();\n            };\n\n            state.activeProcessor.abort();\n        });\n\n    //\n    // logic to revert a processed file\n    //\n    const revert = (revertFileUpload, forceRevert) =>\n        new Promise((resolve, reject) => {\n            // a completed upload will have a serverFileReference, a failed chunked upload where\n            // getting a serverId succeeded but >=0 chunks have been uploaded will have transferId set\n            const serverTransferId =\n                state.serverFileReference !== null ? state.serverFileReference : state.transferId;\n\n            // cannot revert without a server id for this process\n            if (serverTransferId === null) {\n                resolve();\n                return;\n            }\n\n            // revert the upload (fire and forget)\n            revertFileUpload(\n                serverTransferId,\n                () => {\n                    // reset file server id and transfer id as now it's not available on the server\n                    state.serverFileReference = null;\n                    state.transferId = null;\n                    resolve();\n                },\n                error => {\n                    // don't set error state when reverting is optional, it will always resolve\n                    if (!forceRevert) {\n                        resolve();\n                        return;\n                    }\n\n                    // oh no errors\n                    setStatus(ItemStatus.PROCESSING_REVERT_ERROR);\n                    fire('process-revert-error');\n                    reject(error);\n                }\n            );\n\n            // fire event\n            setStatus(ItemStatus.IDLE);\n            fire('process-revert');\n        });\n\n    // exposed methods\n    const setMetadata = (key, value, silent) => {\n        const keys = key.split('.');\n        const root = keys[0];\n        const last = keys.pop();\n        let data = metadata;\n        keys.forEach(key => (data = data[key]));\n\n        // compare old value against new value, if they're the same, we're not updating\n        if (JSON.stringify(data[last]) === JSON.stringify(value)) return;\n\n        // update value\n        data[last] = value;\n\n        // fire update\n        fire('metadata-update', {\n            key: root,\n            value: metadata[root],\n            silent,\n        });\n    };\n\n    const getMetadata = key => deepCloneObject(key ? metadata[key] : metadata);\n\n    const api = {\n        id: { get: () => id },\n        origin: { get: () => origin, set: value => (origin = value) },\n        serverId: { get: () => state.serverFileReference },\n        transferId: { get: () => state.transferId },\n        status: { get: () => state.status },\n        filename: { get: () => state.file.name },\n        filenameWithoutExtension: { get: () => getFilenameWithoutExtension(state.file.name) },\n        fileExtension: { get: getFileExtension },\n        fileType: { get: getFileType },\n        fileSize: { get: getFileSize },\n        file: { get: getFile },\n        relativePath: { get: () => state.file._relativePath },\n\n        source: { get: () => state.source },\n\n        getMetadata,\n        setMetadata: (key, value, silent) => {\n            if (isObject(key)) {\n                const data = key;\n                Object.keys(data).forEach(key => {\n                    setMetadata(key, data[key], value);\n                });\n                return key;\n            }\n            setMetadata(key, value, silent);\n            return value;\n        },\n\n        extend: (name, handler) => (itemAPI[name] = handler),\n\n        abortLoad,\n        retryLoad,\n        requestProcessing,\n        abortProcessing,\n\n        load,\n        process,\n        revert,\n\n        ...on(),\n\n        freeze: () => (state.frozen = true),\n\n        release: () => (state.released = true),\n        released: { get: () => state.released },\n\n        archive: () => (state.archived = true),\n        archived: { get: () => state.archived },\n    };\n\n    // create it here instead of returning it instantly so we can extend it later\n    const itemAPI = createObject(api);\n\n    return itemAPI;\n};\n\nconst getItemIndexByQuery = (items, query) => {\n    // just return first index\n    if (isEmpty(query)) {\n        return 0;\n    }\n\n    // invalid queries\n    if (!isString(query)) {\n        return -1;\n    }\n\n    // return item by id (or -1 if not found)\n    return items.findIndex(item => item.id === query);\n};\n\nconst getItemById = (items, itemId) => {\n    const index = getItemIndexByQuery(items, itemId);\n    if (index < 0) {\n        return;\n    }\n    return items[index] || null;\n};\n\nconst fetchBlob = (url, load, error, progress, abort, headers) => {\n    const request = sendRequest(null, url, {\n        method: 'GET',\n        responseType: 'blob',\n    });\n\n    request.onload = xhr => {\n        // get headers\n        const headers = xhr.getAllResponseHeaders();\n\n        // get filename\n        const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n        // create response\n        load(createResponse('load', xhr.status, getFileFromBlob(xhr.response, filename), headers));\n    };\n\n    request.onerror = xhr => {\n        error(createResponse('error', xhr.status, xhr.statusText, xhr.getAllResponseHeaders()));\n    };\n\n    request.onheaders = xhr => {\n        headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n};\n\nconst getDomainFromURL = url => {\n    if (url.indexOf('//') === 0) {\n        url = location.protocol + url;\n    }\n    return url\n        .toLowerCase()\n        .replace('blob:', '')\n        .replace(/([a-z])?:\\/\\//, '$1')\n        .split('/')[0];\n};\n\nconst isExternalURL = url =>\n    (url.indexOf(':') > -1 || url.indexOf('//') > -1) &&\n    getDomainFromURL(location.href) !== getDomainFromURL(url);\n\nconst dynamicLabel = label => (...params) => (isFunction(label) ? label(...params) : label);\n\nconst isMockItem = item => !isFile(item.file);\n\nconst listUpdated = (dispatch, state) => {\n    clearTimeout(state.listUpdateTimeout);\n    state.listUpdateTimeout = setTimeout(() => {\n        dispatch('DID_UPDATE_ITEMS', { items: getActiveItems(state.items) });\n    }, 0);\n};\n\nconst optionalPromise = (fn, ...params) =>\n    new Promise(resolve => {\n        if (!fn) {\n            return resolve(true);\n        }\n\n        const result = fn(...params);\n\n        if (result == null) {\n            return resolve(true);\n        }\n\n        if (typeof result === 'boolean') {\n            return resolve(result);\n        }\n\n        if (typeof result.then === 'function') {\n            result.then(resolve);\n        }\n    });\n\nconst sortItems = (state, compare) => {\n    state.items.sort((a, b) => compare(createItemAPI(a), createItemAPI(b)));\n};\n\n// returns item based on state\nconst getItemByQueryFromState = (state, itemHandler) => ({\n    query,\n    success = () => {},\n    failure = () => {},\n    ...options\n} = {}) => {\n    const item = getItemByQuery(state.items, query);\n    if (!item) {\n        failure({\n            error: createResponse('error', 0, 'Item not found'),\n            file: null,\n        });\n        return;\n    }\n    itemHandler(item, success, failure, options || {});\n};\n\nconst actions = (dispatch, query, state) => ({\n    /**\n     * Aborts all ongoing processes\n     */\n    ABORT_ALL: () => {\n        getActiveItems(state.items).forEach(item => {\n            item.freeze();\n            item.abortLoad();\n            item.abortProcessing();\n        });\n    },\n\n    /**\n     * Sets initial files\n     */\n    DID_SET_FILES: ({ value = [] }) => {\n        // map values to file objects\n        const files = value.map(file => ({\n            source: file.source ? file.source : file,\n            options: file.options,\n        }));\n\n        // loop over files, if file is in list, leave it be, if not, remove\n        // test if items should be moved\n        let activeItems = getActiveItems(state.items);\n\n        activeItems.forEach(item => {\n            // if item not is in new value, remove\n            if (!files.find(file => file.source === item.source || file.source === item.file)) {\n                dispatch('REMOVE_ITEM', { query: item, remove: false });\n            }\n        });\n\n        // add new files\n        activeItems = getActiveItems(state.items);\n        files.forEach((file, index) => {\n            // if file is already in list\n            if (activeItems.find(item => item.source === file.source || item.file === file.source))\n                return;\n\n            // not in list, add\n            dispatch('ADD_ITEM', {\n                ...file,\n                interactionMethod: InteractionMethod.NONE,\n                index,\n            });\n        });\n    },\n\n    DID_UPDATE_ITEM_METADATA: ({ id, action, change }) => {\n        // don't do anything\n        if (change.silent) return;\n\n        // if is called multiple times in close succession we combined all calls together to save resources\n        clearTimeout(state.itemUpdateTimeout);\n        state.itemUpdateTimeout = setTimeout(() => {\n            const item = getItemById(state.items, id);\n\n            // only revert and attempt to upload when we're uploading to a server\n            if (!query('IS_ASYNC')) {\n                // should we update the output data\n                applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n                    item,\n                    query,\n                    action,\n                    change,\n                }).then(shouldPrepareOutput => {\n                    // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n                    const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n                    if (beforePrepareFile)\n                        shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n\n                    if (!shouldPrepareOutput) return;\n\n                    dispatch(\n                        'REQUEST_PREPARE_OUTPUT',\n                        {\n                            query: id,\n                            item,\n                            success: file => {\n                                dispatch('DID_PREPARE_OUTPUT', { id, file });\n                            },\n                        },\n                        true\n                    );\n                });\n\n                return;\n            }\n\n            // if is local item we need to enable upload button so change can be propagated to server\n            if (item.origin === FileOrigin.LOCAL) {\n                dispatch('DID_LOAD_ITEM', {\n                    id: item.id,\n                    error: null,\n                    serverFileReference: item.source,\n                });\n            }\n\n            // for async scenarios\n            const upload = () => {\n                // we push this forward a bit so the interface is updated correctly\n                setTimeout(() => {\n                    dispatch('REQUEST_ITEM_PROCESSING', { query: id });\n                }, 32);\n            };\n\n            const revert = doUpload => {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                )\n                    .then(doUpload ? upload : () => {})\n                    .catch(() => {});\n            };\n\n            const abort = doUpload => {\n                item.abortProcessing().then(doUpload ? upload : () => {});\n            };\n\n            // if we should re-upload the file immediately\n            if (item.status === ItemStatus.PROCESSING_COMPLETE) {\n                return revert(state.options.instantUpload);\n            }\n\n            // if currently uploading, cancel upload\n            if (item.status === ItemStatus.PROCESSING) {\n                return abort(state.options.instantUpload);\n            }\n\n            if (state.options.instantUpload) {\n                upload();\n            }\n        }, 0);\n    },\n\n    MOVE_ITEM: ({ query, index }) => {\n        const item = getItemByQuery(state.items, query);\n        if (!item) return;\n        const currentIndex = state.items.indexOf(item);\n        index = limit(index, 0, state.items.length - 1);\n        if (currentIndex === index) return;\n        state.items.splice(index, 0, state.items.splice(currentIndex, 1)[0]);\n    },\n\n    SORT: ({ compare }) => {\n        sortItems(state, compare);\n        dispatch('DID_SORT_ITEMS', {\n            items: query('GET_ACTIVE_ITEMS'),\n        });\n    },\n\n    ADD_ITEMS: ({ items, index, interactionMethod, success = () => {}, failure = () => {} }) => {\n        let currentIndex = index;\n\n        if (index === -1 || typeof index === 'undefined') {\n            const insertLocation = query('GET_ITEM_INSERT_LOCATION');\n            const totalItems = query('GET_TOTAL_ITEMS');\n            currentIndex = insertLocation === 'before' ? 0 : totalItems;\n        }\n\n        const ignoredFiles = query('GET_IGNORED_FILES');\n        const isValidFile = source =>\n            isFile(source) ? !ignoredFiles.includes(source.name.toLowerCase()) : !isEmpty(source);\n        const validItems = items.filter(isValidFile);\n\n        const promises = validItems.map(\n            source =>\n                new Promise((resolve, reject) => {\n                    dispatch('ADD_ITEM', {\n                        interactionMethod,\n                        source: source.source || source,\n                        success: resolve,\n                        failure: reject,\n                        index: currentIndex++,\n                        options: source.options || {},\n                    });\n                })\n        );\n\n        Promise.all(promises)\n            .then(success)\n            .catch(failure);\n    },\n\n    /**\n     * @param source\n     * @param index\n     * @param interactionMethod\n     */\n    ADD_ITEM: ({\n        source,\n        index = -1,\n        interactionMethod,\n        success = () => {},\n        failure = () => {},\n        options = {},\n    }) => {\n        // if no source supplied\n        if (isEmpty(source)) {\n            failure({\n                error: createResponse('error', 0, 'No source'),\n                file: null,\n            });\n            return;\n        }\n\n        // filter out invalid file items, used to filter dropped directory contents\n        if (isFile(source) && state.options.ignoredFiles.includes(source.name.toLowerCase())) {\n            // fail silently\n            return;\n        }\n\n        // test if there's still room in the list of files\n        if (!hasRoomForItem(state)) {\n            // if multiple allowed, we can't replace\n            // or if only a single item is allowed but we're not allowed to replace it we exit\n            if (\n                state.options.allowMultiple ||\n                (!state.options.allowMultiple && !state.options.allowReplace)\n            ) {\n                const error = createResponse('warning', 0, 'Max files');\n\n                dispatch('DID_THROW_MAX_FILES', {\n                    source,\n                    error,\n                });\n\n                failure({ error, file: null });\n\n                return;\n            }\n\n            // let's replace the item\n            // id of first item we're about to remove\n            const item = getActiveItems(state.items)[0];\n\n            // if has been processed remove it from the server as well\n            if (\n                item.status === ItemStatus.PROCESSING_COMPLETE ||\n                item.status === ItemStatus.PROCESSING_REVERT_ERROR\n            ) {\n                const forceRevert = query('GET_FORCE_REVERT');\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    forceRevert\n                )\n                    .then(() => {\n                        if (!forceRevert) return;\n\n                        // try to add now\n                        dispatch('ADD_ITEM', {\n                            source,\n                            index,\n                            interactionMethod,\n                            success,\n                            failure,\n                            options,\n                        });\n                    })\n                    .catch(() => {}); // no need to handle this catch state for now\n\n                if (forceRevert) return;\n            }\n\n            // remove first item as it will be replaced by this item\n            dispatch('REMOVE_ITEM', { query: item.id });\n        }\n\n        // where did the file originate\n        const origin =\n            options.type === 'local'\n                ? FileOrigin.LOCAL\n                : options.type === 'limbo'\n                ? FileOrigin.LIMBO\n                : FileOrigin.INPUT;\n\n        // create a new blank item\n        const item = createItem(\n            // where did this file come from\n            origin,\n\n            // an input file never has a server file reference\n            origin === FileOrigin.INPUT ? null : source,\n\n            // file mock data, if defined\n            options.file\n        );\n\n        // set initial meta data\n        Object.keys(options.metadata || {}).forEach(key => {\n            item.setMetadata(key, options.metadata[key]);\n        });\n\n        // created the item, let plugins add methods\n        applyFilters('DID_CREATE_ITEM', item, { query, dispatch });\n\n        // where to insert new items\n        const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n\n        // adjust index if is not allowed to pick location\n        if (!state.options.itemInsertLocationFreedom) {\n            index = itemInsertLocation === 'before' ? -1 : state.items.length;\n        }\n\n        // add item to list\n        insertItem(state.items, item, index);\n\n        // sort items in list\n        if (isFunction(itemInsertLocation) && source) {\n            sortItems(state, itemInsertLocation);\n        }\n\n        // get a quick reference to the item id\n        const id = item.id;\n\n        // observe item events\n        item.on('init', () => {\n            dispatch('DID_INIT_ITEM', { id });\n        });\n\n        item.on('load-init', () => {\n            dispatch('DID_START_ITEM_LOAD', { id });\n        });\n\n        item.on('load-meta', () => {\n            dispatch('DID_UPDATE_ITEM_META', { id });\n        });\n\n        item.on('load-progress', progress => {\n            dispatch('DID_UPDATE_ITEM_LOAD_PROGRESS', { id, progress });\n        });\n\n        item.on('load-request-error', error => {\n            const mainStatus = dynamicLabel(state.options.labelFileLoadError)(error);\n\n            // is client error, no way to recover\n            if (error.code >= 400 && error.code < 500) {\n                dispatch('DID_THROW_ITEM_INVALID', {\n                    id,\n                    error,\n                    status: {\n                        main: mainStatus,\n                        sub: `${error.code} (${error.body})`,\n                    },\n                });\n\n                // reject the file so can be dealt with through API\n                failure({ error, file: createItemAPI(item) });\n                return;\n            }\n\n            // is possible server error, so might be possible to retry\n            dispatch('DID_THROW_ITEM_LOAD_ERROR', {\n                id,\n                error,\n                status: {\n                    main: mainStatus,\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('load-file-error', error => {\n            dispatch('DID_THROW_ITEM_INVALID', {\n                id,\n                error: error.status,\n                status: error.status,\n            });\n            failure({ error: error.status, file: createItemAPI(item) });\n        });\n\n        item.on('load-abort', () => {\n            dispatch('REMOVE_ITEM', { query: id });\n        });\n\n        item.on('load-skip', () => {\n            dispatch('COMPLETE_LOAD_ITEM', {\n                query: id,\n                item,\n                data: {\n                    source,\n                    success,\n                },\n            });\n        });\n\n        item.on('load', () => {\n            const handleAdd = shouldAdd => {\n                // no should not add this file\n                if (!shouldAdd) {\n                    dispatch('REMOVE_ITEM', {\n                        query: id,\n                    });\n                    return;\n                }\n\n                // now interested in metadata updates\n                item.on('metadata-update', change => {\n                    dispatch('DID_UPDATE_ITEM_METADATA', { id, change });\n                });\n\n                // let plugins decide if the output data should be prepared at this point\n                // means we'll do this and wait for idle state\n                applyFilterChain('SHOULD_PREPARE_OUTPUT', false, { item, query }).then(\n                    shouldPrepareOutput => {\n                        // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n                        const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n                        if (beforePrepareFile)\n                            shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n\n                        const loadComplete = () => {\n                            dispatch('COMPLETE_LOAD_ITEM', {\n                                query: id,\n                                item,\n                                data: {\n                                    source,\n                                    success,\n                                },\n                            });\n\n                            listUpdated(dispatch, state);\n                        };\n\n                        // exit\n                        if (shouldPrepareOutput) {\n                            // wait for idle state and then run PREPARE_OUTPUT\n                            dispatch(\n                                'REQUEST_PREPARE_OUTPUT',\n                                {\n                                    query: id,\n                                    item,\n                                    success: file => {\n                                        dispatch('DID_PREPARE_OUTPUT', { id, file });\n                                        loadComplete();\n                                    },\n                                },\n                                true\n                            );\n\n                            return;\n                        }\n\n                        loadComplete();\n                    }\n                );\n            };\n\n            // item loaded, allow plugins to\n            // - read data (quickly)\n            // - add metadata\n            applyFilterChain('DID_LOAD_ITEM', item, { query, dispatch })\n                .then(() => {\n                    optionalPromise(query('GET_BEFORE_ADD_FILE'), createItemAPI(item)).then(\n                        handleAdd\n                    );\n                })\n                .catch(e => {\n                    if (!e || !e.error || !e.status) return handleAdd(false);\n                    dispatch('DID_THROW_ITEM_INVALID', {\n                        id,\n                        error: e.error,\n                        status: e.status,\n                    });\n                });\n        });\n\n        item.on('process-start', () => {\n            dispatch('DID_START_ITEM_PROCESSING', { id });\n        });\n\n        item.on('process-progress', progress => {\n            dispatch('DID_UPDATE_ITEM_PROCESS_PROGRESS', { id, progress });\n        });\n\n        item.on('process-error', error => {\n            dispatch('DID_THROW_ITEM_PROCESSING_ERROR', {\n                id,\n                error,\n                status: {\n                    main: dynamicLabel(state.options.labelFileProcessingError)(error),\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('process-revert-error', error => {\n            dispatch('DID_THROW_ITEM_PROCESSING_REVERT_ERROR', {\n                id,\n                error,\n                status: {\n                    main: dynamicLabel(state.options.labelFileProcessingRevertError)(error),\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('process-complete', serverFileReference => {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n                id,\n                error: null,\n                serverFileReference,\n            });\n            dispatch('DID_DEFINE_VALUE', { id, value: serverFileReference });\n        });\n\n        item.on('process-abort', () => {\n            dispatch('DID_ABORT_ITEM_PROCESSING', { id });\n        });\n\n        item.on('process-revert', () => {\n            dispatch('DID_REVERT_ITEM_PROCESSING', { id });\n            dispatch('DID_DEFINE_VALUE', { id, value: null });\n        });\n\n        // let view know the item has been inserted\n        dispatch('DID_ADD_ITEM', { id, index, interactionMethod });\n\n        listUpdated(dispatch, state);\n\n        // start loading the source\n        const { url, load, restore, fetch } = state.options.server || {};\n\n        item.load(\n            source,\n\n            // this creates a function that loads the file based on the type of file (string, base64, blob, file) and location of file (local, remote, limbo)\n            createFileLoader(\n                origin === FileOrigin.INPUT\n                    ? // input, if is remote, see if should use custom fetch, else use default fetchBlob\n                      isString(source) && isExternalURL(source)\n                        ? fetch\n                            ? createFetchFunction(url, fetch)\n                            : fetchBlob // remote url\n                        : fetchBlob // try to fetch url\n                    : // limbo or local\n                    origin === FileOrigin.LIMBO\n                    ? createFetchFunction(url, restore) // limbo\n                    : createFetchFunction(url, load) // local\n            ),\n\n            // called when the file is loaded so it can be piped through the filters\n            (file, success, error) => {\n                // let's process the file\n                applyFilterChain('LOAD_FILE', file, { query })\n                    .then(success)\n                    .catch(error);\n            }\n        );\n    },\n\n    REQUEST_PREPARE_OUTPUT: ({ item, success, failure = () => {} }) => {\n        // error response if item archived\n        const err = {\n            error: createResponse('error', 0, 'Item not found'),\n            file: null,\n        };\n\n        // don't handle archived items, an item could have been archived (load aborted) while waiting to be prepared\n        if (item.archived) return failure(err);\n\n        // allow plugins to alter the file data\n        applyFilterChain('PREPARE_OUTPUT', item.file, { query, item }).then(result => {\n            applyFilterChain('COMPLETE_PREPARE_OUTPUT', result, { query, item }).then(result => {\n                // don't handle archived items, an item could have been archived (load aborted) while being prepared\n                if (item.archived) return failure(err);\n\n                // we done!\n                success(result);\n            });\n        });\n    },\n\n    COMPLETE_LOAD_ITEM: ({ item, data }) => {\n        const { success, source } = data;\n\n        // sort items in list\n        const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n        if (isFunction(itemInsertLocation) && source) {\n            sortItems(state, itemInsertLocation);\n        }\n\n        // let interface know the item has loaded\n        dispatch('DID_LOAD_ITEM', {\n            id: item.id,\n            error: null,\n            serverFileReference: item.origin === FileOrigin.INPUT ? null : source,\n        });\n\n        // item has been successfully loaded and added to the\n        // list of items so can now be safely returned for use\n        success(createItemAPI(item));\n\n        // if this is a local server file we need to show a different state\n        if (item.origin === FileOrigin.LOCAL) {\n            dispatch('DID_LOAD_LOCAL_ITEM', { id: item.id });\n            return;\n        }\n\n        // if is a temp server file we prevent async upload call here (as the file is already on the server)\n        if (item.origin === FileOrigin.LIMBO) {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n                id: item.id,\n                error: null,\n                serverFileReference: source,\n            });\n\n            dispatch('DID_DEFINE_VALUE', {\n                id: item.id,\n                value: item.serverId || source,\n            });\n            return;\n        }\n\n        // id we are allowed to upload the file immediately, lets do it\n        if (query('IS_ASYNC') && state.options.instantUpload) {\n            dispatch('REQUEST_ITEM_PROCESSING', { query: item.id });\n        }\n    },\n\n    RETRY_ITEM_LOAD: getItemByQueryFromState(state, item => {\n        // try loading the source one more time\n        item.retryLoad();\n    }),\n\n    REQUEST_ITEM_PREPARE: getItemByQueryFromState(state, (item, success, failure) => {\n        dispatch(\n            'REQUEST_PREPARE_OUTPUT',\n            {\n                query: item.id,\n                item,\n                success: file => {\n                    dispatch('DID_PREPARE_OUTPUT', { id: item.id, file });\n                    success({\n                        file: item,\n                        output: file,\n                    });\n                },\n                failure,\n            },\n            true\n        );\n    }),\n\n    REQUEST_ITEM_PROCESSING: getItemByQueryFromState(state, (item, success, failure) => {\n        // cannot be queued (or is already queued)\n        const itemCanBeQueuedForProcessing =\n            // waiting for something\n            item.status === ItemStatus.IDLE ||\n            // processing went wrong earlier\n            item.status === ItemStatus.PROCESSING_ERROR;\n\n        // not ready to be processed\n        if (!itemCanBeQueuedForProcessing) {\n            const processNow = () =>\n                dispatch('REQUEST_ITEM_PROCESSING', { query: item, success, failure });\n\n            const process = () => (document.hidden ? processNow() : setTimeout(processNow, 32));\n\n            // if already done processing or tried to revert but didn't work, try again\n            if (\n                item.status === ItemStatus.PROCESSING_COMPLETE ||\n                item.status === ItemStatus.PROCESSING_REVERT_ERROR\n            ) {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                )\n                    .then(process)\n                    .catch(() => {}); // don't continue with processing if something went wrong\n            } else if (item.status === ItemStatus.PROCESSING) {\n                item.abortProcessing().then(process);\n            }\n\n            return;\n        }\n\n        // already queued for processing\n        if (item.status === ItemStatus.PROCESSING_QUEUED) return;\n\n        item.requestProcessing();\n\n        dispatch('DID_REQUEST_ITEM_PROCESSING', { id: item.id });\n\n        dispatch('PROCESS_ITEM', { query: item, success, failure }, true);\n    }),\n\n    PROCESS_ITEM: getItemByQueryFromState(state, (item, success, failure) => {\n        const maxParallelUploads = query('GET_MAX_PARALLEL_UPLOADS');\n        const totalCurrentUploads = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING).length;\n\n        // queue and wait till queue is freed up\n        if (totalCurrentUploads === maxParallelUploads) {\n            // queue for later processing\n            state.processingQueue.push({\n                id: item.id,\n                success,\n                failure,\n            });\n\n            // stop it!\n            return;\n        }\n\n        // if was not queued or is already processing exit here\n        if (item.status === ItemStatus.PROCESSING) return;\n\n        const processNext = () => {\n            // process queueud items\n            const queueEntry = state.processingQueue.shift();\n\n            // no items left\n            if (!queueEntry) return;\n\n            // get item reference\n            const { id, success, failure } = queueEntry;\n            const itemReference = getItemByQuery(state.items, id);\n\n            // if item was archived while in queue, jump to next\n            if (!itemReference || itemReference.archived) {\n                processNext();\n                return;\n            }\n\n            // process queued item\n            dispatch('PROCESS_ITEM', { query: id, success, failure }, true);\n        };\n\n        // we done function\n        item.onOnce('process-complete', () => {\n            success(createItemAPI(item));\n            processNext();\n\n            // if origin is local, and we're instant uploading, trigger remove of original\n            // as revert will remove file from list\n            const server = state.options.server;\n            const instantUpload = state.options.instantUpload;\n            if (instantUpload && item.origin === FileOrigin.LOCAL && isFunction(server.remove)) {\n                const noop = () => {};\n                item.origin = FileOrigin.LIMBO;\n                state.options.server.remove(item.source, noop, noop);\n            }\n\n            // All items processed? No errors?\n            const allItemsProcessed =\n                query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING_COMPLETE).length ===\n                state.items.length;\n            if (allItemsProcessed) {\n                dispatch('DID_COMPLETE_ITEM_PROCESSING_ALL');\n            }\n        });\n\n        // we error function\n        item.onOnce('process-error', error => {\n            failure({ error, file: createItemAPI(item) });\n            processNext();\n        });\n\n        // start file processing\n        const options = state.options;\n        item.process(\n            createFileProcessor(\n                createProcessorFunction(options.server.url, options.server.process, options.name, {\n                    chunkTransferId: item.transferId,\n                    chunkServer: options.server.patch,\n                    chunkUploads: options.chunkUploads,\n                    chunkForce: options.chunkForce,\n                    chunkSize: options.chunkSize,\n                    chunkRetryDelays: options.chunkRetryDelays,\n                }),\n                {\n                    allowMinimumUploadDuration: query('GET_ALLOW_MINIMUM_UPLOAD_DURATION'),\n                }\n            ),\n            // called when the file is about to be processed so it can be piped through the transform filters\n            (file, success, error) => {\n                // allow plugins to alter the file data\n                applyFilterChain('PREPARE_OUTPUT', file, { query, item })\n                    .then(file => {\n                        dispatch('DID_PREPARE_OUTPUT', { id: item.id, file });\n\n                        success(file);\n                    })\n                    .catch(error);\n            }\n        );\n    }),\n\n    RETRY_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        dispatch('REQUEST_ITEM_PROCESSING', { query: item });\n    }),\n\n    REQUEST_REMOVE_ITEM: getItemByQueryFromState(state, item => {\n        optionalPromise(query('GET_BEFORE_REMOVE_FILE'), createItemAPI(item)).then(shouldRemove => {\n            if (!shouldRemove) {\n                return;\n            }\n            dispatch('REMOVE_ITEM', { query: item });\n        });\n    }),\n\n    RELEASE_ITEM: getItemByQueryFromState(state, item => {\n        item.release();\n    }),\n\n    REMOVE_ITEM: getItemByQueryFromState(state, (item, success, failure, options) => {\n        const removeFromView = () => {\n            // get id reference\n            const id = item.id;\n\n            // archive the item, this does not remove it from the list\n            getItemById(state.items, id).archive();\n\n            // tell the view the item has been removed\n            dispatch('DID_REMOVE_ITEM', { error: null, id, item });\n\n            // now the list has been modified\n            listUpdated(dispatch, state);\n\n            // correctly removed\n            success(createItemAPI(item));\n        };\n\n        // if this is a local file and the `server.remove` function has been configured,\n        // send source there so dev can remove file from server\n        const server = state.options.server;\n        if (\n            item.origin === FileOrigin.LOCAL &&\n            server &&\n            isFunction(server.remove) &&\n            options.remove !== false\n        ) {\n            dispatch('DID_START_ITEM_REMOVE', { id: item.id });\n\n            server.remove(\n                item.source,\n                () => removeFromView(),\n                status => {\n                    dispatch('DID_THROW_ITEM_REMOVE_ERROR', {\n                        id: item.id,\n                        error: createResponse('error', 0, status, null),\n                        status: {\n                            main: dynamicLabel(state.options.labelFileRemoveError)(status),\n                            sub: state.options.labelTapToRetry,\n                        },\n                    });\n                }\n            );\n        } else {\n            // if is requesting revert and can revert need to call revert handler (not calling request_ because that would also trigger beforeRemoveHook)\n            if (\n                (options.revert && item.origin !== FileOrigin.LOCAL && item.serverId !== null) ||\n                // if chunked uploads are enabled and we're uploading in chunks for this specific file\n                // or if the file isn't big enough for chunked uploads but chunkForce is set then call\n                // revert before removing from the view...\n                (state.options.chunkUploads && item.file.size > state.options.chunkSize) ||\n                (state.options.chunkUploads && state.options.chunkForce)\n            ) {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                );\n            }\n\n            // can now safely remove from view\n            removeFromView();\n        }\n    }),\n\n    ABORT_ITEM_LOAD: getItemByQueryFromState(state, item => {\n        item.abortLoad();\n    }),\n\n    ABORT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        // test if is already processed\n        if (item.serverId) {\n            dispatch('REVERT_ITEM_PROCESSING', { id: item.id });\n            return;\n        }\n\n        // abort\n        item.abortProcessing().then(() => {\n            const shouldRemove = state.options.instantUpload;\n            if (shouldRemove) {\n                dispatch('REMOVE_ITEM', { query: item.id });\n            }\n        });\n    }),\n\n    REQUEST_REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        // not instant uploading, revert immediately\n        if (!state.options.instantUpload) {\n            dispatch('REVERT_ITEM_PROCESSING', { query: item });\n            return;\n        }\n\n        // if we're instant uploading the file will also be removed if we revert,\n        // so if a before remove file hook is defined we need to run it now\n        const handleRevert = shouldRevert => {\n            if (!shouldRevert) return;\n            dispatch('REVERT_ITEM_PROCESSING', { query: item });\n        };\n\n        const fn = query('GET_BEFORE_REMOVE_FILE');\n        if (!fn) {\n            return handleRevert(true);\n        }\n\n        const requestRemoveResult = fn(createItemAPI(item));\n        if (requestRemoveResult == null) {\n            // undefined or null\n            return handleRevert(true);\n        }\n\n        if (typeof requestRemoveResult === 'boolean') {\n            return handleRevert(requestRemoveResult);\n        }\n\n        if (typeof requestRemoveResult.then === 'function') {\n            requestRemoveResult.then(handleRevert);\n        }\n    }),\n\n    REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        item.revert(\n            createRevertFunction(state.options.server.url, state.options.server.revert),\n            query('GET_FORCE_REVERT')\n        )\n            .then(() => {\n                const shouldRemove = state.options.instantUpload || isMockItem(item);\n                if (shouldRemove) {\n                    dispatch('REMOVE_ITEM', { query: item.id });\n                }\n            })\n            .catch(() => {});\n    }),\n\n    SET_OPTIONS: ({ options }) => {\n        // get all keys passed\n        const optionKeys = Object.keys(options);\n\n        // get prioritized keyed to include (remove once not in options object)\n        const prioritizedOptionKeys = PrioritizedOptions.filter(key => optionKeys.includes(key));\n\n        // order the keys, prioritized first, then rest\n        const orderedOptionKeys = [\n            // add prioritized first if passed to options, else remove\n            ...prioritizedOptionKeys,\n\n            // prevent duplicate keys\n            ...Object.keys(options).filter(key => !prioritizedOptionKeys.includes(key)),\n        ];\n\n        // dispatch set event for each option\n        orderedOptionKeys.forEach(key => {\n            dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n                value: options[key],\n            });\n        });\n    },\n});\n\nconst PrioritizedOptions = [\n    'server', // must be processed before \"files\"\n];\n\nconst formatFilename = name => name;\n\nconst createElement$1 = tagName => {\n    return document.createElement(tagName);\n};\n\nconst text = (node, value) => {\n    let textNode = node.childNodes[0];\n    if (!textNode) {\n        textNode = document.createTextNode(value);\n        node.appendChild(textNode);\n    } else if (value !== textNode.nodeValue) {\n        textNode.nodeValue = value;\n    }\n};\n\nconst polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n    const angleInRadians = (((angleInDegrees % 360) - 90) * Math.PI) / 180.0;\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians),\n    };\n};\n\nconst describeArc = (x, y, radius, startAngle, endAngle, arcSweep) => {\n    const start = polarToCartesian(x, y, radius, endAngle);\n    const end = polarToCartesian(x, y, radius, startAngle);\n    return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\n};\n\nconst percentageArc = (x, y, radius, from, to) => {\n    let arcSweep = 1;\n    if (to > from && to - from <= 0.5) {\n        arcSweep = 0;\n    }\n    if (from > to && from - to >= 0.5) {\n        arcSweep = 0;\n    }\n    return describeArc(\n        x,\n        y,\n        radius,\n        Math.min(0.9999, from) * 360,\n        Math.min(0.9999, to) * 360,\n        arcSweep\n    );\n};\n\nconst create = ({ root, props }) => {\n    // start at 0\n    props.spin = false;\n    props.progress = 0;\n    props.opacity = 0;\n\n    // svg\n    const svg = createElement('svg');\n    root.ref.path = createElement('path', {\n        'stroke-width': 2,\n        'stroke-linecap': 'round',\n    });\n    svg.appendChild(root.ref.path);\n\n    root.ref.svg = svg;\n\n    root.appendChild(svg);\n};\n\nconst write = ({ root, props }) => {\n    if (props.opacity === 0) {\n        return;\n    }\n\n    if (props.align) {\n        root.element.dataset.align = props.align;\n    }\n\n    // get width of stroke\n    const ringStrokeWidth = parseInt(attr(root.ref.path, 'stroke-width'), 10);\n\n    // calculate size of ring\n    const size = root.rect.element.width * 0.5;\n\n    // ring state\n    let ringFrom = 0;\n    let ringTo = 0;\n\n    // now in busy mode\n    if (props.spin) {\n        ringFrom = 0;\n        ringTo = 0.5;\n    } else {\n        ringFrom = 0;\n        ringTo = props.progress;\n    }\n\n    // get arc path\n    const coordinates = percentageArc(size, size, size - ringStrokeWidth, ringFrom, ringTo);\n\n    // update progress bar\n    attr(root.ref.path, 'd', coordinates);\n\n    // hide while contains 0 value\n    attr(root.ref.path, 'stroke-opacity', props.spin || props.progress > 0 ? 1 : 0);\n};\n\nconst progressIndicator = createView({\n    tag: 'div',\n    name: 'progress-indicator',\n    ignoreRectUpdate: true,\n    ignoreRect: true,\n    create,\n    write,\n    mixins: {\n        apis: ['progress', 'spin', 'align'],\n        styles: ['opacity'],\n        animations: {\n            opacity: { type: 'tween', duration: 500 },\n            progress: {\n                type: 'spring',\n                stiffness: 0.95,\n                damping: 0.65,\n                mass: 10,\n            },\n        },\n    },\n});\n\nconst create$1 = ({ root, props }) => {\n    root.element.innerHTML = (props.icon || '') + `<span>${props.label}</span>`;\n\n    props.isDisabled = false;\n};\n\nconst write$1 = ({ root, props }) => {\n    const { isDisabled } = props;\n    const shouldDisable = root.query('GET_DISABLED') || props.opacity === 0;\n\n    if (shouldDisable && !isDisabled) {\n        props.isDisabled = true;\n        attr(root.element, 'disabled', 'disabled');\n    } else if (!shouldDisable && isDisabled) {\n        props.isDisabled = false;\n        root.element.removeAttribute('disabled');\n    }\n};\n\nconst fileActionButton = createView({\n    tag: 'button',\n    attributes: {\n        type: 'button',\n    },\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'file-action-button',\n    mixins: {\n        apis: ['label'],\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            translateX: 'spring',\n            translateY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n        listeners: true,\n    },\n    create: create$1,\n    write: write$1,\n});\n\nconst toNaturalFileSize = (bytes, decimalSeparator = '.', base = 1000, options = {}) => {\n    const {\n        labelBytes = 'bytes',\n        labelKilobytes = 'KB',\n        labelMegabytes = 'MB',\n        labelGigabytes = 'GB',\n    } = options;\n\n    // no negative byte sizes\n    bytes = Math.round(Math.abs(bytes));\n\n    const KB = base;\n    const MB = base * base;\n    const GB = base * base * base;\n\n    // just bytes\n    if (bytes < KB) {\n        return `${bytes} ${labelBytes}`;\n    }\n\n    // kilobytes\n    if (bytes < MB) {\n        return `${Math.floor(bytes / KB)} ${labelKilobytes}`;\n    }\n\n    // megabytes\n    if (bytes < GB) {\n        return `${removeDecimalsWhenZero(bytes / MB, 1, decimalSeparator)} ${labelMegabytes}`;\n    }\n\n    // gigabytes\n    return `${removeDecimalsWhenZero(bytes / GB, 2, decimalSeparator)} ${labelGigabytes}`;\n};\n\nconst removeDecimalsWhenZero = (value, decimalCount, separator) => {\n    return value\n        .toFixed(decimalCount)\n        .split('.')\n        .filter(part => part !== '0')\n        .join(separator);\n};\n\nconst create$2 = ({ root, props }) => {\n    // filename\n    const fileName = createElement$1('span');\n    fileName.className = 'filepond--file-info-main';\n    // hide for screenreaders\n    // the file is contained in a fieldset with legend that contains the filename\n    // no need to read it twice\n    attr(fileName, 'aria-hidden', 'true');\n    root.appendChild(fileName);\n    root.ref.fileName = fileName;\n\n    // filesize\n    const fileSize = createElement$1('span');\n    fileSize.className = 'filepond--file-info-sub';\n    root.appendChild(fileSize);\n    root.ref.fileSize = fileSize;\n\n    // set initial values\n    text(fileSize, root.query('GET_LABEL_FILE_WAITING_FOR_SIZE'));\n    text(fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst updateFile = ({ root, props }) => {\n    text(\n        root.ref.fileSize,\n        toNaturalFileSize(\n            root.query('GET_ITEM_SIZE', props.id),\n            '.',\n            root.query('GET_FILE_SIZE_BASE'),\n            root.query('GET_FILE_SIZE_LABELS', root.query)\n        )\n    );\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst updateFileSizeOnError = ({ root, props }) => {\n    // if size is available don't fallback to unknown size message\n    if (isInt(root.query('GET_ITEM_SIZE', props.id))) {\n        updateFile({ root, props });\n        return;\n    }\n\n    text(root.ref.fileSize, root.query('GET_LABEL_FILE_SIZE_NOT_AVAILABLE'));\n};\n\nconst fileInfo = createView({\n    name: 'file-info',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: updateFile,\n        DID_UPDATE_ITEM_META: updateFile,\n        DID_THROW_ITEM_LOAD_ERROR: updateFileSizeOnError,\n        DID_THROW_ITEM_INVALID: updateFileSizeOnError,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    create: create$2,\n    mixins: {\n        styles: ['translateX', 'translateY'],\n        animations: {\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\nconst toPercentage = value => Math.round(value * 100);\n\nconst create$3 = ({ root }) => {\n    // main status\n    const main = createElement$1('span');\n    main.className = 'filepond--file-status-main';\n    root.appendChild(main);\n    root.ref.main = main;\n\n    // sub status\n    const sub = createElement$1('span');\n    sub.className = 'filepond--file-status-sub';\n    root.appendChild(sub);\n    root.ref.sub = sub;\n\n    didSetItemLoadProgress({ root, action: { progress: null } });\n};\n\nconst didSetItemLoadProgress = ({ root, action }) => {\n    const title =\n        action.progress === null\n            ? root.query('GET_LABEL_FILE_LOADING')\n            : `${root.query('GET_LABEL_FILE_LOADING')} ${toPercentage(action.progress)}%`;\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didSetItemProcessProgress = ({ root, action }) => {\n    const title =\n        action.progress === null\n            ? root.query('GET_LABEL_FILE_PROCESSING')\n            : `${root.query('GET_LABEL_FILE_PROCESSING')} ${toPercentage(action.progress)}%`;\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didRequestItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didAbortItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_ABORTED'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_RETRY'));\n};\n\nconst didCompleteItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_COMPLETE'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_UNDO'));\n};\n\nconst clear = ({ root }) => {\n    text(root.ref.main, '');\n    text(root.ref.sub, '');\n};\n\nconst error = ({ root, action }) => {\n    text(root.ref.main, action.status.main);\n    text(root.ref.sub, action.status.sub);\n};\n\nconst fileStatus = createView({\n    name: 'file-status',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: clear,\n        DID_REVERT_ITEM_PROCESSING: clear,\n        DID_REQUEST_ITEM_PROCESSING: didRequestItemProcessing,\n        DID_ABORT_ITEM_PROCESSING: didAbortItemProcessing,\n        DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing,\n        DID_UPDATE_ITEM_PROCESS_PROGRESS: didSetItemProcessProgress,\n        DID_UPDATE_ITEM_LOAD_PROGRESS: didSetItemLoadProgress,\n        DID_THROW_ITEM_LOAD_ERROR: error,\n        DID_THROW_ITEM_INVALID: error,\n        DID_THROW_ITEM_PROCESSING_ERROR: error,\n        DID_THROW_ITEM_PROCESSING_REVERT_ERROR: error,\n        DID_THROW_ITEM_REMOVE_ERROR: error,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    create: create$3,\n    mixins: {\n        styles: ['translateX', 'translateY', 'opacity'],\n        animations: {\n            opacity: { type: 'tween', duration: 250 },\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\n/**\n * Button definitions for the file view\n */\n\nconst Buttons = {\n    AbortItemLoad: {\n        label: 'GET_LABEL_BUTTON_ABORT_ITEM_LOAD',\n        action: 'ABORT_ITEM_LOAD',\n        className: 'filepond--action-abort-item-load',\n        align: 'LOAD_INDICATOR_POSITION', // right\n    },\n    RetryItemLoad: {\n        label: 'GET_LABEL_BUTTON_RETRY_ITEM_LOAD',\n        action: 'RETRY_ITEM_LOAD',\n        icon: 'GET_ICON_RETRY',\n        className: 'filepond--action-retry-item-load',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RemoveItem: {\n        label: 'GET_LABEL_BUTTON_REMOVE_ITEM',\n        action: 'REQUEST_REMOVE_ITEM',\n        icon: 'GET_ICON_REMOVE',\n        className: 'filepond--action-remove-item',\n        align: 'BUTTON_REMOVE_ITEM_POSITION', // left\n    },\n    ProcessItem: {\n        label: 'GET_LABEL_BUTTON_PROCESS_ITEM',\n        action: 'REQUEST_ITEM_PROCESSING',\n        icon: 'GET_ICON_PROCESS',\n        className: 'filepond--action-process-item',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    AbortItemProcessing: {\n        label: 'GET_LABEL_BUTTON_ABORT_ITEM_PROCESSING',\n        action: 'ABORT_ITEM_PROCESSING',\n        className: 'filepond--action-abort-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RetryItemProcessing: {\n        label: 'GET_LABEL_BUTTON_RETRY_ITEM_PROCESSING',\n        action: 'RETRY_ITEM_PROCESSING',\n        icon: 'GET_ICON_RETRY',\n        className: 'filepond--action-retry-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RevertItemProcessing: {\n        label: 'GET_LABEL_BUTTON_UNDO_ITEM_PROCESSING',\n        action: 'REQUEST_REVERT_ITEM_PROCESSING',\n        icon: 'GET_ICON_UNDO',\n        className: 'filepond--action-revert-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n};\n\n// make a list of buttons, we can then remove buttons from this list if they're disabled\nconst ButtonKeys = [];\nforin(Buttons, key => {\n    ButtonKeys.push(key);\n});\n\nconst calculateFileInfoOffset = root => {\n    if (getRemoveIndicatorAligment(root) === 'right') return 0;\n    const buttonRect = root.ref.buttonRemoveItem.rect.element;\n    return buttonRect.hidden ? null : buttonRect.width + buttonRect.left;\n};\n\nconst calculateButtonWidth = root => {\n    const buttonRect = root.ref.buttonAbortItemLoad.rect.element;\n    return buttonRect.width;\n};\n\n// Force on full pixels so text stays crips\nconst calculateFileVerticalCenterOffset = root =>\n    Math.floor(root.ref.buttonRemoveItem.rect.element.height / 4);\nconst calculateFileHorizontalCenterOffset = root =>\n    Math.floor(root.ref.buttonRemoveItem.rect.element.left / 2);\n\nconst getLoadIndicatorAlignment = root => root.query('GET_STYLE_LOAD_INDICATOR_POSITION');\nconst getProcessIndicatorAlignment = root => root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION');\nconst getRemoveIndicatorAligment = root => root.query('GET_STYLE_BUTTON_REMOVE_ITEM_POSITION');\n\nconst DefaultStyle = {\n    buttonAbortItemLoad: { opacity: 0 },\n    buttonRetryItemLoad: { opacity: 0 },\n    buttonRemoveItem: { opacity: 0 },\n    buttonProcessItem: { opacity: 0 },\n    buttonAbortItemProcessing: { opacity: 0 },\n    buttonRetryItemProcessing: { opacity: 0 },\n    buttonRevertItemProcessing: { opacity: 0 },\n    loadProgressIndicator: { opacity: 0, align: getLoadIndicatorAlignment },\n    processProgressIndicator: { opacity: 0, align: getProcessIndicatorAlignment },\n    processingCompleteIndicator: { opacity: 0, scaleX: 0.75, scaleY: 0.75 },\n    info: { translateX: 0, translateY: 0, opacity: 0 },\n    status: { translateX: 0, translateY: 0, opacity: 0 },\n};\n\nconst IdleStyle = {\n    buttonRemoveItem: { opacity: 1 },\n    buttonProcessItem: { opacity: 1 },\n    info: { translateX: calculateFileInfoOffset },\n    status: { translateX: calculateFileInfoOffset },\n};\n\nconst ProcessingStyle = {\n    buttonAbortItemProcessing: { opacity: 1 },\n    processProgressIndicator: { opacity: 1 },\n    status: { opacity: 1 },\n};\n\nconst StyleMap = {\n    DID_THROW_ITEM_INVALID: {\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { translateX: calculateFileInfoOffset, opacity: 1 },\n    },\n    DID_START_ITEM_LOAD: {\n        buttonAbortItemLoad: { opacity: 1 },\n        loadProgressIndicator: { opacity: 1 },\n        status: { opacity: 1 },\n    },\n    DID_THROW_ITEM_LOAD_ERROR: {\n        buttonRetryItemLoad: { opacity: 1 },\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1 },\n    },\n    DID_START_ITEM_REMOVE: {\n        processProgressIndicator: { opacity: 1, align: getRemoveIndicatorAligment },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 0 },\n    },\n    DID_THROW_ITEM_REMOVE_ERROR: {\n        processProgressIndicator: { opacity: 0, align: getRemoveIndicatorAligment },\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1, translateX: calculateFileInfoOffset },\n    },\n    DID_LOAD_ITEM: IdleStyle,\n    DID_LOAD_LOCAL_ITEM: {\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { translateX: calculateFileInfoOffset },\n    },\n    DID_START_ITEM_PROCESSING: ProcessingStyle,\n    DID_REQUEST_ITEM_PROCESSING: ProcessingStyle,\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ProcessingStyle,\n    DID_COMPLETE_ITEM_PROCESSING: {\n        buttonRevertItemProcessing: { opacity: 1 },\n        info: { opacity: 1 },\n        status: { opacity: 1 },\n    },\n    DID_THROW_ITEM_PROCESSING_ERROR: {\n        buttonRemoveItem: { opacity: 1 },\n        buttonRetryItemProcessing: { opacity: 1 },\n        status: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n    },\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: {\n        buttonRevertItemProcessing: { opacity: 1 },\n        status: { opacity: 1 },\n        info: { opacity: 1 },\n    },\n    DID_ABORT_ITEM_PROCESSING: {\n        buttonRemoveItem: { opacity: 1 },\n        buttonProcessItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1 },\n    },\n    DID_REVERT_ITEM_PROCESSING: IdleStyle,\n};\n\n// complete indicator view\nconst processingCompleteIndicatorView = createView({\n    create: ({ root }) => {\n        root.element.innerHTML = root.query('GET_ICON_DONE');\n    },\n    name: 'processing-complete-indicator',\n    ignoreRect: true,\n    mixins: {\n        styles: ['scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n    },\n});\n\n/**\n * Creates the file view\n */\nconst create$4 = ({ root, props }) => {\n    // copy Buttons object\n    const LocalButtons = Object.keys(Buttons).reduce((prev, curr) => {\n        prev[curr] = { ...Buttons[curr] };\n        return prev;\n    }, {});\n\n    const { id } = props;\n\n    // allow reverting upload\n    const allowRevert = root.query('GET_ALLOW_REVERT');\n\n    // allow remove file\n    const allowRemove = root.query('GET_ALLOW_REMOVE');\n\n    // allow processing upload\n    const allowProcess = root.query('GET_ALLOW_PROCESS');\n\n    // is instant uploading, need this to determine the icon of the undo button\n    const instantUpload = root.query('GET_INSTANT_UPLOAD');\n\n    // is async set up\n    const isAsync = root.query('IS_ASYNC');\n\n    // should align remove item buttons\n    const alignRemoveItemButton = root.query('GET_STYLE_BUTTON_REMOVE_ITEM_ALIGN');\n\n    // enabled buttons array\n    let buttonFilter;\n    if (isAsync) {\n        if (allowProcess && !allowRevert) {\n            // only remove revert button\n            buttonFilter = key => !/RevertItemProcessing/.test(key);\n        } else if (!allowProcess && allowRevert) {\n            // only remove process button\n            buttonFilter = key => !/ProcessItem|RetryItemProcessing|AbortItemProcessing/.test(key);\n        } else if (!allowProcess && !allowRevert) {\n            // remove all process buttons\n            buttonFilter = key => !/Process/.test(key);\n        }\n    } else {\n        // no process controls available\n        buttonFilter = key => !/Process/.test(key);\n    }\n\n    const enabledButtons = buttonFilter ? ButtonKeys.filter(buttonFilter) : ButtonKeys.concat();\n\n    // update icon and label for revert button when instant uploading\n    if (instantUpload && allowRevert) {\n        LocalButtons['RevertItemProcessing'].label = 'GET_LABEL_BUTTON_REMOVE_ITEM';\n        LocalButtons['RevertItemProcessing'].icon = 'GET_ICON_REMOVE';\n    }\n\n    // remove last button (revert) if not allowed\n    if (isAsync && !allowRevert) {\n        const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n        map.info.translateX = calculateFileHorizontalCenterOffset;\n        map.info.translateY = calculateFileVerticalCenterOffset;\n        map.status.translateY = calculateFileVerticalCenterOffset;\n        map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };\n    }\n\n    // should align center\n    if (isAsync && !allowProcess) {\n        [\n            'DID_START_ITEM_PROCESSING',\n            'DID_REQUEST_ITEM_PROCESSING',\n            'DID_UPDATE_ITEM_PROCESS_PROGRESS',\n            'DID_THROW_ITEM_PROCESSING_ERROR',\n        ].forEach(key => {\n            StyleMap[key].status.translateY = calculateFileVerticalCenterOffset;\n        });\n        StyleMap['DID_THROW_ITEM_PROCESSING_ERROR'].status.translateX = calculateButtonWidth;\n    }\n\n    // move remove button to right\n    if (alignRemoveItemButton && allowRevert) {\n        LocalButtons['RevertItemProcessing'].align = 'BUTTON_REMOVE_ITEM_POSITION';\n        const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n        map.info.translateX = calculateFileInfoOffset;\n        map.status.translateY = calculateFileVerticalCenterOffset;\n        map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };\n    }\n\n    // show/hide RemoveItem button\n    if (!allowRemove) {\n        LocalButtons['RemoveItem'].disabled = true;\n    }\n\n    // create the button views\n    forin(LocalButtons, (key, definition) => {\n        // create button\n        const buttonView = root.createChildView(fileActionButton, {\n            label: root.query(definition.label),\n            icon: root.query(definition.icon),\n            opacity: 0,\n        });\n\n        // should be appended?\n        if (enabledButtons.includes(key)) {\n            root.appendChildView(buttonView);\n        }\n\n        // toggle\n        if (definition.disabled) {\n            buttonView.element.setAttribute('disabled', 'disabled');\n            buttonView.element.setAttribute('hidden', 'hidden');\n        }\n\n        // add position attribute\n        buttonView.element.dataset.align = root.query(`GET_STYLE_${definition.align}`);\n\n        // add class\n        buttonView.element.classList.add(definition.className);\n\n        // handle interactions\n        buttonView.on('click', e => {\n            e.stopPropagation();\n            if (definition.disabled) return;\n            root.dispatch(definition.action, { query: id });\n        });\n\n        // set reference\n        root.ref[`button${key}`] = buttonView;\n    });\n\n    // checkmark\n    root.ref.processingCompleteIndicator = root.appendChildView(\n        root.createChildView(processingCompleteIndicatorView)\n    );\n    root.ref.processingCompleteIndicator.element.dataset.align = root.query(\n        `GET_STYLE_BUTTON_PROCESS_ITEM_POSITION`\n    );\n\n    // create file info view\n    root.ref.info = root.appendChildView(root.createChildView(fileInfo, { id }));\n\n    // create file status view\n    root.ref.status = root.appendChildView(root.createChildView(fileStatus, { id }));\n\n    // add progress indicators\n    const loadIndicatorView = root.appendChildView(\n        root.createChildView(progressIndicator, {\n            opacity: 0,\n            align: root.query(`GET_STYLE_LOAD_INDICATOR_POSITION`),\n        })\n    );\n    loadIndicatorView.element.classList.add('filepond--load-indicator');\n    root.ref.loadProgressIndicator = loadIndicatorView;\n\n    const progressIndicatorView = root.appendChildView(\n        root.createChildView(progressIndicator, {\n            opacity: 0,\n            align: root.query(`GET_STYLE_PROGRESS_INDICATOR_POSITION`),\n        })\n    );\n    progressIndicatorView.element.classList.add('filepond--process-indicator');\n    root.ref.processProgressIndicator = progressIndicatorView;\n\n    // current active styles\n    root.ref.activeStyles = [];\n};\n\nconst write$2 = ({ root, actions, props }) => {\n    // route actions\n    route({ root, actions, props });\n\n    // select last state change action\n    let action = actions\n        .concat()\n        .filter(action => /^DID_/.test(action.type))\n        .reverse()\n        .find(action => StyleMap[action.type]);\n\n    // a new action happened, let's get the matching styles\n    if (action) {\n        // define new active styles\n        root.ref.activeStyles = [];\n\n        const stylesToApply = StyleMap[action.type];\n        forin(DefaultStyle, (name, defaultStyles) => {\n            // get reference to control\n            const control = root.ref[name];\n\n            // loop over all styles for this control\n            forin(defaultStyles, (key, defaultValue) => {\n                const value =\n                    stylesToApply[name] && typeof stylesToApply[name][key] !== 'undefined'\n                        ? stylesToApply[name][key]\n                        : defaultValue;\n                root.ref.activeStyles.push({ control, key, value });\n            });\n        });\n    }\n\n    // apply active styles to element\n    root.ref.activeStyles.forEach(({ control, key, value }) => {\n        control[key] = typeof value === 'function' ? value(root) : value;\n    });\n};\n\nconst route = createRoute({\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING: ({ root, action }) => {\n        root.ref.buttonAbortItemProcessing.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD: ({ root, action }) => {\n        root.ref.buttonAbortItemLoad.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL: ({ root, action }) => {\n        root.ref.buttonAbortItemRemoval.label = action.value;\n    },\n    DID_REQUEST_ITEM_PROCESSING: ({ root }) => {\n        root.ref.processProgressIndicator.spin = true;\n        root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_LOAD: ({ root }) => {\n        root.ref.loadProgressIndicator.spin = true;\n        root.ref.loadProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_REMOVE: ({ root }) => {\n        root.ref.processProgressIndicator.spin = true;\n        root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_UPDATE_ITEM_LOAD_PROGRESS: ({ root, action }) => {\n        root.ref.loadProgressIndicator.spin = false;\n        root.ref.loadProgressIndicator.progress = action.progress;\n    },\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ({ root, action }) => {\n        root.ref.processProgressIndicator.spin = false;\n        root.ref.processProgressIndicator.progress = action.progress;\n    },\n});\n\nconst file = createView({\n    create: create$4,\n    write: write$2,\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    name: 'file',\n});\n\n/**\n * Creates the file view\n */\nconst create$5 = ({ root, props }) => {\n    // filename\n    root.ref.fileName = createElement$1('legend');\n    root.appendChild(root.ref.fileName);\n\n    // file appended\n    root.ref.file = root.appendChildView(root.createChildView(file, { id: props.id }));\n\n    // data has moved to data.js\n    root.ref.data = false;\n};\n\n/**\n * Data storage\n */\nconst didLoadItem = ({ root, props }) => {\n    // updates the legend of the fieldset so screenreaders can better group buttons\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst fileWrapper = createView({\n    create: create$5,\n    ignoreRect: true,\n    write: createRoute({\n        DID_LOAD_ITEM: didLoadItem,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    tag: 'fieldset',\n    name: 'file-wrapper',\n});\n\nconst PANEL_SPRING_PROPS = { type: 'spring', damping: 0.6, mass: 7 };\n\nconst create$6 = ({ root, props }) => {\n    [\n        {\n            name: 'top',\n        },\n        {\n            name: 'center',\n            props: {\n                translateY: null,\n                scaleY: null,\n            },\n            mixins: {\n                animations: {\n                    scaleY: PANEL_SPRING_PROPS,\n                },\n                styles: ['translateY', 'scaleY'],\n            },\n        },\n        {\n            name: 'bottom',\n            props: {\n                translateY: null,\n            },\n            mixins: {\n                animations: {\n                    translateY: PANEL_SPRING_PROPS,\n                },\n                styles: ['translateY'],\n            },\n        },\n    ].forEach(section => {\n        createSection(root, section, props.name);\n    });\n\n    root.element.classList.add(`filepond--${props.name}`);\n\n    root.ref.scalable = null;\n};\n\nconst createSection = (root, section, className) => {\n    const viewConstructor = createView({\n        name: `panel-${section.name} filepond--${className}`,\n        mixins: section.mixins,\n        ignoreRectUpdate: true,\n    });\n\n    const view = root.createChildView(viewConstructor, section.props);\n\n    root.ref[section.name] = root.appendChildView(view);\n};\n\nconst write$3 = ({ root, props }) => {\n    // update scalable state\n    if (root.ref.scalable === null || props.scalable !== root.ref.scalable) {\n        root.ref.scalable = isBoolean(props.scalable) ? props.scalable : true;\n        root.element.dataset.scalable = root.ref.scalable;\n    }\n\n    // no height, can't set\n    if (!props.height) return;\n\n    // get child rects\n    const topRect = root.ref.top.rect.element;\n    const bottomRect = root.ref.bottom.rect.element;\n\n    // make sure height never is smaller than bottom and top seciton heights combined (will probably never happen, but who knows)\n    const height = Math.max(topRect.height + bottomRect.height, props.height);\n\n    // offset center part\n    root.ref.center.translateY = topRect.height;\n\n    // scale center part\n    // use math ceil to prevent transparent lines because of rounding errors\n    root.ref.center.scaleY = (height - topRect.height - bottomRect.height) / 100;\n\n    // offset bottom part\n    root.ref.bottom.translateY = height - bottomRect.height;\n};\n\nconst panel = createView({\n    name: 'panel',\n    read: ({ root, props }) => (props.heightCurrent = root.ref.bottom.translateY),\n    write: write$3,\n    create: create$6,\n    ignoreRect: true,\n    mixins: {\n        apis: ['height', 'heightCurrent', 'scalable'],\n    },\n});\n\nconst createDragHelper = items => {\n    const itemIds = items.map(item => item.id);\n    let prevIndex = undefined;\n    return {\n        setIndex: index => {\n            prevIndex = index;\n        },\n        getIndex: () => prevIndex,\n        getItemIndex: item => itemIds.indexOf(item.id),\n    };\n};\n\nconst ITEM_TRANSLATE_SPRING = {\n    type: 'spring',\n    stiffness: 0.75,\n    damping: 0.45,\n    mass: 10,\n};\n\nconst ITEM_SCALE_SPRING = 'spring';\n\nconst StateMap = {\n    DID_START_ITEM_LOAD: 'busy',\n    DID_UPDATE_ITEM_LOAD_PROGRESS: 'loading',\n    DID_THROW_ITEM_INVALID: 'load-invalid',\n    DID_THROW_ITEM_LOAD_ERROR: 'load-error',\n    DID_LOAD_ITEM: 'idle',\n    DID_THROW_ITEM_REMOVE_ERROR: 'remove-error',\n    DID_START_ITEM_REMOVE: 'busy',\n    DID_START_ITEM_PROCESSING: 'busy processing',\n    DID_REQUEST_ITEM_PROCESSING: 'busy processing',\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: 'processing',\n    DID_COMPLETE_ITEM_PROCESSING: 'processing-complete',\n    DID_THROW_ITEM_PROCESSING_ERROR: 'processing-error',\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: 'processing-revert-error',\n    DID_ABORT_ITEM_PROCESSING: 'cancelled',\n    DID_REVERT_ITEM_PROCESSING: 'idle',\n};\n\n/**\n * Creates the file view\n */\nconst create$7 = ({ root, props }) => {\n    // select\n    root.ref.handleClick = e => root.dispatch('DID_ACTIVATE_ITEM', { id: props.id });\n\n    // set id\n    root.element.id = `filepond--item-${props.id}`;\n    root.element.addEventListener('click', root.ref.handleClick);\n\n    // file view\n    root.ref.container = root.appendChildView(root.createChildView(fileWrapper, { id: props.id }));\n\n    // file panel\n    root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'item-panel' }));\n\n    // default start height\n    root.ref.panel.height = null;\n\n    // by default not marked for removal\n    props.markedForRemoval = false;\n\n    // if not allowed to reorder file items, exit here\n    if (!root.query('GET_ALLOW_REORDER')) return;\n\n    // set to idle so shows grab cursor\n    root.element.dataset.dragState = 'idle';\n\n    const grab = e => {\n        if (!e.isPrimary) return;\n\n        let removedActivateListener = false;\n\n        const origin = {\n            x: e.pageX,\n            y: e.pageY,\n        };\n\n        props.dragOrigin = {\n            x: root.translateX,\n            y: root.translateY,\n        };\n\n        props.dragCenter = {\n            x: e.offsetX,\n            y: e.offsetY,\n        };\n\n        const dragState = createDragHelper(root.query('GET_ACTIVE_ITEMS'));\n\n        root.dispatch('DID_GRAB_ITEM', { id: props.id, dragState });\n\n        const drag = e => {\n            if (!e.isPrimary) return;\n\n            e.stopPropagation();\n            e.preventDefault();\n\n            props.dragOffset = {\n                x: e.pageX - origin.x,\n                y: e.pageY - origin.y,\n            };\n\n            // if dragged stop listening to clicks, will re-add when done dragging\n            const dist =\n                props.dragOffset.x * props.dragOffset.x + props.dragOffset.y * props.dragOffset.y;\n            if (dist > 16 && !removedActivateListener) {\n                removedActivateListener = true;\n                root.element.removeEventListener('click', root.ref.handleClick);\n            }\n\n            root.dispatch('DID_DRAG_ITEM', { id: props.id, dragState });\n        };\n\n        const drop = e => {\n            if (!e.isPrimary) return;\n\n            document.removeEventListener('pointermove', drag);\n            document.removeEventListener('pointerup', drop);\n\n            props.dragOffset = {\n                x: e.pageX - origin.x,\n                y: e.pageY - origin.y,\n            };\n\n            root.dispatch('DID_DROP_ITEM', { id: props.id, dragState });\n\n            // start listening to clicks again\n            if (removedActivateListener) {\n                setTimeout(() => root.element.addEventListener('click', root.ref.handleClick), 0);\n            }\n        };\n\n        document.addEventListener('pointermove', drag);\n        document.addEventListener('pointerup', drop);\n    };\n\n    root.element.addEventListener('pointerdown', grab);\n};\n\nconst route$1 = createRoute({\n    DID_UPDATE_PANEL_HEIGHT: ({ root, action }) => {\n        root.height = action.height;\n    },\n});\n\nconst write$4 = createRoute(\n    {\n        DID_GRAB_ITEM: ({ root, props }) => {\n            props.dragOrigin = {\n                x: root.translateX,\n                y: root.translateY,\n            };\n        },\n        DID_DRAG_ITEM: ({ root }) => {\n            root.element.dataset.dragState = 'drag';\n        },\n        DID_DROP_ITEM: ({ root, props }) => {\n            props.dragOffset = null;\n            props.dragOrigin = null;\n            root.element.dataset.dragState = 'drop';\n        },\n    },\n    ({ root, actions, props, shouldOptimize }) => {\n        if (root.element.dataset.dragState === 'drop') {\n            if (root.scaleX <= 1) {\n                root.element.dataset.dragState = 'idle';\n            }\n        }\n\n        // select last state change action\n        let action = actions\n            .concat()\n            .filter(action => /^DID_/.test(action.type))\n            .reverse()\n            .find(action => StateMap[action.type]);\n\n        // no need to set same state twice\n        if (action && action.type !== props.currentState) {\n            // set current state\n            props.currentState = action.type;\n\n            // set state\n            root.element.dataset.filepondItemState = StateMap[props.currentState] || '';\n        }\n\n        // route actions\n        const aspectRatio =\n            root.query('GET_ITEM_PANEL_ASPECT_RATIO') || root.query('GET_PANEL_ASPECT_RATIO');\n        if (!aspectRatio) {\n            route$1({ root, actions, props });\n            if (!root.height && root.ref.container.rect.element.height > 0) {\n                root.height = root.ref.container.rect.element.height;\n            }\n        } else if (!shouldOptimize) {\n            root.height = root.rect.element.width * aspectRatio;\n        }\n\n        // sync panel height with item height\n        if (shouldOptimize) {\n            root.ref.panel.height = null;\n        }\n\n        root.ref.panel.height = root.height;\n    }\n);\n\nconst item = createView({\n    create: create$7,\n    write: write$4,\n    destroy: ({ root, props }) => {\n        root.element.removeEventListener('click', root.ref.handleClick);\n        root.dispatch('RELEASE_ITEM', { query: props.id });\n    },\n    tag: 'li',\n    name: 'item',\n    mixins: {\n        apis: [\n            'id',\n            'interactionMethod',\n            'markedForRemoval',\n            'spawnDate',\n            'dragCenter',\n            'dragOrigin',\n            'dragOffset',\n        ],\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity', 'height'],\n        animations: {\n            scaleX: ITEM_SCALE_SPRING,\n            scaleY: ITEM_SCALE_SPRING,\n            translateX: ITEM_TRANSLATE_SPRING,\n            translateY: ITEM_TRANSLATE_SPRING,\n            opacity: { type: 'tween', duration: 150 },\n        },\n    },\n});\n\nvar getItemsPerRow = (horizontalSpace, itemWidth) => {\n    // add one pixel leeway, when using percentages for item width total items can be 1.99 per row\n\n    return Math.max(1, Math.floor((horizontalSpace + 1) / itemWidth));\n};\n\nconst getItemIndexByPosition = (view, children, positionInView) => {\n    if (!positionInView) return;\n\n    const horizontalSpace = view.rect.element.width;\n    // const children = view.childViews;\n    const l = children.length;\n    let last = null;\n\n    // -1, don't move items to accomodate (either add to top or bottom)\n    if (l === 0 || positionInView.top < children[0].rect.element.top) return -1;\n\n    // let's get the item width\n    const item = children[0];\n    const itemRect = item.rect.element;\n    const itemHorizontalMargin = itemRect.marginLeft + itemRect.marginRight;\n    const itemWidth = itemRect.width + itemHorizontalMargin;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        for (let index = 0; index < l; index++) {\n            const child = children[index];\n            const childMid = child.rect.outer.top + child.rect.element.height * 0.5;\n            if (positionInView.top < childMid) {\n                return index;\n            }\n        }\n        return l;\n    }\n\n    // grid\n    const itemVerticalMargin = itemRect.marginTop + itemRect.marginBottom;\n    const itemHeight = itemRect.height + itemVerticalMargin;\n    for (let index = 0; index < l; index++) {\n        const indexX = index % itemsPerRow;\n        const indexY = Math.floor(index / itemsPerRow);\n\n        const offsetX = indexX * itemWidth;\n        const offsetY = indexY * itemHeight;\n\n        const itemTop = offsetY - itemRect.marginTop;\n        const itemRight = offsetX + itemWidth;\n        const itemBottom = offsetY + itemHeight + itemRect.marginBottom;\n\n        if (positionInView.top < itemBottom && positionInView.top > itemTop) {\n            if (positionInView.left < itemRight) {\n                return index;\n            } else if (index !== l - 1) {\n                last = index;\n            } else {\n                last = null;\n            }\n        }\n    }\n\n    if (last !== null) {\n        return last;\n    }\n\n    return l;\n};\n\nconst dropAreaDimensions = {\n    height: 0,\n    width: 0,\n    get getHeight() {\n        return this.height;\n    },\n    set setHeight(val) {\n        if (this.height === 0 || val === 0) this.height = val;\n    },\n    get getWidth() {\n        return this.width;\n    },\n    set setWidth(val) {\n        if (this.width === 0 || val === 0) this.width = val;\n    },\n    setDimensions: function(height, width) {\n        if (this.height === 0 || height === 0) this.height = height;\n        if (this.width === 0 || width === 0) this.width = width;\n    },\n};\n\nconst create$8 = ({ root }) => {\n    // need to set role to list as otherwise it won't be read as a list by VoiceOver\n    attr(root.element, 'role', 'list');\n\n    root.ref.lastItemSpanwDate = Date.now();\n};\n\n/**\n * Inserts a new item\n * @param root\n * @param action\n */\nconst addItemView = ({ root, action }) => {\n    const { id, index, interactionMethod } = action;\n\n    root.ref.addIndex = index;\n\n    const now = Date.now();\n    let spawnDate = now;\n    let opacity = 1;\n\n    if (interactionMethod !== InteractionMethod.NONE) {\n        opacity = 0;\n        const cooldown = root.query('GET_ITEM_INSERT_INTERVAL');\n        const dist = now - root.ref.lastItemSpanwDate;\n        spawnDate = dist < cooldown ? now + (cooldown - dist) : now;\n    }\n\n    root.ref.lastItemSpanwDate = spawnDate;\n\n    root.appendChildView(\n        root.createChildView(\n            // view type\n            item,\n\n            // props\n            {\n                spawnDate,\n                id,\n                opacity,\n                interactionMethod,\n            }\n        ),\n        index\n    );\n};\n\nconst moveItem = (item, x, y, vx = 0, vy = 1) => {\n    // set to null to remove animation while dragging\n    if (item.dragOffset) {\n        item.translateX = null;\n        item.translateY = null;\n        item.translateX = item.dragOrigin.x + item.dragOffset.x;\n        item.translateY = item.dragOrigin.y + item.dragOffset.y;\n        item.scaleX = 1.025;\n        item.scaleY = 1.025;\n    } else {\n        item.translateX = x;\n        item.translateY = y;\n\n        if (Date.now() > item.spawnDate) {\n            // reveal element\n            if (item.opacity === 0) {\n                introItemView(item, x, y, vx, vy);\n            }\n\n            // make sure is default scale every frame\n            item.scaleX = 1;\n            item.scaleY = 1;\n            item.opacity = 1;\n        }\n    }\n};\n\nconst introItemView = (item, x, y, vx, vy) => {\n    if (item.interactionMethod === InteractionMethod.NONE) {\n        item.translateX = null;\n        item.translateX = x;\n        item.translateY = null;\n        item.translateY = y;\n    } else if (item.interactionMethod === InteractionMethod.DROP) {\n        item.translateX = null;\n        item.translateX = x - vx * 20;\n\n        item.translateY = null;\n        item.translateY = y - vy * 10;\n\n        item.scaleX = 0.8;\n        item.scaleY = 0.8;\n    } else if (item.interactionMethod === InteractionMethod.BROWSE) {\n        item.translateY = null;\n        item.translateY = y - 30;\n    } else if (item.interactionMethod === InteractionMethod.API) {\n        item.translateX = null;\n        item.translateX = x - 30;\n        item.translateY = null;\n    }\n};\n\n/**\n * Removes an existing item\n * @param root\n * @param action\n */\nconst removeItemView = ({ root, action }) => {\n    const { id } = action;\n\n    // get the view matching the given id\n    const view = root.childViews.find(child => child.id === id);\n\n    // if no view found, exit\n    if (!view) {\n        return;\n    }\n\n    // animate view out of view\n    view.scaleX = 0.9;\n    view.scaleY = 0.9;\n    view.opacity = 0;\n\n    // mark for removal\n    view.markedForRemoval = true;\n};\n\nconst getItemHeight = child =>\n    child.rect.element.height +\n    child.rect.element.marginBottom * 0.5 +\n    child.rect.element.marginTop * 0.5;\nconst getItemWidth = child =>\n    child.rect.element.width +\n    child.rect.element.marginLeft * 0.5 +\n    child.rect.element.marginRight * 0.5;\n\nconst dragItem = ({ root, action }) => {\n    const { id, dragState } = action;\n\n    // reference to item\n    const item = root.query('GET_ITEM', { id });\n\n    // get the view matching the given id\n    const view = root.childViews.find(child => child.id === id);\n\n    const numItems = root.childViews.length;\n    const oldIndex = dragState.getItemIndex(item);\n\n    // if no view found, exit\n    if (!view) return;\n\n    const dragPosition = {\n        x: view.dragOrigin.x + view.dragOffset.x + view.dragCenter.x,\n        y: view.dragOrigin.y + view.dragOffset.y + view.dragCenter.y,\n    };\n\n    // get drag area dimensions\n    const dragHeight = getItemHeight(view);\n    const dragWidth = getItemWidth(view);\n\n    // get rows and columns (There will always be at least one row and one column if a file is present)\n    let cols = Math.floor(root.rect.outer.width / dragWidth);\n    if (cols > numItems) cols = numItems;\n\n    // rows are used to find when we have left the preview area bounding box\n    const rows = Math.floor(numItems / cols + 1);\n\n    dropAreaDimensions.setHeight = dragHeight * rows;\n    dropAreaDimensions.setWidth = dragWidth * cols;\n\n    // get new index of dragged item\n    var location = {\n        y: Math.floor(dragPosition.y / dragHeight),\n        x: Math.floor(dragPosition.x / dragWidth),\n        getGridIndex: function getGridIndex() {\n            if (\n                dragPosition.y > dropAreaDimensions.getHeight ||\n                dragPosition.y < 0 ||\n                dragPosition.x > dropAreaDimensions.getWidth ||\n                dragPosition.x < 0\n            )\n                return oldIndex;\n            return this.y * cols + this.x;\n        },\n        getColIndex: function getColIndex() {\n            const items = root.query('GET_ACTIVE_ITEMS');\n            const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n            const children = items.map(item =>\n                visibleChildren.find(childView => childView.id === item.id)\n            );\n            const currentIndex = children.findIndex(child => child === view);\n            const dragHeight = getItemHeight(view);\n            const l = children.length;\n            let idx = l;\n            let childHeight = 0;\n            let childBottom = 0;\n            let childTop = 0;\n            for (let i = 0; i < l; i++) {\n                childHeight = getItemHeight(children[i]);\n                childTop = childBottom;\n                childBottom = childTop + childHeight;\n                if (dragPosition.y < childBottom) {\n                    if (currentIndex > i) {\n                        if (dragPosition.y < childTop + dragHeight) {\n                            idx = i;\n                            break;\n                        }\n                        continue;\n                    }\n                    idx = i;\n                    break;\n                }\n            }\n            return idx;\n        },\n    };\n\n    // get new index\n    const index = cols > 1 ? location.getGridIndex() : location.getColIndex();\n    root.dispatch('MOVE_ITEM', { query: view, index });\n\n    // if the index of the item changed, dispatch reorder action\n    const currentIndex = dragState.getIndex();\n\n    if (currentIndex === undefined || currentIndex !== index) {\n        dragState.setIndex(index);\n\n        if (currentIndex === undefined) return;\n\n        root.dispatch('DID_REORDER_ITEMS', {\n            items: root.query('GET_ACTIVE_ITEMS'),\n            origin: oldIndex,\n            target: index,\n        });\n    }\n};\n\n/**\n * Setup action routes\n */\nconst route$2 = createRoute({\n    DID_ADD_ITEM: addItemView,\n    DID_REMOVE_ITEM: removeItemView,\n    DID_DRAG_ITEM: dragItem,\n});\n\n/**\n * Write to view\n * @param root\n * @param actions\n * @param props\n */\nconst write$5 = ({ root, props, actions, shouldOptimize }) => {\n    // route actions\n    route$2({ root, props, actions });\n\n    const { dragCoordinates } = props;\n\n    // available space on horizontal axis\n    const horizontalSpace = root.rect.element.width;\n\n    // only draw children that have dimensions\n    const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n\n    // sort based on current active items\n    const children = root\n        .query('GET_ACTIVE_ITEMS')\n        .map(item => visibleChildren.find(child => child.id === item.id))\n        .filter(item => item);\n\n    // get index\n    const dragIndex = dragCoordinates\n        ? getItemIndexByPosition(root, children, dragCoordinates)\n        : null;\n\n    // add index is used to reserve the dropped/added item index till the actual item is rendered\n    const addIndex = root.ref.addIndex || null;\n\n    // add index no longer needed till possibly next draw\n    root.ref.addIndex = null;\n\n    let dragIndexOffset = 0;\n    let removeIndexOffset = 0;\n    let addIndexOffset = 0;\n\n    if (children.length === 0) return;\n\n    const childRect = children[0].rect.element;\n    const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n    const itemWidth = childRect.width + itemHorizontalMargin;\n    const itemHeight = childRect.height + itemVerticalMargin;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        let offsetY = 0;\n        let dragOffset = 0;\n\n        children.forEach((child, index) => {\n            if (dragIndex) {\n                let dist = index - dragIndex;\n                if (dist === -2) {\n                    dragOffset = -itemVerticalMargin * 0.25;\n                } else if (dist === -1) {\n                    dragOffset = -itemVerticalMargin * 0.75;\n                } else if (dist === 0) {\n                    dragOffset = itemVerticalMargin * 0.75;\n                } else if (dist === 1) {\n                    dragOffset = itemVerticalMargin * 0.25;\n                } else {\n                    dragOffset = 0;\n                }\n            }\n\n            if (shouldOptimize) {\n                child.translateX = null;\n                child.translateY = null;\n            }\n\n            if (!child.markedForRemoval) {\n                moveItem(child, 0, offsetY + dragOffset);\n            }\n\n            let itemHeight = child.rect.element.height + itemVerticalMargin;\n\n            let visualHeight = itemHeight * (child.markedForRemoval ? child.opacity : 1);\n\n            offsetY += visualHeight;\n        });\n    }\n    // grid\n    else {\n        let prevX = 0;\n        let prevY = 0;\n\n        children.forEach((child, index) => {\n            if (index === dragIndex) {\n                dragIndexOffset = 1;\n            }\n\n            if (index === addIndex) {\n                addIndexOffset += 1;\n            }\n\n            if (child.markedForRemoval && child.opacity < 0.5) {\n                removeIndexOffset -= 1;\n            }\n\n            const visualIndex = index + addIndexOffset + dragIndexOffset + removeIndexOffset;\n\n            const indexX = visualIndex % itemsPerRow;\n            const indexY = Math.floor(visualIndex / itemsPerRow);\n\n            const offsetX = indexX * itemWidth;\n            const offsetY = indexY * itemHeight;\n\n            const vectorX = Math.sign(offsetX - prevX);\n            const vectorY = Math.sign(offsetY - prevY);\n\n            prevX = offsetX;\n            prevY = offsetY;\n\n            if (child.markedForRemoval) return;\n\n            if (shouldOptimize) {\n                child.translateX = null;\n                child.translateY = null;\n            }\n\n            moveItem(child, offsetX, offsetY, vectorX, vectorY);\n        });\n    }\n};\n\n/**\n * Filters actions that are meant specifically for a certain child of the list\n * @param child\n * @param actions\n */\nconst filterSetItemActions = (child, actions) =>\n    actions.filter(action => {\n        // if action has an id, filter out actions that don't have this child id\n        if (action.data && action.data.id) {\n            return child.id === action.data.id;\n        }\n\n        // allow all other actions\n        return true;\n    });\n\nconst list = createView({\n    create: create$8,\n    write: write$5,\n    tag: 'ul',\n    name: 'list',\n    didWriteView: ({ root }) => {\n        root.childViews\n            .filter(view => view.markedForRemoval && view.opacity === 0 && view.resting)\n            .forEach(view => {\n                view._destroy();\n                root.removeChildView(view);\n            });\n    },\n    filterFrameActionsForChild: filterSetItemActions,\n    mixins: {\n        apis: ['dragCoordinates'],\n    },\n});\n\nconst create$9 = ({ root, props }) => {\n    root.ref.list = root.appendChildView(root.createChildView(list));\n    props.dragCoordinates = null;\n    props.overflowing = false;\n};\n\nconst storeDragCoordinates = ({ root, props, action }) => {\n    if (!root.query('GET_ITEM_INSERT_LOCATION_FREEDOM')) return;\n    props.dragCoordinates = {\n        left: action.position.scopeLeft - root.ref.list.rect.element.left,\n        top:\n            action.position.scopeTop -\n            (root.rect.outer.top + root.rect.element.marginTop + root.rect.element.scrollTop),\n    };\n};\n\nconst clearDragCoordinates = ({ props }) => {\n    props.dragCoordinates = null;\n};\n\nconst route$3 = createRoute({\n    DID_DRAG: storeDragCoordinates,\n    DID_END_DRAG: clearDragCoordinates,\n});\n\nconst write$6 = ({ root, props, actions }) => {\n    // route actions\n    route$3({ root, props, actions });\n\n    // current drag position\n    root.ref.list.dragCoordinates = props.dragCoordinates;\n\n    // if currently overflowing but no longer received overflow\n    if (props.overflowing && !props.overflow) {\n        props.overflowing = false;\n\n        // reset overflow state\n        root.element.dataset.state = '';\n        root.height = null;\n    }\n\n    // if is not overflowing currently but does receive overflow value\n    if (props.overflow) {\n        const newHeight = Math.round(props.overflow);\n        if (newHeight !== root.height) {\n            props.overflowing = true;\n            root.element.dataset.state = 'overflow';\n            root.height = newHeight;\n        }\n    }\n};\n\nconst listScroller = createView({\n    create: create$9,\n    write: write$6,\n    name: 'list-scroller',\n    mixins: {\n        apis: ['overflow', 'dragCoordinates'],\n        styles: ['height', 'translateY'],\n        animations: {\n            translateY: 'spring',\n        },\n    },\n});\n\nconst attrToggle = (element, name, state, enabledValue = '') => {\n    if (state) {\n        attr(element, name, enabledValue);\n    } else {\n        element.removeAttribute(name);\n    }\n};\n\nconst resetFileInput = input => {\n    // no value, no need to reset\n    if (!input || input.value === '') {\n        return;\n    }\n\n    try {\n        // for modern browsers\n        input.value = '';\n    } catch (err) {}\n\n    // for IE10\n    if (input.value) {\n        // quickly append input to temp form and reset form\n        const form = createElement$1('form');\n        const parentNode = input.parentNode;\n        const ref = input.nextSibling;\n        form.appendChild(input);\n        form.reset();\n\n        // re-inject input where it originally was\n        if (ref) {\n            parentNode.insertBefore(input, ref);\n        } else {\n            parentNode.appendChild(input);\n        }\n    }\n};\n\nconst create$a = ({ root, props }) => {\n    // set id so can be referenced from outside labels\n    root.element.id = `filepond--browser-${props.id}`;\n\n    // set name of element (is removed when a value is set)\n    attr(root.element, 'name', root.query('GET_NAME'));\n\n    // we have to link this element to the status element\n    attr(root.element, 'aria-controls', `filepond--assistant-${props.id}`);\n\n    // set label, we use labelled by as otherwise the screenreader does not read the \"browse\" text in the label (as it has tabindex: 0)\n    attr(root.element, 'aria-labelledby', `filepond--drop-label-${props.id}`);\n\n    // set configurable props\n    setAcceptedFileTypes({ root, action: { value: root.query('GET_ACCEPTED_FILE_TYPES') } });\n    toggleAllowMultiple({ root, action: { value: root.query('GET_ALLOW_MULTIPLE') } });\n    toggleDirectoryFilter({ root, action: { value: root.query('GET_ALLOW_DIRECTORIES_ONLY') } });\n    toggleDisabled({ root });\n    toggleRequired({ root, action: { value: root.query('GET_REQUIRED') } });\n    setCaptureMethod({ root, action: { value: root.query('GET_CAPTURE_METHOD') } });\n\n    // handle changes to the input field\n    root.ref.handleChange = e => {\n        if (!root.element.value) {\n            return;\n        }\n\n        // extract files and move value of webkitRelativePath path to _relativePath\n        const files = Array.from(root.element.files).map(file => {\n            file._relativePath = file.webkitRelativePath;\n            return file;\n        });\n\n        // we add a little delay so the OS file select window can move out of the way before we add our file\n        setTimeout(() => {\n            // load files\n            props.onload(files);\n\n            // reset input, it's just for exposing a method to drop files, should not retain any state\n            resetFileInput(root.element);\n        }, 250);\n    };\n\n    root.element.addEventListener('change', root.ref.handleChange);\n};\n\nconst setAcceptedFileTypes = ({ root, action }) => {\n    if (!root.query('GET_ALLOW_SYNC_ACCEPT_ATTRIBUTE')) return;\n    attrToggle(root.element, 'accept', !!action.value, action.value ? action.value.join(',') : '');\n};\n\nconst toggleAllowMultiple = ({ root, action }) => {\n    attrToggle(root.element, 'multiple', action.value);\n};\n\nconst toggleDirectoryFilter = ({ root, action }) => {\n    attrToggle(root.element, 'webkitdirectory', action.value);\n};\n\nconst toggleDisabled = ({ root }) => {\n    const isDisabled = root.query('GET_DISABLED');\n    const doesAllowBrowse = root.query('GET_ALLOW_BROWSE');\n    const disableField = isDisabled || !doesAllowBrowse;\n    attrToggle(root.element, 'disabled', disableField);\n};\n\nconst toggleRequired = ({ root, action }) => {\n    // want to remove required, always possible\n    if (!action.value) {\n        attrToggle(root.element, 'required', false);\n    }\n    // if want to make required, only possible when zero items\n    else if (root.query('GET_TOTAL_ITEMS') === 0) {\n        attrToggle(root.element, 'required', true);\n    }\n};\n\nconst setCaptureMethod = ({ root, action }) => {\n    attrToggle(root.element, 'capture', !!action.value, action.value === true ? '' : action.value);\n};\n\nconst updateRequiredStatus = ({ root }) => {\n    const { element } = root;\n    // always remove the required attribute when more than zero items\n    if (root.query('GET_TOTAL_ITEMS') > 0) {\n        attrToggle(element, 'required', false);\n        attrToggle(element, 'name', false);\n    } else {\n        // add name attribute\n        attrToggle(element, 'name', true, root.query('GET_NAME'));\n\n        // remove any validation messages\n        const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n        if (shouldCheckValidity) {\n            element.setCustomValidity('');\n        }\n\n        // we only add required if the field has been deemed required\n        if (root.query('GET_REQUIRED')) {\n            attrToggle(element, 'required', true);\n        }\n    }\n};\n\nconst updateFieldValidityStatus = ({ root }) => {\n    const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n    if (!shouldCheckValidity) return;\n    root.element.setCustomValidity(root.query('GET_LABEL_INVALID_FIELD'));\n};\n\nconst browser = createView({\n    tag: 'input',\n    name: 'browser',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    attributes: {\n        type: 'file',\n    },\n    create: create$a,\n    destroy: ({ root }) => {\n        root.element.removeEventListener('change', root.ref.handleChange);\n    },\n    write: createRoute({\n        DID_LOAD_ITEM: updateRequiredStatus,\n        DID_REMOVE_ITEM: updateRequiredStatus,\n        DID_THROW_ITEM_INVALID: updateFieldValidityStatus,\n\n        DID_SET_DISABLED: toggleDisabled,\n        DID_SET_ALLOW_BROWSE: toggleDisabled,\n        DID_SET_ALLOW_DIRECTORIES_ONLY: toggleDirectoryFilter,\n        DID_SET_ALLOW_MULTIPLE: toggleAllowMultiple,\n        DID_SET_ACCEPTED_FILE_TYPES: setAcceptedFileTypes,\n        DID_SET_CAPTURE_METHOD: setCaptureMethod,\n        DID_SET_REQUIRED: toggleRequired,\n    }),\n});\n\nconst Key = {\n    ENTER: 13,\n    SPACE: 32,\n};\n\nconst create$b = ({ root, props }) => {\n    // create the label and link it to the file browser\n    const label = createElement$1('label');\n    attr(label, 'for', `filepond--browser-${props.id}`);\n\n    // use for labeling file input (aria-labelledby on file input)\n    attr(label, 'id', `filepond--drop-label-${props.id}`);\n\n    // hide the label for screenreaders, the input element will read the contents of the label when it's focussed. If we don't set aria-hidden the screenreader will also navigate the contents of the label separately from the input.\n    attr(label, 'aria-hidden', 'true');\n\n    // handle keys\n    root.ref.handleKeyDown = e => {\n        const isActivationKey = e.keyCode === Key.ENTER || e.keyCode === Key.SPACE;\n        if (!isActivationKey) return;\n        // stops from triggering the element a second time\n        e.preventDefault();\n\n        // click link (will then in turn activate file input)\n        root.ref.label.click();\n    };\n\n    root.ref.handleClick = e => {\n        const isLabelClick = e.target === label || label.contains(e.target);\n\n        // don't want to click twice\n        if (isLabelClick) return;\n\n        // click link (will then in turn activate file input)\n        root.ref.label.click();\n    };\n\n    // attach events\n    label.addEventListener('keydown', root.ref.handleKeyDown);\n    root.element.addEventListener('click', root.ref.handleClick);\n\n    // update\n    updateLabelValue(label, props.caption);\n\n    // add!\n    root.appendChild(label);\n    root.ref.label = label;\n};\n\nconst updateLabelValue = (label, value) => {\n    label.innerHTML = value;\n    const clickable = label.querySelector('.filepond--label-action');\n    if (clickable) {\n        attr(clickable, 'tabindex', '0');\n    }\n    return value;\n};\n\nconst dropLabel = createView({\n    name: 'drop-label',\n    ignoreRect: true,\n    create: create$b,\n    destroy: ({ root }) => {\n        root.ref.label.addEventListener('keydown', root.ref.handleKeyDown);\n        root.element.removeEventListener('click', root.ref.handleClick);\n    },\n    write: createRoute({\n        DID_SET_LABEL_IDLE: ({ root, action }) => {\n            updateLabelValue(root.ref.label, action.value);\n        },\n    }),\n    mixins: {\n        styles: ['opacity', 'translateX', 'translateY'],\n        animations: {\n            opacity: { type: 'tween', duration: 150 },\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\nconst blob = createView({\n    name: 'drip-blob',\n    ignoreRect: true,\n    mixins: {\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            translateX: 'spring',\n            translateY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n    },\n});\n\nconst addBlob = ({ root }) => {\n    const centerX = root.rect.element.width * 0.5;\n    const centerY = root.rect.element.height * 0.5;\n\n    root.ref.blob = root.appendChildView(\n        root.createChildView(blob, {\n            opacity: 0,\n            scaleX: 2.5,\n            scaleY: 2.5,\n            translateX: centerX,\n            translateY: centerY,\n        })\n    );\n};\n\nconst moveBlob = ({ root, action }) => {\n    if (!root.ref.blob) {\n        addBlob({ root });\n        return;\n    }\n\n    root.ref.blob.translateX = action.position.scopeLeft;\n    root.ref.blob.translateY = action.position.scopeTop;\n    root.ref.blob.scaleX = 1;\n    root.ref.blob.scaleY = 1;\n    root.ref.blob.opacity = 1;\n};\n\nconst hideBlob = ({ root }) => {\n    if (!root.ref.blob) {\n        return;\n    }\n    root.ref.blob.opacity = 0;\n};\n\nconst explodeBlob = ({ root }) => {\n    if (!root.ref.blob) {\n        return;\n    }\n    root.ref.blob.scaleX = 2.5;\n    root.ref.blob.scaleY = 2.5;\n    root.ref.blob.opacity = 0;\n};\n\nconst write$7 = ({ root, props, actions }) => {\n    route$4({ root, props, actions });\n\n    const { blob } = root.ref;\n\n    if (actions.length === 0 && blob && blob.opacity === 0) {\n        root.removeChildView(blob);\n        root.ref.blob = null;\n    }\n};\n\nconst route$4 = createRoute({\n    DID_DRAG: moveBlob,\n    DID_DROP: explodeBlob,\n    DID_END_DRAG: hideBlob,\n});\n\nconst drip = createView({\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'drip',\n    write: write$7,\n});\n\nconst setInputFiles = (element, files) => {\n    try {\n        // Create a DataTransfer instance and add a newly created file\n        const dataTransfer = new DataTransfer();\n        files.forEach(file => {\n            if (file instanceof File) {\n                dataTransfer.items.add(file);\n            } else {\n                dataTransfer.items.add(\n                    new File([file], file.name, {\n                        type: file.type,\n                    })\n                );\n            }\n        });\n\n        // Assign the DataTransfer files list to the file input\n        element.files = dataTransfer.files;\n    } catch (err) {\n        return false;\n    }\n    return true;\n};\n\nconst create$c = ({ root }) => (root.ref.fields = {});\n\nconst getField = (root, id) => root.ref.fields[id];\n\nconst syncFieldPositionsWithItems = root => {\n    root.query('GET_ACTIVE_ITEMS').forEach(item => {\n        if (!root.ref.fields[item.id]) return;\n        root.element.appendChild(root.ref.fields[item.id]);\n    });\n};\n\nconst didReorderItems = ({ root }) => syncFieldPositionsWithItems(root);\n\nconst didAddItem = ({ root, action }) => {\n    const fileItem = root.query('GET_ITEM', action.id);\n    const isLocalFile = fileItem.origin === FileOrigin.LOCAL;\n    const shouldUseFileInput = !isLocalFile && root.query('SHOULD_UPDATE_FILE_INPUT');\n    const dataContainer = createElement$1('input');\n    dataContainer.type = shouldUseFileInput ? 'file' : 'hidden';\n    dataContainer.name = root.query('GET_NAME');\n    dataContainer.disabled = root.query('GET_DISABLED');\n    root.ref.fields[action.id] = dataContainer;\n    syncFieldPositionsWithItems(root);\n};\n\nconst didLoadItem$1 = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n\n    // store server ref in hidden input\n    if (action.serverFileReference !== null) field.value = action.serverFileReference;\n\n    // store file item in file input\n    if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n\n    const fileItem = root.query('GET_ITEM', action.id);\n    setInputFiles(field, [fileItem.file]);\n};\n\nconst didPrepareOutput = ({ root, action }) => {\n    // this timeout pushes the handler after 'load'\n    if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n    setTimeout(() => {\n        const field = getField(root, action.id);\n        if (!field) return;\n        setInputFiles(field, [action.file]);\n    }, 0);\n};\n\nconst didSetDisabled = ({ root }) => {\n    root.element.disabled = root.query('GET_DISABLED');\n};\n\nconst didRemoveItem = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    if (field.parentNode) field.parentNode.removeChild(field);\n    delete root.ref.fields[action.id];\n};\n\n// only runs for server files. will refuse to update the value if the field\n// is a file field\nconst didDefineValue = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    if (action.value === null) {\n        // clear field value\n        field.removeAttribute('value');\n    } else {\n        // set field value\n        if (field.type != 'file') {\n            field.value = action.value;\n        }\n    }\n    syncFieldPositionsWithItems(root);\n};\n\nconst write$8 = createRoute({\n    DID_SET_DISABLED: didSetDisabled,\n    DID_ADD_ITEM: didAddItem,\n    DID_LOAD_ITEM: didLoadItem$1,\n    DID_REMOVE_ITEM: didRemoveItem,\n    DID_DEFINE_VALUE: didDefineValue,\n    DID_PREPARE_OUTPUT: didPrepareOutput,\n    DID_REORDER_ITEMS: didReorderItems,\n    DID_SORT_ITEMS: didReorderItems,\n});\n\nconst data = createView({\n    tag: 'fieldset',\n    name: 'data',\n    create: create$c,\n    write: write$8,\n    ignoreRect: true,\n});\n\nconst getRootNode = element => ('getRootNode' in element ? element.getRootNode() : document);\n\nconst images = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];\nconst text$1 = ['css', 'csv', 'html', 'txt'];\nconst map = {\n    zip: 'zip|compressed',\n    epub: 'application/epub+zip',\n};\n\nconst guesstimateMimeType = (extension = '') => {\n    extension = extension.toLowerCase();\n    if (images.includes(extension)) {\n        return (\n            'image/' + (extension === 'jpg' ? 'jpeg' : extension === 'svg' ? 'svg+xml' : extension)\n        );\n    }\n    if (text$1.includes(extension)) {\n        return 'text/' + extension;\n    }\n\n    return map[extension] || '';\n};\n\nconst requestDataTransferItems = dataTransfer =>\n    new Promise((resolve, reject) => {\n        // try to get links from transfer, if found we'll exit immediately (unless a file is in the dataTransfer as well, this is because Firefox could represent the file as a URL and a file object at the same time)\n        const links = getLinks(dataTransfer);\n        if (links.length && !hasFiles(dataTransfer)) {\n            return resolve(links);\n        }\n        // try to get files from the transfer\n        getFiles(dataTransfer).then(resolve);\n    });\n\n/**\n * Test if datatransfer has files\n */\nconst hasFiles = dataTransfer => {\n    if (dataTransfer.files) return dataTransfer.files.length > 0;\n    return false;\n};\n\n/**\n * Extracts files from a DataTransfer object\n */\nconst getFiles = dataTransfer =>\n    new Promise((resolve, reject) => {\n        // get the transfer items as promises\n        const promisedFiles = (dataTransfer.items ? Array.from(dataTransfer.items) : [])\n\n            // only keep file system items (files and directories)\n            .filter(item => isFileSystemItem(item))\n\n            // map each item to promise\n            .map(item => getFilesFromItem(item));\n\n        // if is empty, see if we can extract some info from the files property as a fallback\n        if (!promisedFiles.length) {\n            // TODO: test for directories (should not be allowed)\n            // Use FileReader, problem is that the files property gets lost in the process\n            resolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);\n            return;\n        }\n\n        // done!\n        Promise.all(promisedFiles)\n            .then(returnedFileGroups => {\n                // flatten groups\n                const files = [];\n                returnedFileGroups.forEach(group => {\n                    files.push.apply(files, group);\n                });\n\n                // done (filter out empty files)!\n                resolve(\n                    files\n                        .filter(file => file)\n                        .map(file => {\n                            if (!file._relativePath) file._relativePath = file.webkitRelativePath;\n                            return file;\n                        })\n                );\n            })\n            .catch(console.error);\n    });\n\nconst isFileSystemItem = item => {\n    if (isEntry(item)) {\n        const entry = getAsEntry(item);\n        if (entry) {\n            return entry.isFile || entry.isDirectory;\n        }\n    }\n    return item.kind === 'file';\n};\n\nconst getFilesFromItem = item =>\n    new Promise((resolve, reject) => {\n        if (isDirectoryEntry(item)) {\n            getFilesInDirectory(getAsEntry(item))\n                .then(resolve)\n                .catch(reject);\n            return;\n        }\n\n        resolve([item.getAsFile()]);\n    });\n\nconst getFilesInDirectory = entry =>\n    new Promise((resolve, reject) => {\n        const files = [];\n\n        // the total entries to read\n        let dirCounter = 0;\n        let fileCounter = 0;\n\n        const resolveIfDone = () => {\n            if (fileCounter === 0 && dirCounter === 0) {\n                resolve(files);\n            }\n        };\n\n        // the recursive function\n        const readEntries = dirEntry => {\n            dirCounter++;\n\n            const directoryReader = dirEntry.createReader();\n\n            // directories are returned in batches, we need to process all batches before we're done\n            const readBatch = () => {\n                directoryReader.readEntries(entries => {\n                    if (entries.length === 0) {\n                        dirCounter--;\n                        resolveIfDone();\n                        return;\n                    }\n\n                    entries.forEach(entry => {\n                        // recursively read more directories\n                        if (entry.isDirectory) {\n                            readEntries(entry);\n                        } else {\n                            // read as file\n                            fileCounter++;\n\n                            entry.file(file => {\n                                const correctedFile = correctMissingFileType(file);\n                                if (entry.fullPath) correctedFile._relativePath = entry.fullPath;\n                                files.push(correctedFile);\n                                fileCounter--;\n                                resolveIfDone();\n                            });\n                        }\n                    });\n\n                    // try to get next batch of files\n                    readBatch();\n                }, reject);\n            };\n\n            // read first batch of files\n            readBatch();\n        };\n\n        // go!\n        readEntries(entry);\n    });\n\nconst correctMissingFileType = file => {\n    if (file.type.length) return file;\n    const date = file.lastModifiedDate;\n    const name = file.name;\n    const type = guesstimateMimeType(getExtensionFromFilename(file.name));\n    if (!type.length) return file;\n    file = file.slice(0, file.size, type);\n    file.name = name;\n    file.lastModifiedDate = date;\n    return file;\n};\n\nconst isDirectoryEntry = item => isEntry(item) && (getAsEntry(item) || {}).isDirectory;\n\nconst isEntry = item => 'webkitGetAsEntry' in item;\n\nconst getAsEntry = item => item.webkitGetAsEntry();\n\n/**\n * Extracts links from a DataTransfer object\n */\nconst getLinks = dataTransfer => {\n    let links = [];\n    try {\n        // look in meta data property\n        links = getLinksFromTransferMetaData(dataTransfer);\n        if (links.length) {\n            return links;\n        }\n        links = getLinksFromTransferURLData(dataTransfer);\n    } catch (e) {\n        // nope nope nope (probably IE trouble)\n    }\n    return links;\n};\n\nconst getLinksFromTransferURLData = dataTransfer => {\n    let data = dataTransfer.getData('url');\n    if (typeof data === 'string' && data.length) {\n        return [data];\n    }\n    return [];\n};\n\nconst getLinksFromTransferMetaData = dataTransfer => {\n    let data = dataTransfer.getData('text/html');\n    if (typeof data === 'string' && data.length) {\n        const matches = data.match(/src\\s*=\\s*\"(.+?)\"/);\n        if (matches) {\n            return [matches[1]];\n        }\n    }\n    return [];\n};\n\nconst dragNDropObservers = [];\n\nconst eventPosition = e => ({\n    pageLeft: e.pageX,\n    pageTop: e.pageY,\n    scopeLeft: e.offsetX || e.layerX,\n    scopeTop: e.offsetY || e.layerY,\n});\n\nconst createDragNDropClient = (element, scopeToObserve, filterElement) => {\n    const observer = getDragNDropObserver(scopeToObserve);\n\n    const client = {\n        element,\n        filterElement,\n        state: null,\n        ondrop: () => {},\n        onenter: () => {},\n        ondrag: () => {},\n        onexit: () => {},\n        onload: () => {},\n        allowdrop: () => {},\n    };\n\n    client.destroy = observer.addListener(client);\n\n    return client;\n};\n\nconst getDragNDropObserver = element => {\n    // see if already exists, if so, return\n    const observer = dragNDropObservers.find(item => item.element === element);\n    if (observer) {\n        return observer;\n    }\n\n    // create new observer, does not yet exist for this element\n    const newObserver = createDragNDropObserver(element);\n    dragNDropObservers.push(newObserver);\n    return newObserver;\n};\n\nconst createDragNDropObserver = element => {\n    const clients = [];\n\n    const routes = {\n        dragenter,\n        dragover,\n        dragleave,\n        drop,\n    };\n\n    const handlers = {};\n\n    forin(routes, (event, createHandler) => {\n        handlers[event] = createHandler(element, clients);\n        element.addEventListener(event, handlers[event], false);\n    });\n\n    const observer = {\n        element,\n        addListener: client => {\n            // add as client\n            clients.push(client);\n\n            // return removeListener function\n            return () => {\n                // remove client\n                clients.splice(clients.indexOf(client), 1);\n\n                // if no more clients, clean up observer\n                if (clients.length === 0) {\n                    dragNDropObservers.splice(dragNDropObservers.indexOf(observer), 1);\n\n                    forin(routes, event => {\n                        element.removeEventListener(event, handlers[event], false);\n                    });\n                }\n            };\n        },\n    };\n\n    return observer;\n};\n\nconst elementFromPoint = (root, point) => {\n    if (!('elementFromPoint' in root)) {\n        root = document;\n    }\n    return root.elementFromPoint(point.x, point.y);\n};\n\nconst isEventTarget = (e, target) => {\n    // get root\n    const root = getRootNode(target);\n\n    // get element at position\n    // if root is not actual shadow DOM and does not have elementFromPoint method, use the one on document\n    const elementAtPosition = elementFromPoint(root, {\n        x: e.pageX - window.pageXOffset,\n        y: e.pageY - window.pageYOffset,\n    });\n\n    // test if target is the element or if one of its children is\n    return elementAtPosition === target || target.contains(elementAtPosition);\n};\n\nlet initialTarget = null;\n\nconst setDropEffect = (dataTransfer, effect) => {\n    // is in try catch as IE11 will throw error if not\n    try {\n        dataTransfer.dropEffect = effect;\n    } catch (e) {}\n};\n\nconst dragenter = (root, clients) => e => {\n    e.preventDefault();\n\n    initialTarget = e.target;\n\n    clients.forEach(client => {\n        const { element, onenter } = client;\n\n        if (isEventTarget(e, element)) {\n            client.state = 'enter';\n\n            // fire enter event\n            onenter(eventPosition(e));\n        }\n    });\n};\n\nconst dragover = (root, clients) => e => {\n    e.preventDefault();\n\n    const dataTransfer = e.dataTransfer;\n\n    requestDataTransferItems(dataTransfer).then(items => {\n        let overDropTarget = false;\n\n        clients.some(client => {\n            const { filterElement, element, onenter, onexit, ondrag, allowdrop } = client;\n\n            // by default we can drop\n            setDropEffect(dataTransfer, 'copy');\n\n            // allow transfer of these items\n            const allowsTransfer = allowdrop(items);\n\n            // only used when can be dropped on page\n            if (!allowsTransfer) {\n                setDropEffect(dataTransfer, 'none');\n                return;\n            }\n\n            // targetting this client\n            if (isEventTarget(e, element)) {\n                overDropTarget = true;\n\n                // had no previous state, means we are entering this client\n                if (client.state === null) {\n                    client.state = 'enter';\n                    onenter(eventPosition(e));\n                    return;\n                }\n\n                // now over element (no matter if it allows the drop or not)\n                client.state = 'over';\n\n                // needs to allow transfer\n                if (filterElement && !allowsTransfer) {\n                    setDropEffect(dataTransfer, 'none');\n                    return;\n                }\n\n                // dragging\n                ondrag(eventPosition(e));\n            } else {\n                // should be over an element to drop\n                if (filterElement && !overDropTarget) {\n                    setDropEffect(dataTransfer, 'none');\n                }\n\n                // might have just left this client?\n                if (client.state) {\n                    client.state = null;\n                    onexit(eventPosition(e));\n                }\n            }\n        });\n    });\n};\n\nconst drop = (root, clients) => e => {\n    e.preventDefault();\n\n    const dataTransfer = e.dataTransfer;\n\n    requestDataTransferItems(dataTransfer).then(items => {\n        clients.forEach(client => {\n            const { filterElement, element, ondrop, onexit, allowdrop } = client;\n\n            client.state = null;\n\n            // if we're filtering on element we need to be over the element to drop\n            if (filterElement && !isEventTarget(e, element)) return;\n\n            // no transfer for this client\n            if (!allowdrop(items)) return onexit(eventPosition(e));\n\n            // we can drop these items on this client\n            ondrop(eventPosition(e), items);\n        });\n    });\n};\n\nconst dragleave = (root, clients) => e => {\n    if (initialTarget !== e.target) {\n        return;\n    }\n\n    clients.forEach(client => {\n        const { onexit } = client;\n\n        client.state = null;\n\n        onexit(eventPosition(e));\n    });\n};\n\nconst createHopper = (scope, validateItems, options) => {\n    // is now hopper scope\n    scope.classList.add('filepond--hopper');\n\n    // shortcuts\n    const { catchesDropsOnPage, requiresDropOnElement, filterItems = items => items } = options;\n\n    // create a dnd client\n    const client = createDragNDropClient(\n        scope,\n        catchesDropsOnPage ? document.documentElement : scope,\n        requiresDropOnElement\n    );\n\n    // current client state\n    let lastState = '';\n    let currentState = '';\n\n    // determines if a file may be dropped\n    client.allowdrop = items => {\n        // TODO: if we can, throw error to indicate the items cannot by dropped\n\n        return validateItems(filterItems(items));\n    };\n\n    client.ondrop = (position, items) => {\n        const filteredItems = filterItems(items);\n\n        if (!validateItems(filteredItems)) {\n            api.ondragend(position);\n            return;\n        }\n\n        currentState = 'drag-drop';\n\n        api.onload(filteredItems, position);\n    };\n\n    client.ondrag = position => {\n        api.ondrag(position);\n    };\n\n    client.onenter = position => {\n        currentState = 'drag-over';\n\n        api.ondragstart(position);\n    };\n\n    client.onexit = position => {\n        currentState = 'drag-exit';\n\n        api.ondragend(position);\n    };\n\n    const api = {\n        updateHopperState: () => {\n            if (lastState !== currentState) {\n                scope.dataset.hopperState = currentState;\n                lastState = currentState;\n            }\n        },\n        onload: () => {},\n        ondragstart: () => {},\n        ondrag: () => {},\n        ondragend: () => {},\n        destroy: () => {\n            // destroy client\n            client.destroy();\n        },\n    };\n\n    return api;\n};\n\nlet listening = false;\nconst listeners$1 = [];\n\nconst handlePaste = e => {\n    // if is pasting in input or textarea and the target is outside of a filepond scope, ignore\n    const activeEl = document.activeElement;\n    if (activeEl && /textarea|input/i.test(activeEl.nodeName)) {\n        // test textarea or input is contained in filepond root\n        let inScope = false;\n        let element = activeEl;\n        while (element !== document.body) {\n            if (element.classList.contains('filepond--root')) {\n                inScope = true;\n                break;\n            }\n            element = element.parentNode;\n        }\n\n        if (!inScope) return;\n    }\n\n    requestDataTransferItems(e.clipboardData).then(files => {\n        // no files received\n        if (!files.length) {\n            return;\n        }\n\n        // notify listeners of received files\n        listeners$1.forEach(listener => listener(files));\n    });\n};\n\nconst listen = cb => {\n    // can't add twice\n    if (listeners$1.includes(cb)) {\n        return;\n    }\n\n    // add initial listener\n    listeners$1.push(cb);\n\n    // setup paste listener for entire page\n    if (listening) {\n        return;\n    }\n\n    listening = true;\n    document.addEventListener('paste', handlePaste);\n};\n\nconst unlisten = listener => {\n    arrayRemove(listeners$1, listeners$1.indexOf(listener));\n\n    // clean up\n    if (listeners$1.length === 0) {\n        document.removeEventListener('paste', handlePaste);\n        listening = false;\n    }\n};\n\nconst createPaster = () => {\n    const cb = files => {\n        api.onload(files);\n    };\n\n    const api = {\n        destroy: () => {\n            unlisten(cb);\n        },\n        onload: () => {},\n    };\n\n    listen(cb);\n\n    return api;\n};\n\n/**\n * Creates the file view\n */\nconst create$d = ({ root, props }) => {\n    root.element.id = `filepond--assistant-${props.id}`;\n    attr(root.element, 'role', 'status');\n    attr(root.element, 'aria-live', 'polite');\n    attr(root.element, 'aria-relevant', 'additions');\n};\n\nlet addFilesNotificationTimeout = null;\nlet notificationClearTimeout = null;\n\nconst filenames = [];\n\nconst assist = (root, message) => {\n    root.element.textContent = message;\n};\n\nconst clear$1 = root => {\n    root.element.textContent = '';\n};\n\nconst listModified = (root, filename, label) => {\n    const total = root.query('GET_TOTAL_ITEMS');\n    assist(\n        root,\n        `${label} ${filename}, ${total} ${\n            total === 1\n                ? root.query('GET_LABEL_FILE_COUNT_SINGULAR')\n                : root.query('GET_LABEL_FILE_COUNT_PLURAL')\n        }`\n    );\n\n    // clear group after set amount of time so the status is not read twice\n    clearTimeout(notificationClearTimeout);\n    notificationClearTimeout = setTimeout(() => {\n        clear$1(root);\n    }, 1500);\n};\n\nconst isUsingFilePond = root => root.element.parentNode.contains(document.activeElement);\n\nconst itemAdded = ({ root, action }) => {\n    if (!isUsingFilePond(root)) {\n        return;\n    }\n\n    root.element.textContent = '';\n    const item = root.query('GET_ITEM', action.id);\n    filenames.push(item.filename);\n\n    clearTimeout(addFilesNotificationTimeout);\n    addFilesNotificationTimeout = setTimeout(() => {\n        listModified(root, filenames.join(', '), root.query('GET_LABEL_FILE_ADDED'));\n        filenames.length = 0;\n    }, 750);\n};\n\nconst itemRemoved = ({ root, action }) => {\n    if (!isUsingFilePond(root)) {\n        return;\n    }\n\n    const item = action.item;\n    listModified(root, item.filename, root.query('GET_LABEL_FILE_REMOVED'));\n};\n\nconst itemProcessed = ({ root, action }) => {\n    // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n    const label = root.query('GET_LABEL_FILE_PROCESSING_COMPLETE');\n\n    assist(root, `${filename} ${label}`);\n};\n\nconst itemProcessedUndo = ({ root, action }) => {\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n    const label = root.query('GET_LABEL_FILE_PROCESSING_ABORTED');\n\n    assist(root, `${filename} ${label}`);\n};\n\nconst itemError = ({ root, action }) => {\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n\n    // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    assist(root, `${action.status.main} ${filename} ${action.status.sub}`);\n};\n\nconst assistant = createView({\n    create: create$d,\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: itemAdded,\n        DID_REMOVE_ITEM: itemRemoved,\n        DID_COMPLETE_ITEM_PROCESSING: itemProcessed,\n\n        DID_ABORT_ITEM_PROCESSING: itemProcessedUndo,\n        DID_REVERT_ITEM_PROCESSING: itemProcessedUndo,\n\n        DID_THROW_ITEM_REMOVE_ERROR: itemError,\n        DID_THROW_ITEM_LOAD_ERROR: itemError,\n        DID_THROW_ITEM_INVALID: itemError,\n        DID_THROW_ITEM_PROCESSING_ERROR: itemError,\n    }),\n    tag: 'span',\n    name: 'assistant',\n});\n\nconst toCamels = (string, separator = '-') =>\n    string.replace(new RegExp(`${separator}.`, 'g'), sub => sub.charAt(1).toUpperCase());\n\nconst debounce = (func, interval = 16, immidiateOnly = true) => {\n    let last = Date.now();\n    let timeout = null;\n\n    return (...args) => {\n        clearTimeout(timeout);\n\n        const dist = Date.now() - last;\n\n        const fn = () => {\n            last = Date.now();\n            func(...args);\n        };\n\n        if (dist < interval) {\n            // we need to delay by the difference between interval and dist\n            // for example: if distance is 10 ms and interval is 16 ms,\n            // we need to wait an additional 6ms before calling the function)\n            if (!immidiateOnly) {\n                timeout = setTimeout(fn, interval - dist);\n            }\n        } else {\n            // go!\n            fn();\n        }\n    };\n};\n\nconst MAX_FILES_LIMIT = 1000000;\n\nconst prevent = e => e.preventDefault();\n\nconst create$e = ({ root, props }) => {\n    // Add id\n    const id = root.query('GET_ID');\n    if (id) {\n        root.element.id = id;\n    }\n\n    // Add className\n    const className = root.query('GET_CLASS_NAME');\n    if (className) {\n        className\n            .split(' ')\n            .filter(name => name.length)\n            .forEach(name => {\n                root.element.classList.add(name);\n            });\n    }\n\n    // Field label\n    root.ref.label = root.appendChildView(\n        root.createChildView(dropLabel, {\n            ...props,\n            translateY: null,\n            caption: root.query('GET_LABEL_IDLE'),\n        })\n    );\n\n    // List of items\n    root.ref.list = root.appendChildView(root.createChildView(listScroller, { translateY: null }));\n\n    // Background panel\n    root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'panel-root' }));\n\n    // Assistant notifies assistive tech when content changes\n    root.ref.assistant = root.appendChildView(root.createChildView(assistant, { ...props }));\n\n    // Data\n    root.ref.data = root.appendChildView(root.createChildView(data, { ...props }));\n\n    // Measure (tests if fixed height was set)\n    // DOCTYPE needs to be set for this to work\n    root.ref.measure = createElement$1('div');\n    root.ref.measure.style.height = '100%';\n    root.element.appendChild(root.ref.measure);\n\n    // information on the root height or fixed height status\n    root.ref.bounds = null;\n\n    // apply initial style properties\n    root.query('GET_STYLES')\n        .filter(style => !isEmpty(style.value))\n        .map(({ name, value }) => {\n            root.element.dataset[name] = value;\n        });\n\n    // determine if width changed\n    root.ref.widthPrevious = null;\n    root.ref.widthUpdated = debounce(() => {\n        root.ref.updateHistory = [];\n        root.dispatch('DID_RESIZE_ROOT');\n    }, 250);\n\n    // history of updates\n    root.ref.previousAspectRatio = null;\n    root.ref.updateHistory = [];\n\n    // prevent scrolling and zooming on iOS (only if supports pointer events, for then we can enable reorder)\n    const canHover = window.matchMedia('(pointer: fine) and (hover: hover)').matches;\n    const hasPointerEvents = 'PointerEvent' in window;\n    if (root.query('GET_ALLOW_REORDER') && hasPointerEvents && !canHover) {\n        root.element.addEventListener('touchmove', prevent, { passive: false });\n        root.element.addEventListener('gesturestart', prevent);\n    }\n\n    // add credits\n    const credits = root.query('GET_CREDITS');\n    const hasCredits = credits.length === 2;\n    if (hasCredits) {\n        const frag = document.createElement('a');\n        frag.className = 'filepond--credits';\n        frag.setAttribute('aria-hidden', 'true');\n        frag.href = credits[0];\n        frag.tabindex = -1;\n        frag.target = '_blank';\n        frag.rel = 'noopener noreferrer';\n        frag.textContent = credits[1];\n        root.element.appendChild(frag);\n        root.ref.credits = frag;\n    }\n};\n\nconst write$9 = ({ root, props, actions }) => {\n    // route actions\n    route$5({ root, props, actions });\n\n    // apply style properties\n    actions\n        .filter(action => /^DID_SET_STYLE_/.test(action.type))\n        .filter(action => !isEmpty(action.data.value))\n        .map(({ type, data }) => {\n            const name = toCamels(type.substring(8).toLowerCase(), '_');\n            root.element.dataset[name] = data.value;\n            root.invalidateLayout();\n        });\n\n    if (root.rect.element.hidden) return;\n\n    if (root.rect.element.width !== root.ref.widthPrevious) {\n        root.ref.widthPrevious = root.rect.element.width;\n        root.ref.widthUpdated();\n    }\n\n    // get box bounds, we do this only once\n    let bounds = root.ref.bounds;\n    if (!bounds) {\n        bounds = root.ref.bounds = calculateRootBoundingBoxHeight(root);\n\n        // destroy measure element\n        root.element.removeChild(root.ref.measure);\n        root.ref.measure = null;\n    }\n\n    // get quick references to various high level parts of the upload tool\n    const { hopper, label, list, panel } = root.ref;\n\n    // sets correct state to hopper scope\n    if (hopper) {\n        hopper.updateHopperState();\n    }\n\n    // bool to indicate if we're full or not\n    const aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n    const isMultiItem = root.query('GET_ALLOW_MULTIPLE');\n    const totalItems = root.query('GET_TOTAL_ITEMS');\n    const maxItems = isMultiItem ? root.query('GET_MAX_FILES') || MAX_FILES_LIMIT : 1;\n    const atMaxCapacity = totalItems === maxItems;\n\n    // action used to add item\n    const addAction = actions.find(action => action.type === 'DID_ADD_ITEM');\n\n    // if reached max capacity and we've just reached it\n    if (atMaxCapacity && addAction) {\n        // get interaction type\n        const interactionMethod = addAction.data.interactionMethod;\n\n        // hide label\n        label.opacity = 0;\n\n        if (isMultiItem) {\n            label.translateY = -40;\n        } else {\n            if (interactionMethod === InteractionMethod.API) {\n                label.translateX = 40;\n            } else if (interactionMethod === InteractionMethod.BROWSE) {\n                label.translateY = 40;\n            } else {\n                label.translateY = 30;\n            }\n        }\n    } else if (!atMaxCapacity) {\n        label.opacity = 1;\n        label.translateX = 0;\n        label.translateY = 0;\n    }\n\n    const listItemMargin = calculateListItemMargin(root);\n\n    const listHeight = calculateListHeight(root);\n\n    const labelHeight = label.rect.element.height;\n    const currentLabelHeight = !isMultiItem || atMaxCapacity ? 0 : labelHeight;\n\n    const listMarginTop = atMaxCapacity ? list.rect.element.marginTop : 0;\n    const listMarginBottom = totalItems === 0 ? 0 : list.rect.element.marginBottom;\n\n    const visualHeight = currentLabelHeight + listMarginTop + listHeight.visual + listMarginBottom;\n    const boundsHeight = currentLabelHeight + listMarginTop + listHeight.bounds + listMarginBottom;\n\n    // link list to label bottom position\n    list.translateY =\n        Math.max(0, currentLabelHeight - list.rect.element.marginTop) - listItemMargin.top;\n\n    if (aspectRatio) {\n        // fixed aspect ratio\n\n        // calculate height based on width\n        const width = root.rect.element.width;\n        const height = width * aspectRatio;\n\n        // clear history if aspect ratio has changed\n        if (aspectRatio !== root.ref.previousAspectRatio) {\n            root.ref.previousAspectRatio = aspectRatio;\n            root.ref.updateHistory = [];\n        }\n\n        // remember this width\n        const history = root.ref.updateHistory;\n        history.push(width);\n\n        const MAX_BOUNCES = 2;\n        if (history.length > MAX_BOUNCES * 2) {\n            const l = history.length;\n            const bottom = l - 10;\n            let bounces = 0;\n            for (let i = l; i >= bottom; i--) {\n                if (history[i] === history[i - 2]) {\n                    bounces++;\n                }\n\n                if (bounces >= MAX_BOUNCES) {\n                    // dont adjust height\n                    return;\n                }\n            }\n        }\n\n        // fix height of panel so it adheres to aspect ratio\n        panel.scalable = false;\n        panel.height = height;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            height -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        if (listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = height;\n    } else if (bounds.fixedHeight) {\n        // fixed height\n\n        // fix height of panel\n        panel.scalable = false;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            bounds.fixedHeight -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        // set list height\n        if (listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // no need to set container bounds as these are handles by CSS fixed height\n    } else if (bounds.cappedHeight) {\n        // max-height\n\n        // not a fixed height panel\n        const isCappedHeight = visualHeight >= bounds.cappedHeight;\n        const panelHeight = Math.min(bounds.cappedHeight, visualHeight);\n        panel.scalable = true;\n        panel.height = isCappedHeight\n            ? panelHeight\n            : panelHeight - listItemMargin.top - listItemMargin.bottom;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            panelHeight -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        // set list height (if is overflowing)\n        if (visualHeight > bounds.cappedHeight && listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = Math.min(\n            bounds.cappedHeight,\n            boundsHeight - listItemMargin.top - listItemMargin.bottom\n        );\n    } else {\n        // flexible height\n\n        // not a fixed height panel\n        const itemMargin = totalItems > 0 ? listItemMargin.top + listItemMargin.bottom : 0;\n        panel.scalable = true;\n        panel.height = Math.max(labelHeight, visualHeight - itemMargin);\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = Math.max(labelHeight, boundsHeight - itemMargin);\n    }\n\n    // move credits to bottom\n    if (root.ref.credits && panel.heightCurrent)\n        root.ref.credits.style.transform = `translateY(${panel.heightCurrent}px)`;\n};\n\nconst calculateListItemMargin = root => {\n    const item = root.ref.list.childViews[0].childViews[0];\n    return item\n        ? {\n              top: item.rect.element.marginTop,\n              bottom: item.rect.element.marginBottom,\n          }\n        : {\n              top: 0,\n              bottom: 0,\n          };\n};\n\nconst calculateListHeight = root => {\n    let visual = 0;\n    let bounds = 0;\n\n    // get file list reference\n    const scrollList = root.ref.list;\n    const itemList = scrollList.childViews[0];\n    const visibleChildren = itemList.childViews.filter(child => child.rect.element.height);\n    const children = root\n        .query('GET_ACTIVE_ITEMS')\n        .map(item => visibleChildren.find(child => child.id === item.id))\n        .filter(item => item);\n\n    // no children, done!\n    if (children.length === 0) return { visual, bounds };\n\n    const horizontalSpace = itemList.rect.element.width;\n    const dragIndex = getItemIndexByPosition(itemList, children, scrollList.dragCoordinates);\n\n    const childRect = children[0].rect.element;\n\n    const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n\n    const itemWidth = childRect.width + itemHorizontalMargin;\n    const itemHeight = childRect.height + itemVerticalMargin;\n\n    const newItem = typeof dragIndex !== 'undefined' && dragIndex >= 0 ? 1 : 0;\n    const removedItem = children.find(child => child.markedForRemoval && child.opacity < 0.45)\n        ? -1\n        : 0;\n    const verticalItemCount = children.length + newItem + removedItem;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        children.forEach(item => {\n            const height = item.rect.element.height + itemVerticalMargin;\n            bounds += height;\n            visual += height * item.opacity;\n        });\n    }\n    // grid\n    else {\n        bounds = Math.ceil(verticalItemCount / itemsPerRow) * itemHeight;\n        visual = bounds;\n    }\n\n    return { visual, bounds };\n};\n\nconst calculateRootBoundingBoxHeight = root => {\n    const height = root.ref.measureHeight || null;\n    const cappedHeight = parseInt(root.style.maxHeight, 10) || null;\n    const fixedHeight = height === 0 ? null : height;\n\n    return {\n        cappedHeight,\n        fixedHeight,\n    };\n};\n\nconst exceedsMaxFiles = (root, items) => {\n    const allowReplace = root.query('GET_ALLOW_REPLACE');\n    const allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n    const totalItems = root.query('GET_TOTAL_ITEMS');\n    let maxItems = root.query('GET_MAX_FILES');\n\n    // total amount of items being dragged\n    const totalBrowseItems = items.length;\n\n    // if does not allow multiple items and dragging more than one item\n    if (!allowMultiple && totalBrowseItems > 1) {\n        root.dispatch('DID_THROW_MAX_FILES', {\n            source: items,\n            error: createResponse('warning', 0, 'Max files'),\n        });\n        return true;\n    }\n\n    // limit max items to one if not allowed to drop multiple items\n    maxItems = allowMultiple ? maxItems : 1;\n\n    if (!allowMultiple && allowReplace) {\n        // There is only one item, so there is room to replace or add an item\n        return false;\n    }\n\n    // no more room?\n    const hasMaxItems = isInt(maxItems);\n    if (hasMaxItems && totalItems + totalBrowseItems > maxItems) {\n        root.dispatch('DID_THROW_MAX_FILES', {\n            source: items,\n            error: createResponse('warning', 0, 'Max files'),\n        });\n        return true;\n    }\n\n    return false;\n};\n\nconst getDragIndex = (list, children, position) => {\n    const itemList = list.childViews[0];\n    return getItemIndexByPosition(itemList, children, {\n        left: position.scopeLeft - itemList.rect.element.left,\n        top:\n            position.scopeTop -\n            (list.rect.outer.top + list.rect.element.marginTop + list.rect.element.scrollTop),\n    });\n};\n\n/**\n * Enable or disable file drop functionality\n */\nconst toggleDrop = root => {\n    const isAllowed = root.query('GET_ALLOW_DROP');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.hopper) {\n        const hopper = createHopper(\n            root.element,\n            items => {\n                // allow quick validation of dropped items\n                const beforeDropFile = root.query('GET_BEFORE_DROP_FILE') || (() => true);\n\n                // all items should be validated by all filters as valid\n                const dropValidation = root.query('GET_DROP_VALIDATION');\n                return dropValidation\n                    ? items.every(\n                          item =>\n                              applyFilters('ALLOW_HOPPER_ITEM', item, {\n                                  query: root.query,\n                              }).every(result => result === true) && beforeDropFile(item)\n                      )\n                    : true;\n            },\n            {\n                filterItems: items => {\n                    const ignoredFiles = root.query('GET_IGNORED_FILES');\n                    return items.filter(item => {\n                        if (isFile(item)) {\n                            return !ignoredFiles.includes(item.name.toLowerCase());\n                        }\n                        return true;\n                    });\n                },\n                catchesDropsOnPage: root.query('GET_DROP_ON_PAGE'),\n                requiresDropOnElement: root.query('GET_DROP_ON_ELEMENT'),\n            }\n        );\n\n        hopper.onload = (items, position) => {\n            // get item children elements and sort based on list sort\n            const list = root.ref.list.childViews[0];\n            const visibleChildren = list.childViews.filter(child => child.rect.element.height);\n            const children = root\n                .query('GET_ACTIVE_ITEMS')\n                .map(item => visibleChildren.find(child => child.id === item.id))\n                .filter(item => item);\n\n            applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(queue => {\n                // these files don't fit so stop here\n                if (exceedsMaxFiles(root, queue)) return false;\n\n                // go\n                root.dispatch('ADD_ITEMS', {\n                    items: queue,\n                    index: getDragIndex(root.ref.list, children, position),\n                    interactionMethod: InteractionMethod.DROP,\n                });\n            });\n\n            root.dispatch('DID_DROP', { position });\n\n            root.dispatch('DID_END_DRAG', { position });\n        };\n\n        hopper.ondragstart = position => {\n            root.dispatch('DID_START_DRAG', { position });\n        };\n\n        hopper.ondrag = debounce(position => {\n            root.dispatch('DID_DRAG', { position });\n        });\n\n        hopper.ondragend = position => {\n            root.dispatch('DID_END_DRAG', { position });\n        };\n\n        root.ref.hopper = hopper;\n\n        root.ref.drip = root.appendChildView(root.createChildView(drip));\n    } else if (!enabled && root.ref.hopper) {\n        root.ref.hopper.destroy();\n        root.ref.hopper = null;\n        root.removeChildView(root.ref.drip);\n    }\n};\n\n/**\n * Enable or disable browse functionality\n */\nconst toggleBrowse = (root, props) => {\n    const isAllowed = root.query('GET_ALLOW_BROWSE');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.browser) {\n        root.ref.browser = root.appendChildView(\n            root.createChildView(browser, {\n                ...props,\n                onload: items => {\n                    applyFilterChain('ADD_ITEMS', items, {\n                        dispatch: root.dispatch,\n                    }).then(queue => {\n                        // these files don't fit so stop here\n                        if (exceedsMaxFiles(root, queue)) return false;\n\n                        // add items!\n                        root.dispatch('ADD_ITEMS', {\n                            items: queue,\n                            index: -1,\n                            interactionMethod: InteractionMethod.BROWSE,\n                        });\n                    });\n                },\n            }),\n            0\n        );\n    } else if (!enabled && root.ref.browser) {\n        root.removeChildView(root.ref.browser);\n        root.ref.browser = null;\n    }\n};\n\n/**\n * Enable or disable paste functionality\n */\nconst togglePaste = root => {\n    const isAllowed = root.query('GET_ALLOW_PASTE');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.paster) {\n        root.ref.paster = createPaster();\n        root.ref.paster.onload = items => {\n            applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(queue => {\n                // these files don't fit so stop here\n                if (exceedsMaxFiles(root, queue)) return false;\n\n                // add items!\n                root.dispatch('ADD_ITEMS', {\n                    items: queue,\n                    index: -1,\n                    interactionMethod: InteractionMethod.PASTE,\n                });\n            });\n        };\n    } else if (!enabled && root.ref.paster) {\n        root.ref.paster.destroy();\n        root.ref.paster = null;\n    }\n};\n\n/**\n * Route actions\n */\nconst route$5 = createRoute({\n    DID_SET_ALLOW_BROWSE: ({ root, props }) => {\n        toggleBrowse(root, props);\n    },\n    DID_SET_ALLOW_DROP: ({ root }) => {\n        toggleDrop(root);\n    },\n    DID_SET_ALLOW_PASTE: ({ root }) => {\n        togglePaste(root);\n    },\n    DID_SET_DISABLED: ({ root, props }) => {\n        toggleDrop(root);\n        togglePaste(root);\n        toggleBrowse(root, props);\n        const isDisabled = root.query('GET_DISABLED');\n        if (isDisabled) {\n            root.element.dataset.disabled = 'disabled';\n        } else {\n            // delete root.element.dataset.disabled; <= this does not work on iOS 10\n            root.element.removeAttribute('data-disabled');\n        }\n    },\n});\n\nconst root = createView({\n    name: 'root',\n    read: ({ root }) => {\n        if (root.ref.measure) {\n            root.ref.measureHeight = root.ref.measure.offsetHeight;\n        }\n    },\n    create: create$e,\n    write: write$9,\n    destroy: ({ root }) => {\n        if (root.ref.paster) {\n            root.ref.paster.destroy();\n        }\n        if (root.ref.hopper) {\n            root.ref.hopper.destroy();\n        }\n        root.element.removeEventListener('touchmove', prevent);\n        root.element.removeEventListener('gesturestart', prevent);\n    },\n    mixins: {\n        styles: ['height'],\n    },\n});\n\n// creates the app\nconst createApp = (initialOptions = {}) => {\n    // let element\n    let originalElement = null;\n\n    // get default options\n    const defaultOptions = getOptions();\n\n    // create the data store, this will contain all our app info\n    const store = createStore(\n        // initial state (should be serializable)\n        createInitialState(defaultOptions),\n\n        // queries\n        [queries, createOptionQueries(defaultOptions)],\n\n        // action handlers\n        [actions, createOptionActions(defaultOptions)]\n    );\n\n    // set initial options\n    store.dispatch('SET_OPTIONS', { options: initialOptions });\n\n    // kick thread if visibility changes\n    const visibilityHandler = () => {\n        if (document.hidden) return;\n        store.dispatch('KICK');\n    };\n    document.addEventListener('visibilitychange', visibilityHandler);\n\n    // re-render on window resize start and finish\n    let resizeDoneTimer = null;\n    let isResizing = false;\n    let isResizingHorizontally = false;\n    let initialWindowWidth = null;\n    let currentWindowWidth = null;\n    const resizeHandler = () => {\n        if (!isResizing) {\n            isResizing = true;\n        }\n        clearTimeout(resizeDoneTimer);\n        resizeDoneTimer = setTimeout(() => {\n            isResizing = false;\n            initialWindowWidth = null;\n            currentWindowWidth = null;\n            if (isResizingHorizontally) {\n                isResizingHorizontally = false;\n                store.dispatch('DID_STOP_RESIZE');\n            }\n        }, 500);\n    };\n    window.addEventListener('resize', resizeHandler);\n\n    // render initial view\n    const view = root(store, { id: getUniqueId() });\n\n    //\n    // PRIVATE API -------------------------------------------------------------------------------------\n    //\n    let isResting = false;\n    let isHidden = false;\n\n    const readWriteApi = {\n        // necessary for update loop\n\n        /**\n         * Reads from dom (never call manually)\n         * @private\n         */\n        _read: () => {\n            // test if we're resizing horizontally\n            // TODO: see if we can optimize this by measuring root rect\n            if (isResizing) {\n                currentWindowWidth = window.innerWidth;\n                if (!initialWindowWidth) {\n                    initialWindowWidth = currentWindowWidth;\n                }\n\n                if (!isResizingHorizontally && currentWindowWidth !== initialWindowWidth) {\n                    store.dispatch('DID_START_RESIZE');\n                    isResizingHorizontally = true;\n                }\n            }\n\n            if (isHidden && isResting) {\n                // test if is no longer hidden\n                isResting = view.element.offsetParent === null;\n            }\n\n            // if resting, no need to read as numbers will still all be correct\n            if (isResting) return;\n\n            // read view data\n            view._read();\n\n            // if is hidden we need to know so we exit rest mode when revealed\n            isHidden = view.rect.element.hidden;\n        },\n\n        /**\n         * Writes to dom (never call manually)\n         * @private\n         */\n        _write: ts => {\n            // get all actions from store\n            const actions = store\n                .processActionQueue()\n\n                // filter out set actions (these will automatically trigger DID_SET)\n                .filter(action => !/^SET_/.test(action.type));\n\n            // if was idling and no actions stop here\n            if (isResting && !actions.length) return;\n\n            // some actions might trigger events\n            routeActionsToEvents(actions);\n\n            // update the view\n            isResting = view._write(ts, actions, isResizingHorizontally);\n\n            // will clean up all archived items\n            removeReleasedItems(store.query('GET_ITEMS'));\n\n            // now idling\n            if (isResting) {\n                store.processDispatchQueue();\n            }\n        },\n    };\n\n    //\n    // EXPOSE EVENTS -------------------------------------------------------------------------------------\n    //\n    const createEvent = name => data => {\n        // create default event\n        const event = {\n            type: name,\n        };\n\n        // no data to add\n        if (!data) {\n            return event;\n        }\n\n        // copy relevant props\n        if (data.hasOwnProperty('error')) {\n            event.error = data.error ? { ...data.error } : null;\n        }\n\n        if (data.status) {\n            event.status = { ...data.status };\n        }\n\n        if (data.file) {\n            event.output = data.file;\n        }\n\n        // only source is available, else add item if possible\n        if (data.source) {\n            event.file = data.source;\n        } else if (data.item || data.id) {\n            const item = data.item ? data.item : store.query('GET_ITEM', data.id);\n            event.file = item ? createItemAPI(item) : null;\n        }\n\n        // map all items in a possible items array\n        if (data.items) {\n            event.items = data.items.map(createItemAPI);\n        }\n\n        // if this is a progress event add the progress amount\n        if (/progress/.test(name)) {\n            event.progress = data.progress;\n        }\n\n        // copy relevant props\n        if (data.hasOwnProperty('origin') && data.hasOwnProperty('target')) {\n            event.origin = data.origin;\n            event.target = data.target;\n        }\n\n        return event;\n    };\n\n    const eventRoutes = {\n        DID_DESTROY: createEvent('destroy'),\n\n        DID_INIT: createEvent('init'),\n\n        DID_THROW_MAX_FILES: createEvent('warning'),\n\n        DID_INIT_ITEM: createEvent('initfile'),\n        DID_START_ITEM_LOAD: createEvent('addfilestart'),\n        DID_UPDATE_ITEM_LOAD_PROGRESS: createEvent('addfileprogress'),\n        DID_LOAD_ITEM: createEvent('addfile'),\n\n        DID_THROW_ITEM_INVALID: [createEvent('error'), createEvent('addfile')],\n\n        DID_THROW_ITEM_LOAD_ERROR: [createEvent('error'), createEvent('addfile')],\n\n        DID_THROW_ITEM_REMOVE_ERROR: [createEvent('error'), createEvent('removefile')],\n\n        DID_PREPARE_OUTPUT: createEvent('preparefile'),\n\n        DID_START_ITEM_PROCESSING: createEvent('processfilestart'),\n        DID_UPDATE_ITEM_PROCESS_PROGRESS: createEvent('processfileprogress'),\n        DID_ABORT_ITEM_PROCESSING: createEvent('processfileabort'),\n        DID_COMPLETE_ITEM_PROCESSING: createEvent('processfile'),\n        DID_COMPLETE_ITEM_PROCESSING_ALL: createEvent('processfiles'),\n        DID_REVERT_ITEM_PROCESSING: createEvent('processfilerevert'),\n\n        DID_THROW_ITEM_PROCESSING_ERROR: [createEvent('error'), createEvent('processfile')],\n\n        DID_REMOVE_ITEM: createEvent('removefile'),\n\n        DID_UPDATE_ITEMS: createEvent('updatefiles'),\n\n        DID_ACTIVATE_ITEM: createEvent('activatefile'),\n\n        DID_REORDER_ITEMS: createEvent('reorderfiles'),\n    };\n\n    const exposeEvent = event => {\n        // create event object to be dispatched\n        const detail = { pond: exports, ...event };\n        delete detail.type;\n        view.element.dispatchEvent(\n            new CustomEvent(`FilePond:${event.type}`, {\n                // event info\n                detail,\n\n                // event behaviour\n                bubbles: true,\n                cancelable: true,\n                composed: true, // triggers listeners outside of shadow root\n            })\n        );\n\n        // event object to params used for `on()` event handlers and callbacks `oninit()`\n        const params = [];\n\n        // if is possible error event, make it the first param\n        if (event.hasOwnProperty('error')) {\n            params.push(event.error);\n        }\n\n        // file is always section\n        if (event.hasOwnProperty('file')) {\n            params.push(event.file);\n        }\n\n        // append other props\n        const filtered = ['type', 'error', 'file'];\n        Object.keys(event)\n            .filter(key => !filtered.includes(key))\n            .forEach(key => params.push(event[key]));\n\n        // on(type, () => { })\n        exports.fire(event.type, ...params);\n\n        // oninit = () => {}\n        const handler = store.query(`GET_ON${event.type.toUpperCase()}`);\n        if (handler) {\n            handler(...params);\n        }\n    };\n\n    const routeActionsToEvents = actions => {\n        if (!actions.length) return;\n        actions\n            .filter(action => eventRoutes[action.type])\n            .forEach(action => {\n                const routes = eventRoutes[action.type];\n                (Array.isArray(routes) ? routes : [routes]).forEach(route => {\n                    // this isn't fantastic, but because of the stacking of settimeouts plugins can handle the did_load before the did_init\n                    if (action.type === 'DID_INIT_ITEM') {\n                        exposeEvent(route(action.data));\n                    } else {\n                        setTimeout(() => {\n                            exposeEvent(route(action.data));\n                        }, 0);\n                    }\n                });\n            });\n    };\n\n    //\n    // PUBLIC API -------------------------------------------------------------------------------------\n    //\n    const setOptions = options => store.dispatch('SET_OPTIONS', { options });\n\n    const getFile = query => store.query('GET_ACTIVE_ITEM', query);\n\n    const prepareFile = query =>\n        new Promise((resolve, reject) => {\n            store.dispatch('REQUEST_ITEM_PREPARE', {\n                query,\n                success: item => {\n                    resolve(item);\n                },\n                failure: error => {\n                    reject(error);\n                },\n            });\n        });\n\n    const addFile = (source, options = {}) =>\n        new Promise((resolve, reject) => {\n            addFiles([{ source, options }], { index: options.index })\n                .then(items => resolve(items && items[0]))\n                .catch(reject);\n        });\n\n    const isFilePondFile = obj => obj.file && obj.id;\n\n    const removeFile = (query, options) => {\n        // if only passed options\n        if (typeof query === 'object' && !isFilePondFile(query) && !options) {\n            options = query;\n            query = undefined;\n        }\n\n        // request item removal\n        store.dispatch('REMOVE_ITEM', { ...options, query });\n\n        // see if item has been removed\n        return store.query('GET_ACTIVE_ITEM', query) === null;\n    };\n\n    const addFiles = (...args) =>\n        new Promise((resolve, reject) => {\n            const sources = [];\n            const options = {};\n\n            // user passed a sources array\n            if (isArray(args[0])) {\n                sources.push.apply(sources, args[0]);\n                Object.assign(options, args[1] || {});\n            } else {\n                // user passed sources as arguments, last one might be options object\n                const lastArgument = args[args.length - 1];\n                if (typeof lastArgument === 'object' && !(lastArgument instanceof Blob)) {\n                    Object.assign(options, args.pop());\n                }\n\n                // add rest to sources\n                sources.push(...args);\n            }\n\n            store.dispatch('ADD_ITEMS', {\n                items: sources,\n                index: options.index,\n                interactionMethod: InteractionMethod.API,\n                success: resolve,\n                failure: reject,\n            });\n        });\n\n    const getFiles = () => store.query('GET_ACTIVE_ITEMS');\n\n    const processFile = query =>\n        new Promise((resolve, reject) => {\n            store.dispatch('REQUEST_ITEM_PROCESSING', {\n                query,\n                success: item => {\n                    resolve(item);\n                },\n                failure: error => {\n                    reject(error);\n                },\n            });\n        });\n\n    const prepareFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n        const items = queries.length ? queries : getFiles();\n        return Promise.all(items.map(prepareFile));\n    };\n\n    const processFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n        if (!queries.length) {\n            const files = getFiles().filter(\n                item =>\n                    !(item.status === ItemStatus.IDLE && item.origin === FileOrigin.LOCAL) &&\n                    item.status !== ItemStatus.PROCESSING &&\n                    item.status !== ItemStatus.PROCESSING_COMPLETE &&\n                    item.status !== ItemStatus.PROCESSING_REVERT_ERROR\n            );\n            return Promise.all(files.map(processFile));\n        }\n        return Promise.all(queries.map(processFile));\n    };\n\n    const removeFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n\n        let options;\n        if (typeof queries[queries.length - 1] === 'object') {\n            options = queries.pop();\n        } else if (Array.isArray(args[0])) {\n            options = args[1];\n        }\n\n        const files = getFiles();\n\n        if (!queries.length) return Promise.all(files.map(file => removeFile(file, options)));\n\n        // when removing by index the indexes shift after each file removal so we need to convert indexes to ids\n        const mappedQueries = queries\n            .map(query => (isNumber(query) ? (files[query] ? files[query].id : null) : query))\n            .filter(query => query);\n\n        return mappedQueries.map(q => removeFile(q, options));\n    };\n\n    const exports = {\n        // supports events\n        ...on(),\n\n        // inject private api methods\n        ...readWriteApi,\n\n        // inject all getters and setters\n        ...createOptionAPI(store, defaultOptions),\n\n        /**\n         * Override options defined in options object\n         * @param options\n         */\n        setOptions,\n\n        /**\n         * Load the given file\n         * @param source - the source of the file (either a File, base64 data uri or url)\n         * @param options - object, { index: 0 }\n         */\n        addFile,\n\n        /**\n         * Load the given files\n         * @param sources - the sources of the files to load\n         * @param options - object, { index: 0 }\n         */\n        addFiles,\n\n        /**\n         * Returns the file objects matching the given query\n         * @param query { string, number, null }\n         */\n        getFile,\n\n        /**\n         * Upload file with given name\n         * @param query { string, number, null  }\n         */\n        processFile,\n\n        /**\n         * Request prepare output for file with given name\n         * @param query { string, number, null  }\n         */\n        prepareFile,\n\n        /**\n         * Removes a file by its name\n         * @param query { string, number, null  }\n         */\n        removeFile,\n\n        /**\n         * Moves a file to a new location in the files list\n         */\n        moveFile: (query, index) => store.dispatch('MOVE_ITEM', { query, index }),\n\n        /**\n         * Returns all files (wrapped in public api)\n         */\n        getFiles,\n\n        /**\n         * Starts uploading all files\n         */\n        processFiles,\n\n        /**\n         * Clears all files from the files list\n         */\n        removeFiles,\n\n        /**\n         * Starts preparing output of all files\n         */\n        prepareFiles,\n\n        /**\n         * Sort list of files\n         */\n        sort: compare => store.dispatch('SORT', { compare }),\n\n        /**\n         * Browse the file system for a file\n         */\n        browse: () => {\n            // needs to be trigger directly as user action needs to be traceable (is not traceable in requestAnimationFrame)\n            var input = view.element.querySelector('input[type=file]');\n            if (input) {\n                input.click();\n            }\n        },\n\n        /**\n         * Destroys the app\n         */\n        destroy: () => {\n            // request destruction\n            exports.fire('destroy', view.element);\n\n            // stop active processes (file uploads, fetches, stuff like that)\n            // loop over items and depending on states call abort for ongoing processes\n            store.dispatch('ABORT_ALL');\n\n            // destroy view\n            view._destroy();\n\n            // stop listening to resize\n            window.removeEventListener('resize', resizeHandler);\n\n            // stop listening to the visiblitychange event\n            document.removeEventListener('visibilitychange', visibilityHandler);\n\n            // dispatch destroy\n            store.dispatch('DID_DESTROY');\n        },\n\n        /**\n         * Inserts the plugin before the target element\n         */\n        insertBefore: element => insertBefore(view.element, element),\n\n        /**\n         * Inserts the plugin after the target element\n         */\n        insertAfter: element => insertAfter(view.element, element),\n\n        /**\n         * Appends the plugin to the target element\n         */\n        appendTo: element => element.appendChild(view.element),\n\n        /**\n         * Replaces an element with the app\n         */\n        replaceElement: element => {\n            // insert the app before the element\n            insertBefore(view.element, element);\n\n            // remove the original element\n            element.parentNode.removeChild(element);\n\n            // remember original element\n            originalElement = element;\n        },\n\n        /**\n         * Restores the original element\n         */\n        restoreElement: () => {\n            if (!originalElement) {\n                return; // no element to restore\n            }\n\n            // restore original element\n            insertAfter(originalElement, view.element);\n\n            // remove our element\n            view.element.parentNode.removeChild(view.element);\n\n            // remove reference\n            originalElement = null;\n        },\n\n        /**\n         * Returns true if the app root is attached to given element\n         * @param element\n         */\n        isAttachedTo: element => view.element === element || originalElement === element,\n\n        /**\n         * Returns the root element\n         */\n        element: {\n            get: () => view.element,\n        },\n\n        /**\n         * Returns the current pond status\n         */\n        status: {\n            get: () => store.query('GET_STATUS'),\n        },\n    };\n\n    // Done!\n    store.dispatch('DID_INIT');\n\n    // create actual api object\n    return createObject(exports);\n};\n\nconst createAppObject = (customOptions = {}) => {\n    // default options\n    const defaultOptions = {};\n    forin(getOptions(), (key, value) => {\n        defaultOptions[key] = value[0];\n    });\n\n    // set app options\n    const app = createApp({\n        // default options\n        ...defaultOptions,\n\n        // custom options\n        ...customOptions,\n    });\n\n    // return the plugin instance\n    return app;\n};\n\nconst lowerCaseFirstLetter = string => string.charAt(0).toLowerCase() + string.slice(1);\n\nconst attributeNameToPropertyName = attributeName => toCamels(attributeName.replace(/^data-/, ''));\n\nconst mapObject = (object, propertyMap) => {\n    // remove unwanted\n    forin(propertyMap, (selector, mapping) => {\n        forin(object, (property, value) => {\n            // create regexp shortcut\n            const selectorRegExp = new RegExp(selector);\n\n            // tests if\n            const matches = selectorRegExp.test(property);\n\n            // no match, skip\n            if (!matches) {\n                return;\n            }\n\n            // if there's a mapping, the original property is always removed\n            delete object[property];\n\n            // should only remove, we done!\n            if (mapping === false) {\n                return;\n            }\n\n            // move value to new property\n            if (isString(mapping)) {\n                object[mapping] = value;\n                return;\n            }\n\n            // move to group\n            const group = mapping.group;\n            if (isObject(mapping) && !object[group]) {\n                object[group] = {};\n            }\n\n            object[group][lowerCaseFirstLetter(property.replace(selectorRegExp, ''))] = value;\n        });\n\n        // do submapping\n        if (mapping.mapping) {\n            mapObject(object[mapping.group], mapping.mapping);\n        }\n    });\n};\n\nconst getAttributesAsObject = (node, attributeMapping = {}) => {\n    // turn attributes into object\n    const attributes = [];\n    forin(node.attributes, index => {\n        attributes.push(node.attributes[index]);\n    });\n\n    const output = attributes\n        .filter(attribute => attribute.name)\n        .reduce((obj, attribute) => {\n            const value = attr(node, attribute.name);\n\n            obj[attributeNameToPropertyName(attribute.name)] =\n                value === attribute.name ? true : value;\n            return obj;\n        }, {});\n\n    // do mapping of object properties\n    mapObject(output, attributeMapping);\n\n    return output;\n};\n\nconst createAppAtElement = (element, options = {}) => {\n    // how attributes of the input element are mapped to the options for the plugin\n    const attributeMapping = {\n        // translate to other name\n        '^class$': 'className',\n        '^multiple$': 'allowMultiple',\n        '^capture$': 'captureMethod',\n        '^webkitdirectory$': 'allowDirectoriesOnly',\n\n        // group under single property\n        '^server': {\n            group: 'server',\n            mapping: {\n                '^process': {\n                    group: 'process',\n                },\n                '^revert': {\n                    group: 'revert',\n                },\n                '^fetch': {\n                    group: 'fetch',\n                },\n                '^restore': {\n                    group: 'restore',\n                },\n                '^load': {\n                    group: 'load',\n                },\n            },\n        },\n\n        // don't include in object\n        '^type$': false,\n        '^files$': false,\n    };\n\n    // add additional option translators\n    applyFilters('SET_ATTRIBUTE_TO_OPTION_MAP', attributeMapping);\n\n    // create final options object by setting options object and then overriding options supplied on element\n    const mergedOptions = {\n        ...options,\n    };\n\n    const attributeOptions = getAttributesAsObject(\n        element.nodeName === 'FIELDSET' ? element.querySelector('input[type=file]') : element,\n        attributeMapping\n    );\n\n    // merge with options object\n    Object.keys(attributeOptions).forEach(key => {\n        if (isObject(attributeOptions[key])) {\n            if (!isObject(mergedOptions[key])) {\n                mergedOptions[key] = {};\n            }\n            Object.assign(mergedOptions[key], attributeOptions[key]);\n        } else {\n            mergedOptions[key] = attributeOptions[key];\n        }\n    });\n\n    // if parent is a fieldset, get files from parent by selecting all input fields that are not file upload fields\n    // these will then be automatically set to the initial files\n    mergedOptions.files = (options.files || []).concat(\n        Array.from(element.querySelectorAll('input:not([type=file])')).map(input => ({\n            source: input.value,\n            options: {\n                type: input.dataset.type,\n            },\n        }))\n    );\n\n    // build plugin\n    const app = createAppObject(mergedOptions);\n\n    // add already selected files\n    if (element.files) {\n        Array.from(element.files).forEach(file => {\n            app.addFile(file);\n        });\n    }\n\n    // replace the target element\n    app.replaceElement(element);\n\n    // expose\n    return app;\n};\n\n// if an element is passed, we create the instance at that element, if not, we just create an up object\nconst createApp$1 = (...args) =>\n    isNode(args[0]) ? createAppAtElement(...args) : createAppObject(...args);\n\nconst PRIVATE_METHODS = ['fire', '_read', '_write'];\n\nconst createAppAPI = app => {\n    const api = {};\n\n    copyObjectPropertiesToObject(app, api, PRIVATE_METHODS);\n\n    return api;\n};\n\n/**\n * Replaces placeholders in given string with replacements\n * @param string - \"Foo {bar}\"\"\n * @param replacements - { \"bar\": 10 }\n */\nconst replaceInString = (string, replacements) =>\n    string.replace(/(?:{([a-zA-Z]+)})/g, (match, group) => replacements[group]);\n\nconst createWorker = fn => {\n    const workerBlob = new Blob(['(', fn.toString(), ')()'], {\n        type: 'application/javascript',\n    });\n    const workerURL = URL.createObjectURL(workerBlob);\n    const worker = new Worker(workerURL);\n\n    return {\n        transfer: (message, cb) => {},\n        post: (message, cb, transferList) => {\n            const id = getUniqueId();\n\n            worker.onmessage = e => {\n                if (e.data.id === id) {\n                    cb(e.data.message);\n                }\n            };\n\n            worker.postMessage(\n                {\n                    id,\n                    message,\n                },\n                transferList\n            );\n        },\n        terminate: () => {\n            worker.terminate();\n            URL.revokeObjectURL(workerURL);\n        },\n    };\n};\n\nconst loadImage = url =>\n    new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n            resolve(img);\n        };\n        img.onerror = e => {\n            reject(e);\n        };\n        img.src = url;\n    });\n\nconst renameFile = (file, name) => {\n    const renamedFile = file.slice(0, file.size, file.type);\n    renamedFile.lastModifiedDate = file.lastModifiedDate;\n    renamedFile.name = name;\n    return renamedFile;\n};\n\nconst copyFile = file => renameFile(file, file.name);\n\n// already registered plugins (can't register twice)\nconst registeredPlugins = [];\n\n// pass utils to plugin\nconst createAppPlugin = plugin => {\n    // already registered\n    if (registeredPlugins.includes(plugin)) {\n        return;\n    }\n\n    // remember this plugin\n    registeredPlugins.push(plugin);\n\n    // setup!\n    const pluginOutline = plugin({\n        addFilter,\n        utils: {\n            Type,\n            forin,\n            isString,\n            isFile,\n            toNaturalFileSize,\n            replaceInString,\n            getExtensionFromFilename,\n            getFilenameWithoutExtension,\n            guesstimateMimeType,\n            getFileFromBlob,\n            getFilenameFromURL,\n            createRoute,\n            createWorker,\n            createView,\n            createItemAPI,\n            loadImage,\n            copyFile,\n            renameFile,\n            createBlob,\n            applyFilterChain,\n            text,\n            getNumericAspectRatioFromString,\n        },\n        views: {\n            fileActionButton,\n        },\n    });\n\n    // add plugin options to default options\n    extendDefaultOptions(pluginOutline.options);\n};\n\n// feature detection used by supported() method\nconst isOperaMini = () => Object.prototype.toString.call(window.operamini) === '[object OperaMini]';\nconst hasPromises = () => 'Promise' in window;\nconst hasBlobSlice = () => 'slice' in Blob.prototype;\nconst hasCreateObjectURL = () => 'URL' in window && 'createObjectURL' in window.URL;\nconst hasVisibility = () => 'visibilityState' in document;\nconst hasTiming = () => 'performance' in window; // iOS 8.x\nconst hasCSSSupports = () => 'supports' in (window.CSS || {}); // use to detect Safari 9+\nconst isIE11 = () => /MSIE|Trident/.test(window.navigator.userAgent);\n\nconst supported = (() => {\n    // Runs immediately and then remembers result for subsequent calls\n    const isSupported =\n        // Has to be a browser\n        isBrowser() &&\n        // Can't run on Opera Mini due to lack of everything\n        !isOperaMini() &&\n        // Require these APIs to feature detect a modern browser\n        hasVisibility() &&\n        hasPromises() &&\n        hasBlobSlice() &&\n        hasCreateObjectURL() &&\n        hasTiming() &&\n        // doesn't need CSSSupports but is a good way to detect Safari 9+ (we do want to support IE11 though)\n        (hasCSSSupports() || isIE11());\n\n    return () => isSupported;\n})();\n\n/**\n * Plugin internal state (over all instances)\n */\nconst state = {\n    // active app instances, used to redraw the apps and to find the later\n    apps: [],\n};\n\n// plugin name\nconst name = 'filepond';\n\n/**\n * Public Plugin methods\n */\nconst fn = () => {};\nlet Status$1 = {};\nlet FileStatus = {};\nlet FileOrigin$1 = {};\nlet OptionTypes = {};\nlet create$f = fn;\nlet destroy = fn;\nlet parse = fn;\nlet find = fn;\nlet registerPlugin = fn;\nlet getOptions$1 = fn;\nlet setOptions$1 = fn;\n\n// if not supported, no API\nif (supported()) {\n    // start painter and fire load event\n    createPainter(\n        () => {\n            state.apps.forEach(app => app._read());\n        },\n        ts => {\n            state.apps.forEach(app => app._write(ts));\n        }\n    );\n\n    // fire loaded event so we know when FilePond is available\n    const dispatch = () => {\n        // let others know we have area ready\n        document.dispatchEvent(\n            new CustomEvent('FilePond:loaded', {\n                detail: {\n                    supported,\n                    create: create$f,\n                    destroy,\n                    parse,\n                    find,\n                    registerPlugin,\n                    setOptions: setOptions$1,\n                },\n            })\n        );\n\n        // clean up event\n        document.removeEventListener('DOMContentLoaded', dispatch);\n    };\n\n    if (document.readyState !== 'loading') {\n        // move to back of execution queue, FilePond should have been exported by then\n        setTimeout(() => dispatch(), 0);\n    } else {\n        document.addEventListener('DOMContentLoaded', dispatch);\n    }\n\n    // updates the OptionTypes object based on the current options\n    const updateOptionTypes = () =>\n        forin(getOptions(), (key, value) => {\n            OptionTypes[key] = value[1];\n        });\n\n    Status$1 = { ...Status };\n    FileOrigin$1 = { ...FileOrigin };\n    FileStatus = { ...ItemStatus };\n\n    OptionTypes = {};\n    updateOptionTypes();\n\n    // create method, creates apps and adds them to the app array\n    create$f = (...args) => {\n        const app = createApp$1(...args);\n        app.on('destroy', destroy);\n        state.apps.push(app);\n        return createAppAPI(app);\n    };\n\n    // destroys apps and removes them from the app array\n    destroy = hook => {\n        // returns true if the app was destroyed successfully\n        const indexToRemove = state.apps.findIndex(app => app.isAttachedTo(hook));\n        if (indexToRemove >= 0) {\n            // remove from apps\n            const app = state.apps.splice(indexToRemove, 1)[0];\n\n            // restore original dom element\n            app.restoreElement();\n\n            return true;\n        }\n\n        return false;\n    };\n\n    // parses the given context for plugins (does not include the context element itself)\n    parse = context => {\n        // get all possible hooks\n        const matchedHooks = Array.from(context.querySelectorAll(`.${name}`));\n\n        // filter out already active hooks\n        const newHooks = matchedHooks.filter(\n            newHook => !state.apps.find(app => app.isAttachedTo(newHook))\n        );\n\n        // create new instance for each hook\n        return newHooks.map(hook => create$f(hook));\n    };\n\n    // returns an app based on the given element hook\n    find = hook => {\n        const app = state.apps.find(app => app.isAttachedTo(hook));\n        if (!app) {\n            return null;\n        }\n        return createAppAPI(app);\n    };\n\n    // adds a plugin extension\n    registerPlugin = (...plugins) => {\n        // register plugins\n        plugins.forEach(createAppPlugin);\n\n        // update OptionTypes, each plugin might have extended the default options\n        updateOptionTypes();\n    };\n\n    getOptions$1 = () => {\n        const opts = {};\n        forin(getOptions(), (key, value) => {\n            opts[key] = value[0];\n        });\n        return opts;\n    };\n\n    setOptions$1 = opts => {\n        if (isObject(opts)) {\n            // update existing plugins\n            state.apps.forEach(app => {\n                app.setOptions(opts);\n            });\n\n            // override defaults\n            setOptions(opts);\n        }\n\n        // return new options\n        return getOptions$1();\n    };\n}\n\nexport {\n    FileOrigin$1 as FileOrigin,\n    FileStatus,\n    OptionTypes,\n    Status$1 as Status,\n    create$f as create,\n    destroy,\n    find,\n    getOptions$1 as getOptions,\n    parse,\n    registerPlugin,\n    setOptions$1 as setOptions,\n    supported,\n};\n","/*!\n * FilePondPluginFileValidateType 1.2.9\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst plugin = ({ addFilter, utils }) => {\n    // get quick reference to Type utils\n    const {\n        Type,\n        isString,\n        replaceInString,\n        guesstimateMimeType,\n        getExtensionFromFilename,\n        getFilenameFromURL,\n    } = utils;\n\n    const mimeTypeMatchesWildCard = (mimeType, wildcard) => {\n        const mimeTypeGroup = (/^[^/]+/.exec(mimeType) || []).pop(); // image/png -> image\n        const wildcardGroup = wildcard.slice(0, -2); // image/* -> image\n        return mimeTypeGroup === wildcardGroup;\n    };\n\n    const isValidMimeType = (acceptedTypes, userInputType) =>\n        acceptedTypes.some(acceptedType => {\n            // accepted is wildcard mime type\n            if (/\\*$/.test(acceptedType)) {\n                return mimeTypeMatchesWildCard(userInputType, acceptedType);\n            }\n\n            // is normal mime type\n            return acceptedType === userInputType;\n        });\n\n    const getItemType = item => {\n        // if the item is a url we guess the mime type by the extension\n        let type = '';\n        if (isString(item)) {\n            const filename = getFilenameFromURL(item);\n            const extension = getExtensionFromFilename(filename);\n            if (extension) {\n                type = guesstimateMimeType(extension);\n            }\n        } else {\n            type = item.type;\n        }\n\n        return type;\n    };\n\n    const validateFile = (item, acceptedFileTypes, typeDetector) => {\n        // no types defined, everything is allowed \\o/\n        if (acceptedFileTypes.length === 0) {\n            return true;\n        }\n\n        // gets the item type\n        const type = getItemType(item);\n\n        // no type detector, test now\n        if (!typeDetector) {\n            return isValidMimeType(acceptedFileTypes, type);\n        }\n\n        // use type detector\n        return new Promise((resolve, reject) => {\n            typeDetector(item, type)\n                .then(detectedType => {\n                    if (isValidMimeType(acceptedFileTypes, detectedType)) {\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                })\n                .catch(reject);\n        });\n    };\n\n    const applyMimeTypeMap = map => acceptedFileType =>\n        map[acceptedFileType] === null ? false : map[acceptedFileType] || acceptedFileType;\n\n    // setup attribute mapping for accept\n    addFilter('SET_ATTRIBUTE_TO_OPTION_MAP', map =>\n        Object.assign(map, {\n            accept: 'acceptedFileTypes',\n        })\n    );\n\n    // filtering if an item is allowed in hopper\n    addFilter('ALLOW_HOPPER_ITEM', (file, { query }) => {\n        // if we are not doing file type validation exit\n        if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n            return true;\n        }\n\n        // we validate the file against the accepted file types\n        return validateFile(file, query('GET_ACCEPTED_FILE_TYPES'));\n    });\n\n    // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n    addFilter(\n        'LOAD_FILE',\n        (file, { query }) =>\n            new Promise((resolve, reject) => {\n                if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n                    resolve(file);\n                    return;\n                }\n\n                const acceptedFileTypes = query('GET_ACCEPTED_FILE_TYPES');\n\n                // custom type detector method\n                const typeDetector = query('GET_FILE_VALIDATE_TYPE_DETECT_TYPE');\n\n                // if invalid, exit here\n                const validationResult = validateFile(file, acceptedFileTypes, typeDetector);\n\n                const handleRejection = () => {\n                    const acceptedFileTypesMapped = acceptedFileTypes\n                        .map(\n                            applyMimeTypeMap(\n                                query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES_MAP')\n                            )\n                        )\n                        .filter(label => label !== false);\n\n                    const acceptedFileTypesMappedUnique = acceptedFileTypesMapped.filter(\n                        (item, index) => acceptedFileTypesMapped.indexOf(item) === index\n                    );\n\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_FILE_TYPE_NOT_ALLOWED'),\n                            sub: replaceInString(\n                                query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES'),\n                                {\n                                    allTypes: acceptedFileTypesMappedUnique.join(', '),\n                                    allButLastType: acceptedFileTypesMappedUnique\n                                        .slice(0, -1)\n                                        .join(', '),\n                                    lastType:\n                                        acceptedFileTypesMappedUnique[\n                                            acceptedFileTypesMappedUnique.length - 1\n                                        ],\n                                }\n                            ),\n                        },\n                    });\n                };\n\n                // has returned new filename immidiately\n                if (typeof validationResult === 'boolean') {\n                    if (!validationResult) {\n                        return handleRejection();\n                    }\n                    return resolve(file);\n                }\n\n                // is promise\n                validationResult\n                    .then(() => {\n                        resolve(file);\n                    })\n                    .catch(handleRejection);\n            })\n    );\n\n    // expose plugin\n    return {\n        // default options\n        options: {\n            // Enable or disable file type validation\n            allowFileTypeValidation: [true, Type.BOOLEAN],\n\n            // What file types to accept\n            acceptedFileTypes: [[], Type.ARRAY],\n            // - must be comma separated\n            // - mime types: image/png, image/jpeg, image/gif\n            // - extensions: .png, .jpg, .jpeg ( not enabled yet )\n            // - wildcards: image/*\n\n            // label to show when a type is not allowed\n            labelFileTypeNotAllowed: ['File is of invalid type', Type.STRING],\n\n            // nicer label\n            fileValidateTypeLabelExpectedTypes: [\n                'Expects {allButLastType} or {lastType}',\n                Type.STRING,\n            ],\n\n            // map mime types to extensions\n            fileValidateTypeLabelExpectedTypesMap: [{}, Type.OBJECT],\n\n            // Custom function to detect type of file\n            fileValidateTypeDetectType: [null, Type.FUNCTION],\n        },\n    };\n};\n\n// fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\nconst isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nif (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', { detail: plugin }));\n}\n\nexport default plugin;\n","/*!\n * FilePondPluginFileValidateSize 2.2.8\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst plugin = ({ addFilter, utils }) => {\n    // get quick reference to Type utils\n    const { Type, replaceInString, toNaturalFileSize } = utils;\n\n    // filtering if an item is allowed in hopper\n    addFilter('ALLOW_HOPPER_ITEM', (file, { query }) => {\n        if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n            return true;\n        }\n\n        const sizeMax = query('GET_MAX_FILE_SIZE');\n        if (sizeMax !== null && file.size > sizeMax) {\n            return false;\n        }\n\n        const sizeMin = query('GET_MIN_FILE_SIZE');\n        if (sizeMin !== null && file.size < sizeMin) {\n            return false;\n        }\n\n        return true;\n    });\n\n    // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n    addFilter(\n        'LOAD_FILE',\n        (file, { query }) =>\n            new Promise((resolve, reject) => {\n                // if not allowed, all fine, exit\n                if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n                    return resolve(file);\n                }\n\n                // check if file should be filtered\n                const fileFilter = query('GET_FILE_VALIDATE_SIZE_FILTER');\n                if (fileFilter && !fileFilter(file)) {\n                    return resolve(file);\n                }\n\n                // reject or resolve based on file size\n                const sizeMax = query('GET_MAX_FILE_SIZE');\n                if (sizeMax !== null && file.size > sizeMax) {\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_MAX_FILE_SIZE_EXCEEDED'),\n                            sub: replaceInString(query('GET_LABEL_MAX_FILE_SIZE'), {\n                                filesize: toNaturalFileSize(\n                                    sizeMax,\n                                    '.',\n                                    query('GET_FILE_SIZE_BASE'),\n                                    query('GET_FILE_SIZE_LABELS', query)\n                                ),\n                            }),\n                        },\n                    });\n                    return;\n                }\n\n                // reject or resolve based on file size\n                const sizeMin = query('GET_MIN_FILE_SIZE');\n                if (sizeMin !== null && file.size < sizeMin) {\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_MIN_FILE_SIZE_EXCEEDED'),\n                            sub: replaceInString(query('GET_LABEL_MIN_FILE_SIZE'), {\n                                filesize: toNaturalFileSize(\n                                    sizeMin,\n                                    '.',\n                                    query('GET_FILE_SIZE_BASE'),\n                                    query('GET_FILE_SIZE_LABELS', query)\n                                ),\n                            }),\n                        },\n                    });\n                    return;\n                }\n\n                // returns the current option value\n                const totalSizeMax = query('GET_MAX_TOTAL_FILE_SIZE');\n                if (totalSizeMax !== null) {\n                    // get the current total file size\n                    const currentTotalSize = query('GET_ACTIVE_ITEMS').reduce((total, item) => {\n                        return total + item.fileSize;\n                    }, 0);\n\n                    // get the size of the new file\n                    if (currentTotalSize > totalSizeMax) {\n                        reject({\n                            status: {\n                                main: query('GET_LABEL_MAX_TOTAL_FILE_SIZE_EXCEEDED'),\n                                sub: replaceInString(query('GET_LABEL_MAX_TOTAL_FILE_SIZE'), {\n                                    filesize: toNaturalFileSize(\n                                        totalSizeMax,\n                                        '.',\n                                        query('GET_FILE_SIZE_BASE'),\n                                        query('GET_FILE_SIZE_LABELS', query)\n                                    ),\n                                }),\n                            },\n                        });\n                        return;\n                    }\n                }\n\n                // file is fine, let's pass it back\n                resolve(file);\n            })\n    );\n\n    return {\n        options: {\n            // Enable or disable file type validation\n            allowFileSizeValidation: [true, Type.BOOLEAN],\n\n            // Max individual file size in bytes\n            maxFileSize: [null, Type.INT],\n\n            // Min individual file size in bytes\n            minFileSize: [null, Type.INT],\n\n            // Max total file size in bytes\n            maxTotalFileSize: [null, Type.INT],\n\n            // Filter the files that need to be validated for size\n            fileValidateSizeFilter: [null, Type.FUNCTION],\n\n            // error labels\n            labelMinFileSizeExceeded: ['File is too small', Type.STRING],\n            labelMinFileSize: ['Minimum file size is {filesize}', Type.STRING],\n\n            labelMaxFileSizeExceeded: ['File is too large', Type.STRING],\n            labelMaxFileSize: ['Maximum file size is {filesize}', Type.STRING],\n\n            labelMaxTotalFileSizeExceeded: ['Maximum total size exceeded', Type.STRING],\n            labelMaxTotalFileSize: ['Maximum total file size is {filesize}', Type.STRING],\n        },\n    };\n};\n\n// fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\nconst isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nif (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', { detail: plugin }));\n}\n\nexport default plugin;\n","import * as FilePond from \"filepond\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"../styles/fileupload.css\";\n\nimport { AsyncForm } from \"./async_form.js\";\n\nexport class FileUpload {\n\tconstructor(el) {\n\t\tif (el.dataset.refFileUpload) {\n\t\t\treturn FileUpload.refs[el.dataset.refFileUpload];\n\t\t}\n\n\t\tthis.ref = Math.random();\n\t\tFileUpload.refs[this.ref] = this;\n\t\tel.dataset.refFileUpload = this.ref;\n\n\t\tthis.inputs = el.querySelectorAll('input[type=\"file\"]');\n\n\t\tthis.fileponds = {};\n\t\tthis.headers = {\n\t\t\tAuthorization: \"pFdRC99ihTG!C%BQB6EJKjc!n%\",\n\t\t};\n\n\t\tdocument.addEventListener(\"FilePond:loaded\", () => this.onload());\n\t\tconst asyncForm = new AsyncForm(el.closest(\"[c-async-form]\"));\n\t\tasyncForm.onBeforeSubmit = () => this.beforeSubmit();\n\t\tasyncForm.onPayload = (payload) => this.onPayload(payload);\n\t\tasyncForm.onInput = async (input, value) => await this.inputHandler(input, value);\n\t}\n\n\tonload() {\n\t\tFilePond.registerPlugin(FilePondPluginFileValidateType);\n\t\tFilePond.registerPlugin(FilePondPluginFileValidateSize);\n\n\t\tconst options = {\n\t\t\tserver: {\n\t\t\t\turl: \"https://formupload.agentur-chapeau.de/\",\n\t\t\t\tprocess: {\n\t\t\t\t\turl: \"process\",\n\t\t\t\t\theaders: this.headers,\n\t\t\t\t},\n\t\t\t\trevert: {\n\t\t\t\t\turl: \"revert\",\n\t\t\t\t\theaders: this.headers,\n\t\t\t\t},\n\t\t\t\trestore: null,\n\t\t\t\tload: null,\n\t\t\t\tfetch: null,\n\t\t\t},\n\t\t\tcredits: false,\n\t\t\tlabelIdle: `\n\t\t\t<div>\n\t\t\t\t<span>Dateien hierher ziehen oder <span class=\"filepond--label-action\">auswählen</span></span>\n\t\t\t</div>\n\t\t\t`,\n\t\t\tlabelInvalidField: \"Feld enthält ungültige Dateien\",\n\t\t\tlabelFileWaitingForSize: \"Auf Größe warten\",\n\t\t\tlabelFileSizeNotAvailable: \"Größe nicht verfügbar\",\n\t\t\tlabelFileLoading: \"Laden\",\n\t\t\tlabelFileLoadError: \"Fehler beim Laden\",\n\t\t\tlabelFileProcessing: \"Hochladen\",\n\t\t\tlabelFileProcessingComplete: \"Hochgeladen\",\n\t\t\tlabelFileProcessingAborted: \"Hochladen abgebrochen\",\n\t\t\tlabelFileProcessingError: \"Fehler beim Hochladen\",\n\t\t\tlabelFileProcessingRevertError: \"Fehler beim Entfernen\",\n\t\t\tlabelFileRemoveError: \"Fehler beim Löschen\",\n\t\t\tlabelTapToCancel: \"Tippen zum Abbrechen \",\n\t\t\tlabelTapToRetry: \"Tippen zum Wiederholen\",\n\t\t\tlabelTapToUndo: \"Tippen zum Entfernen\",\n\t\t\tlabelButtonRemoveItem: \"Entfernen\",\n\t\t\tlabelButtonAbortItemLoad: \"Abbrechen\",\n\t\t\tlabelButtonRetryItemLoad: \"Wiederholen\",\n\t\t\tlabelButtonAbortItemProcessing: \"Abbrechen\",\n\t\t\tlabelButtonUndoItemProcessing: \"Entfernen\",\n\t\t\tlabelButtonRetryItemProcessing: \"Wiederholen\",\n\t\t\tlabelButtonProcessItem: \"Hochladen\",\n\t\t\tlabelMaxFileSizeExceeded: \"Datei ist zu groß\",\n\t\t\tlabelMaxFileSize: \"Maximale Dateigröße beträgt {filesize}\",\n\t\t\tlabelMaxTotalFileSizeExceeded: \"Maximale Gesamtgröße überschritten\",\n\t\t\tlabelMaxTotalFileSize: \"Maximale Gesamtgröße beträgt {filesize}\",\n\t\t\tlabelFileTypeNotAllowed: \"Ungültiger Dateityp\",\n\t\t\tfileValidateTypeLabelExpectedTypes: \"Gültige Dateitypen: {allButLastType} und {lastType}\",\n\t\t\tfileValidateTypeLabelExpectedTypesMap: {\n\t\t\t\t\"image/*\": \"Bilddateien\",\n\t\t\t\t\"image/png\": \".png\",\n\t\t\t\t\"image/jpg\": \".jpg\",\n\t\t\t\t\"image/jpeg\": \".jpeg\",\n\t\t\t\t\"application/pdf\": \".pdf\",\n\t\t\t\t\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\": \".docx\",\n\t\t\t},\n\t\t};\n\n\t\tfor (const input of this.inputs) {\n\t\t\tthis.fileponds[input.name] = FilePond.create(input, {\n\t\t\t\t...options,\n\t\t\t\tmaxFiles: input.dataset.maxFiles || null,\n\t\t\t\tmaxFileSize: input.dataset.maxFileSize || null,\n\t\t\t\tmaxTotalFileSize: input.dataset.maxTotalFileSize || null,\n\t\t\t});\n\t\t}\n\t}\n\n\tbeforeSubmit() {\n\t\tfor (const [_, filepond] of Object.entries(this.fileponds)) {\n\t\t\tif (!(filepond.status == FilePond.Status.EMPTY || filepond.status == FilePond.Status.READY)) {\n\t\t\t\talert(\"Es sind noch nicht alle Dateien hochgeladen!\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tonPayload(payload) {\n\t\tfor (const input of this.inputs) {\n\t\t\tif (input.multiple) {\n\t\t\t\tpayload[input.name] = [];\n\t\t\t}\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\tasync inputHandler(input, value) {\n\t\tif (!input.closest(\".filepond--root\")) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (!input.closest(\".filepond--data\")) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst filepond = this.fileponds[input.name];\n\t\tconst fileObject = filepond.getFiles().find((f) => f.serverId === value);\n\n\t\tconst res = await fetch(`${filepond.server.url}finish`, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: value,\n\t\t\theaders: this.headers,\n\t\t});\n\n\t\tif (!res.ok) {\n\t\t\tthrow new Error(\"Upload could not finish \", res);\n\t\t}\n\n\t\tconst fileUrl = await res.text();\n\t\tconst fileName = fileObject.filename;\n\t\tconst fileSize = fileObject.fileSize;\n\n\t\treturn {\n\t\t\turl: fileUrl,\n\t\t\tname: fileName,\n\t\t\tsize: fileSize,\n\t\t};\n\t}\n}\n\nFileUpload.refs = {};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\tArray.from(document.querySelectorAll(\"[c-file-upload]\")).forEach((el) => new FileUpload(el));\n});\n","document.addEventListener(\"DOMContentLoaded\", () => {\n\tif (window.location.search) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\n\t\tconst gclid = params.get(\"gclid\");\n\t\tif (gclid) {\n\t\t\twindow.localStorage.setItem(\"gclid\", gclid);\n\t\t}\n\n\t\tconst fbclid = params.get(\"fbclid\");\n\t\tif (fbclid) {\n\t\t\tconst fbc = `fb.1.${Date.now()}.${fbclid}`;\n\t\t\twindow.localStorage.setItem(\"fbc\", fbc);\n\t\t}\n\n\t\tconst ttclid = params.get(\"ttclid\");\n\t\tif (ttclid) {\n\t\t\twindow.localStorage.setItem(\"ttclid\", ttclid);\n\t\t}\n\t}\n\n\tconst forms = Array.from(document.querySelectorAll(\"[c-conversion] > form\"));\n\tforms.forEach((form) => {\n\t\t// Create hidden input for each and store it in object\n\t\tconst inputs = [\"gclid\", \"fbc\", \"fbp\", \"user-agent\", \"ttclid\", \"url\"].reduce((obj, name) => {\n\t\t\tconst input = document.createElement(\"input\");\n\t\t\tinput.type = \"hidden\";\n\t\t\tinput.name = name;\n\t\t\tform.appendChild(input);\n\n\t\t\treturn {\n\t\t\t\t...obj,\n\t\t\t\t[name]: input,\n\t\t\t};\n\t\t}, {});\n\n\t\tform.addEventListener(\"submit\", () => {\n\t\t\tconst conversionIds = getConversionIDs();\n\n\t\t\tinputs.gclid.value = conversionIds.gclid;\n\t\t\tinputs.fbc.value = conversionIds.fbc;\n\t\t\tinputs.fbp.value = conversionIds.fbp;\n\t\t\tinputs[\"user-agent\"].value = conversionIds.useragent;\n\t\t\tinputs.ttclid.value = conversionIds.ttclid;\n\t\t\tinputs.url.value = conversionIds.url;\n\n\t\t\t// Tracking Events\n\t\t\tif (window.fbq !== undefined) {\n\t\t\t\tfbq(\"track\", \"SubmitApplication\", {}, { eventID: conversionIds.fbp });\n\t\t\t}\n\t\t});\n\t});\n\n\tconst trackElements = Array.from(document.querySelectorAll(\"[data-fb-track]\"));\n\ttrackElements.forEach((el) => {\n\t\tel.addEventListener(\"click\", () => {\n\t\t\tconst isDisabled = el.dataset.trackDisabled === \"true\";\n\t\t\tif (isDisabled) return;\n\n\t\t\tconst event = el.dataset.fbTrack;\n\t\t\tconst conversionIds = getConversionIDs();\n\t\t\tconst url = el.dataset.trackUrl;\n\n\t\t\tif (window.fbq !== undefined) {\n\t\t\t\tfbq(\"track\", event, {}, { eventID: conversionIds.fbp });\n\t\t\t}\n\n\t\t\tfetch(url, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tevent,\n\t\t\t\t\t...conversionIds,\n\t\t\t\t}),\n\t\t\t});\n\t\t});\n\t});\n\n\tfunction getConversionIDs() {\n\t\tconst gclid = window.localStorage.getItem(\"gclid\");\n\t\tconst fbc = window.localStorage.getItem(\"fbc\");\n\t\tconst fbp = getCookie(\"_fbp\");\n\t\tconst useragent = navigator.userAgent;\n\t\tconst ttclid = window.localStorage.getItem(\"ttclid\");\n\t\tconst url = window.location.href;\n\n\t\treturn {\n\t\t\tgclid,\n\t\t\tfbc,\n\t\t\tfbp,\n\t\t\tuseragent,\n\t\t\tttclid,\n\t\t\turl,\n\t\t};\n\t}\n\n\tfunction getCookie(name) {\n\t\tconst value = `; ${document.cookie}`;\n\t\tconst parts = value.split(`; ${name}=`);\n\t\tif (parts.length === 2) return parts.pop().split(\";\").shift();\n\t\telse return null;\n\t}\n});\n","(function () {function oa(a){Object.defineProperty(a,\"__esModule\",{value:true})}var M=this;var j={};function pa(e,t){var r;if(\"undefined\"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=qa(e))||t&&e&&\"number\"==typeof e.length){r&&(e=r);var o=0,n=function(){};return{s:n,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:n}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var $,l=!0,i=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return l=e.done,e},e:function(e){i=!0,$=e},f:function(){try{l||null==r.return||r.return()}finally{if(i)throw $}}}}function qa(e,t){if(e){if(\"string\"==typeof e)return ca(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ca(e,t):void 0}}function ca(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,o=new Array(t);r<t;r++)o[r]=e[r];return o}Object.defineProperty(j,\"__esModule\",{value:!0});var G=(N=void 0,R=j.isFormElement=N,U=j.isVisible=R,V=j.getDistanceFromTop=U,O=j.convertToString=V,j.validateEmail=O);j.findTextNode=G;var N=function(e){return e instanceof HTMLInputElement||e instanceof HTMLSelectElement||e instanceof HTMLTextAreaElement};j.isFormElement=N;var R=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)};j.isVisible=R;var U=function(e){var t=e,r=0;if(t.offsetParent)do{r+=t.offsetTop,t=t.offsetParent instanceof HTMLElement?t.offsetParent:null}while(t);return r>=0?r:0};j.getDistanceFromTop=U;var V=function(e){return\"string\"==typeof e?e:\"number\"==typeof e?e.toString():e?\"true\":\"false\"};j.convertToString=V;var O=function(e){return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase())};j.validateEmail=O,G=function(e){var t,r,o=pa(e.childNodes);try{for(o.s();!(r=o.n()).done;){var n=r.value;if(n.childNodes.length&&(t=G(n)),n.nodeType==Node.TEXT_NODE&&(t=n),t)break}}catch($){o.e($)}finally{o.f()}return t},j.findTextNode=G;var X={};function ra(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function da(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function sa(e,t,i){return t&&da(e.prototype,t),i&&da(e,i),e}Object.defineProperty(X,\"__esModule\",{value:!0});var ta=function(){function e(t){ra(this,e),this.view=t,this.currentStep=0,this.alertShown=!1,this.view=t,this.init()}return sa(e,[{key:\"init\",value:function(){this.view.setMaskHeight(this.currentStep),this.view.disableElement(this.view.back),this.view.setButtonText(this.currentStep),this.view.setStepsDisplay(this.currentStep),this.view.createHiddenForm(),this.setAlert(),this.setEvents()}},{key:\"setEvents\",value:function(){var e=this,t=function(t){e.navClick(t)},i=function(t){e.handleInput(t)};this.view.next.addEventListener(\"click\",function(){e.nextClick()}),this.view.back&&this.view.back.addEventListener(\"click\",function(){e.backClick()}),this.view.navLinks.forEach(function(e){e.addEventListener(\"click\",t)}),this.view.inputs.forEach(function(e){e.addEventListener(\"input\",i)}),this.view.form.addEventListener(\"submit\",function(t){e.handleSubmit()}),this.view.sendHiddenForm&&this.view.rightArrow.addEventListener(\"click\",function t(){e.currentStep===e.view.hiddenFormStep&&(e.view.submitHiddenForm(),e.view.rightArrow.removeEventListener(\"click\",t))})}},{key:\"nextClick\",value:function(){this.checkRequiredInputs()?(this.currentStep++,1===this.currentStep&&this.view.enableElement(this.view.back),this.currentStep===this.view.steps.length?this.view.submitForm():(this.view.goNext(),this.view.setMaskHeight(this.currentStep),this.view.setButtonText(this.currentStep),this.view.setStepsDisplay(this.currentStep)),this.hideAlert(),this.view.scrollTop()):this.showAlert()}},{key:\"backClick\",value:function(){var e=this.currentStep-1;e<0||(this.view.goBack(),this.view.setMaskHeight(e),this.view.setButtonText(e),this.view.setStepsDisplay(e),this.hideAlert(),this.view.scrollTop(),this.currentStep=e,0===this.currentStep&&this.view.disableElement(this.view.back))}},{key:\"navClick\",value:function(e){var t=e.currentTarget;if(t instanceof HTMLElement){var i=+t.dataset.msfNav-1;i<this.currentStep&&(this.view.sliderDots[i].click(),this.currentStep=i,this.view.setMaskHeight(this.currentStep),this.view.setButtonText(this.currentStep),0===this.currentStep&&this.view.disableElement(this.view.back))}}},{key:\"handleInput\",value:function(e){var t=e.currentTarget;if(N(t)){var i=\"-\";switch(t.type){case\"checkbox\":if(!(t instanceof HTMLInputElement))break;i=t.checked;var r=t.parentElement;if(!r)break;var n=r.querySelector(\".w-checkbox-input\");t.checked&&n&&this.view.removeWarningClass(n);break;case\"radio\":var s=this.view.form.querySelector(\"input[name=\\\"\".concat(t.name,\"\\\"]:checked\"));if(!(s instanceof HTMLInputElement))break;i=s.value;var a=t.parentElement;if(!a)break;var v=a.querySelector(\".w-radio-input\");v&&this.view.removeWarningClass(v);break;default:if(!t.value)break;if(\"email\"===t.type&&!O(t.value))break;i=t.value,this.view.removeWarningClass(t);}this.view.setValues(t,i)}}},{key:\"checkRequiredInputs\",value:function(){var e=this,t=this.view.getInputs(this.currentStep).filter(function(e){return e.required&&R(e)}),i=0;return t.forEach(function(t){switch(t.type){case\"checkbox\":if(t.checkValidity()){i++;break}var r=t.parentElement;if(!r)break;var n=r.querySelector(\".w-checkbox-input\");n&&e.view.addWarningClass(n);break;case\"radio\":if(t.checkValidity()){i++;break}var s=t.parentElement;if(!s)break;var a=s.querySelector(\".w-radio-input\");a&&e.view.addWarningClass(a);break;default:if(!t.checkValidity()||\"email\"===t.type&&!O(t.value)){e.view.addWarningClass(t);break}i++;}}),i===t.length}},{key:\"setAlert\",value:function(){this.view.alertInteraction||this.view.hideElement(this.view.alert,!0)}},{key:\"showAlert\",value:function(){this.alertShown||(this.view.showAlert(),this.alertShown=!0)}},{key:\"hideAlert\",value:function(){this.alertShown&&(this.view.hideAlert(),this.alertShown=!1)}},{key:\"observeSubmitText\",value:function(){var e=this,t=this.view.submitButton;new MutationObserver(function(i){i.forEach(function(i){\"attributes\"===i.type&&\"value\"===i.attributeName&&(e.view.next.textContent=t.value)})}).observe(this.view.submitButton,{attributes:!0})}},{key:\"handleSubmit\",value:function(){this.view.disableButtons(),this.view.hideButtons()}}]),e}(),ua=ta;X.default=ua;var Y={};function va(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function ea(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function wa(e,t,i){return t&&ea(e.prototype,t),i&&ea(e,i),e}Object.defineProperty(Y,\"__esModule\",{value:!0});var xa=function(){function e(t){var i,n=t.alertSelector,r=t.alertText,o=t.backSelector,s=t.backText,a=t.completedPercentageSelector,l=t.currentStepSelector,c=t.formSelector,d=t.hiddeButtonsOnSubmit,h=void 0===d||d,u=t.hiddenFormStep,f=void 0===u?1:u,m=t.nextSelector,y=t.nextText,v=t.scrollTopOnStepChange,p=void 0!==v&&v,w=t.sendHiddenForm,b=void 0!==w&&w,$=t.warningClass;va(this,e);var E=document.querySelector(c);if(!E)throw new Error(\"No form was found with the selector \".concat(c));this.form=E;var k=document.querySelector(m);if(!k)throw new Error(\"No next button was found with the selector \".concat(m));if(this.next=k,o){var x=document.querySelector(o);if(!x)throw new Error(\"No back button was found with the selector \".concat(o));this.back=x}if(n){var S=document.querySelector(n);if(!S)throw new Error(\"No alert element was found with the selector \".concat(n));this.alert=S}var g=E.querySelector(\"input[type=\\\"submit\\\"]\");if(!g)throw new Error(\"No next button was found with the selector \".concat(m));if(this.submitButton=g,l){var H=document.querySelector(l);if(!H)throw new Error(\"No current step display element was found with the selector \".concat(l));this.currentStepDisplay=H}if(a){var q=document.querySelector(a);if(!q)throw new Error(\"No completed percentage display element was found with the selector \".concat(a));this.completedPercentageDisplay=q}var T=E.querySelector(\".w-slider\");if(!T)throw new Error(\"No slider found inside the form, please add one.\");this.slider=T;var C=T.querySelector(\".w-slider-mask\");if(!C)throw new Error(\"No mask found inside the slider!\");this.mask=C,this.steps=T.querySelectorAll(\".w-slide\");var F=T.querySelector(\".w-slider-arrow-right\");if(!F)throw new Error(\"No right arrow found inside the slider!\");this.rightArrow=F;var A=T.querySelector(\".w-slider-arrow-left\");if(!A)throw new Error(\"No left arrow found inside the slider!\");this.leftArrow=A,this.sliderDots=T.querySelectorAll(\".w-slider-dot\"),this.navLinks=document.querySelectorAll(\"[data-msf-nav]\"),this.nextText=y||this.next.textContent||\"Next\",this.backText=s,this.submitText=this.submitButton.value,this.warningClass=$,this.alertText=r,this.alertInteraction=null===(i=this.alert)||void 0===i?void 0:i.querySelector(\"[data-msf=\\\"alert\\\"]\"),this.scrollTopOnStepChange=p,this.hiddeButtonsOnSubmit=h,this.sendHiddenForm=b,this.hiddenFormStep=f>=1?f:1,this.inputs=this.getInputs()}return wa(e,[{key:\"setMaskHeight\",value:function(e){this.mask.style.height=\"\",this.mask.style.height=\"\".concat(this.steps[e].offsetHeight,\"px\")}},{key:\"getInputs\",value:function(e){var t=\"number\"==typeof e?this.steps[e].querySelectorAll(\"input, select, textarea\"):this.form.querySelectorAll(\"input, select, textarea\");return Array.from(t)}},{key:\"setButtonText\",value:function(e){var t=this,i=function(i){var n=\"back\"===i?t.back:t.next;if(n){var r=G(n),o=\"back\"===i?t.backText:t.nextText;if(r&&Array.isArray(o)&&o.length>0)for(var s=function(t){var i=o.findIndex(function(i){return+i.step-1==e-t});if(i>=0)return r.textContent=o[i].text,\"break\"},a=0;a<=e;a++){if(\"break\"===s(a))break}}};i(\"back\");var n=G(this.next);n&&e===this.steps.length-1?n.textContent=this.submitText:n&&\"string\"==typeof this.nextText&&e===this.steps.length-2?n.textContent=this.nextText:i(\"next\")}},{key:\"goNext\",value:function(){this.rightArrow.click()}},{key:\"goBack\",value:function(){this.leftArrow.click()}},{key:\"submitForm\",value:function(){this.submitButton.click()}},{key:\"submitHiddenForm\",value:function(){this.sendHiddenForm&&this.hiddenSubmitButton.click()}},{key:\"addWarningClass\",value:function(e){this.warningClass&&e.classList.add(this.warningClass)}},{key:\"removeWarningClass\",value:function(e){this.warningClass&&e.classList.remove(this.warningClass)}},{key:\"hideElement\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(e){var i=getComputedStyle(e);if(\"all 0s ease 0s\"===i.transition&&(e.style.transition=\"opacity 0.2s ease\"),t&&\"none\"!==i.display){e.addEventListener(\"transitionend\",function t(){e.style.display=\"none\",e.removeEventListener(\"transitionend\",t)})}e.style.opacity=\"0\",this.disableElement(e)}}},{key:\"showElement\",value:function(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];e&&(i&&(e.style.display=\"block\"),requestAnimationFrame(function(){e.style.opacity=\"\",t.enableElement(e)}))}},{key:\"disableElement\",value:function(e){e&&(e.style.pointerEvents=\"none\")}},{key:\"enableElement\",value:function(e){e&&(e.style.pointerEvents=\"\")}},{key:\"disableButtons\",value:function(){var e=this;this.disableElement(this.next),this.disableElement(this.back),this.navLinks.forEach(function(t){return e.disableElement(t)})}},{key:\"hideButtons\",value:function(){this.hiddeButtonsOnSubmit&&(this.hideElement(this.next),this.back&&this.hideElement(this.back))}},{key:\"showAlert\",value:function(){this.alertText&&alert(this.alertText),this.alert&&(this.alertInteraction?this.alertInteraction.click():this.showElement(this.alert,!0))}},{key:\"hideAlert\",value:function(){this.alert&&(this.alertInteraction?this.alertInteraction.click():this.hideElement(this.alert,!0))}},{key:\"scrollTop\",value:function(){this.scrollTopOnStepChange&&window.scrollTo({top:U(this.form),behavior:\"smooth\"})}},{key:\"setValues\",value:function(e,t){t=V(t);var i=document.querySelector(\"[data-msf-value=\\\"\".concat(e.id,\"\\\"]\"))||document.querySelector(\"[data-msf-value=\\\"\".concat(e.name,\"\\\"]\"));if(i&&(i.textContent=t),e.matches(\"[data-msf=\\\"hidden\\\"]\")){var n=this.hiddenForm.querySelector(\"#hidden-\".concat(e.id));n instanceof HTMLInputElement&&(n.value=t)}}},{key:\"setStepsDisplay\",value:function(e){this.currentStepDisplay&&(this.currentStepDisplay.textContent=(e+1).toString()),this.completedPercentageDisplay&&(this.completedPercentageDisplay.textContent=\"\".concat(Math.round(e/(this.steps.length-1)*100),\"%\"))}},{key:\"createHiddenForm\",value:function(){var e,t=this;if(this.sendHiddenForm){var i=this.form.parentElement;if(i)i.insertAdjacentHTML(\"afterend\",\"\\n    <div class=\\\"w-form\\\" style=\\\"display: none;\\\">\\n        <form id=\\\"msf-hidden-form\\\" name=\\\"MSF Hidden Form\\\" data-name=\\\"MSF Hidden Form\\\">\\n            <input type=\\\"submit\\\" value=\\\"Submit\\\" data-wait=\\\"Please wait...\\\" />\\n        </form>\\n    </div>\\n    \"),this.hiddenForm=i.parentElement?i.parentElement.querySelector(\"#msf-hidden-form\"):document.querySelector(\"#msf-hidden-form\"),this.hiddenSubmitButton=this.hiddenForm.querySelector(\"input[type=\\\"submit\\\"]\"),this.form.querySelectorAll(\"[data-msf=\\\"hidden\\\"]\").forEach(function(e){var i=N(e)?e:e.querySelector(\"input, select, textarea\");if(i&&!t.hiddenForm.querySelector(\"#hidden-\".concat(e.id))){var n=\"<input type=\\\"hidden\\\" id=\\\"hidden-\".concat(i.id,\"\\\" name=\\\"\").concat(i.name,\"\\\" data-name=\\\"\").concat(i.name,\"\\\" />\");t.hiddenForm.insertAdjacentHTML(\"beforeend\",n)}}),window.Webflow&&window.Webflow.destroy(),window.Webflow&&window.Webflow.ready(),window.Webflow&&(null===(e=window.Webflow.require(\"ix2\"))||void 0===e||e.init())}}}]),e}(),ya=xa;Y.default=ya;var I={};function za($,e){if(!($ instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var fa=I&&I.__importDefault||function($){return $&&$.__esModule?$:{default:$}};Object.defineProperty(I,\"__esModule\",{value:!0});var Aa=fa(X),Ba=fa(Y),Ca=function $(e){za(this,$),this.view=new Ba.default(e),this.controller=new Aa.default(this.view)},Da=Ca;I.default=Da;var Z={};oa(Z);function _(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)}var Ea=\"object\"==typeof M&&M&&M.Object===Object&&M;var Fa=\"object\"==typeof self&&self&&self.Object===Object&&self,ga=Ea||Fa||Function(\"return this\")();var aa=function(){return ga.Date.now()};var Ga=/\\s/;function Ha(t){for(var e=t.length;e--&&Ga.test(t.charAt(e)););return e}var Ia=/^\\s+/;function Ja(r){return r?r.slice(0,Ha(r)+1).replace(Ia,\"\"):r}var P=ga.Symbol;var ha=Object.prototype,Ka=ha.hasOwnProperty,La=ha.toString,J=P?P.toStringTag:void 0;function Ma($){var r=Ka.call($,J),t=$[J];try{$[J]=void 0;var n=!0}catch(o){}var a=La.call($);return n&&(r?$[J]=t:delete $[J]),a}var Na=Object.prototype,Oa=Na.toString;function Pa(t){return Oa.call(t)}var Qa=\"[object Null]\",Ra=\"[object Undefined]\",ia=P?P.toStringTag:void 0;function Sa($){return null==$?void 0===$?Ra:Qa:ia&&ia in Object($)?Ma($):Pa($)}function Ta(t){return null!=t&&\"object\"==typeof t}var Ua=\"[object Symbol]\";function Va($){return\"symbol\"==typeof $||Ta($)&&Sa($)==Ua}var ja=NaN,Wa=/^[-+]0x[0-9a-f]+$/i,Xa=/^0b[01]+$/i,Ya=/^0o[0-7]+$/i,Za=parseInt;function ka($){if(\"number\"==typeof $)return $;if(Va($))return ja;if(_($)){var r=\"function\"==typeof $.valueOf?$.valueOf():$;$=_(r)?r+\"\":r}if(\"string\"!=typeof $)return 0===$?$:+$;$=Ja($);var e=Xa.test($);return e||Ya.test($)?Za($.slice(2),e?2:8):Wa.test($)?ja:+$}var $a=\"Expected a function\",_a=Math.max,ab=Math.min;function bb(o,r,t){var i,e,n,$,a,u,v=0,c=!1,f=!1,y=!0;if(\"function\"!=typeof o)throw new TypeError($a);function W(r){var t=i,n=e;return i=e=void 0,v=r,$=o.apply(n,t)}function m(o){var t=o-u;return void 0===u||t>=r||t<0||f&&o-v>=n}function A(){var o=aa();if(m(o))return p(o);a=setTimeout(A,function(o){var t=r-(o-u);return f?ab(t,n-(o-v)):t}(o))}function p(o){return a=void 0,y&&i?W(o):(i=e=void 0,$)}function d(){var o=aa(),t=m(o);if(i=arguments,e=this,u=o,t){if(void 0===a)return function(o){return v=o,a=setTimeout(A,r),c?W(o):$}(u);if(f)return clearTimeout(a),a=setTimeout(A,r),W(u)}return void 0===a&&(a=setTimeout(A,r)),$}return r=ka(r)||0,_(t)&&(c=!!t.leading,n=(f=\"maxWait\"in t)?_a(ka(t.maxWait)||0,r):n,y=\"trailing\"in t?!!t.trailing:y),d.cancel=function(){void 0!==a&&clearTimeout(a),v=0,i=u=e=a=void 0},d.flush=function(){return void 0===a?$:p(aa())},d}Z.default=bb;var z={};Object.defineProperty(z,\"__esModule\",{value:!0});var Q=(K=void 0,B=z.isFormElement=K,ba=z.throwError=B,z.isVisible=ba);z.convertToString=Q;var K=function(e){return e instanceof HTMLInputElement||e instanceof HTMLSelectElement||e instanceof HTMLTextAreaElement};z.isFormElement=K;var B=function(e,r){switch(r){case\"wrong-selector\":throw new Error(\"The element with a selector \".concat(e,\" has not been found. Please, check if you've set it correctly.\"));case\"no-parent\":throw new Error(\"The element with a selector \".concat(e,\" hasn't got any parent with the [data-logic=\\\"parent\\\"] attibute.\"));case\"wrong-action\":throw new Error(\"No action (or wrong action name) has been provided for the \".concat(e,\" selector.\"));case\"wrong-operator\":throw new Error(\"The operator of the selector \".concat(e,\" is not valid.\"));}};z.throwError=B;var ba=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)};z.isVisible=ba,Q=function(e){return\"string\"==typeof e?e:\"number\"==typeof e?e.toString():e?\"true\":\"false\"},z.convertToString=Q;var L={};function cb(e,r){var t;if(\"undefined\"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(t=db(e))||r&&e&&\"number\"==typeof e.length){t&&(e=t);var a=0,n=function(){};return{s:n,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:n}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var i,o=!0,u=!1;return{s:function(){t=e[Symbol.iterator]()},n:function(){var e=t.next();return o=e.done,e},e:function(e){u=!0,i=e},f:function(){try{o||null==t.return||t.return()}finally{if(u)throw i}}}}function db(e,r){if(e){if(\"string\"==typeof e)return la(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===t&&e.constructor&&(t=e.constructor.name),\"Map\"===t||\"Set\"===t?Array.from(e):\"Arguments\"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?la(e,r):void 0}}function la(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,a=new Array(r);t<r;t++)a[t]=e[t];return a}function eb(e,r){if(!(e instanceof r))throw new TypeError(\"Cannot call a class as a function\")}function ma(e,r){for(var t=0;t<r.length;t++){var a=r[t];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function fb(e,r,t){return r&&ma(e.prototype,r),t&&ma(e,t),e}var gb=L&&L.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(L,\"__esModule\",{value:!0});var hb=gb(Z),ib=function(){function e(r){eb(this,e),this.logicList=[],this.submitHiddenInputs=!1,this.checkConditionsOnLoad=!0,Object.assign(this,r),this.store=[],this.init()}return fb(e,[{key:\"init\",value:function(){var e=this;this.logicList.forEach(function(r){e.addEvents(r),r.actions.forEach(function(r){e.storeInputData(r.selector,r.action)})})}},{key:\"addEvents\",value:function(e){var r=this;e.conditions.forEach(function(t){var a=document.querySelector(t.selector);if(K(a)){var n=\"radio\"===a.type?Array.from(document.querySelectorAll(\"input[name=\\\"\".concat(a.name,\"\\\"]\"))):[a];r.checkConditionsOnLoad&&r.checkConditions(e);var i=hb.default(r.checkConditions.bind(r),200),o=[\"email\",\"number\",\"password\",\"search\",\"tel\",\"text\",\"textarea\",\"url\"];n.forEach(function(t){t.addEventListener(\"input\",function(){o.includes(a.type)?i(e):r.checkConditions(e)})})}else B(t.selector,\"wrong-selector\")})}},{key:\"storeInputData\",value:function(e,r){var t=this;if(\"custom\"!==r){var a=document.querySelector(e);if(a instanceof HTMLElement)this.getTargets(a).forEach(function(e){var r={element:e,required:e.required,disabled:e.disabled};-1===t.store.findIndex(function(r){return r.element===e})&&t.store.push(r)});else B(e,\"wrong-selector\")}}},{key:\"checkConditions\",value:function(e){var r,t=this,a=e.conditions,n=e.operator,i=void 0===n?\"and\":n,o=e.actions,u=!1,c=cb(a);try{for(c.s();!(r=c.n()).done;){var s=r.value,l=document.querySelector(s.selector);if(!K(l))return void B(s.selector,\"wrong-selector\");var d=\"\";switch(l.type){case\"checkbox\":d=Q(l.checked);break;case\"radio\":var $=document.querySelector(\"input[name=\\\"\".concat(l.name,\"\\\"]:checked\"));$ instanceof HTMLInputElement&&(d=$.value);break;default:d=l.value;}var f=Q(s.value);switch(s.operator){case\"equal\":u=d===f;break;case\"not-equal\":u=d!==f;break;case\"contain\":u=!!d.includes(f);break;case\"not-contain\":u=!d.includes(f);break;case\"greater\":u=+d>+f;break;case\"greater-equal\":u=+d>=+f;break;case\"less\":u=+d<+f;break;case\"less-equal\":u=+d<=+f;break;case\"empty\":u=0===d.length;break;case\"filled\":u=d.length>0;break;default:B(s.selector,\"wrong-operator\");}if(\"and\"===i&&!u)break;if(\"or\"===i&&u)break}}catch(v){c.e(v)}finally{c.f()}u&&o.forEach(function(e){t.triggerAction(e)})}},{key:\"triggerAction\",value:function(e){var r=this,t=e.selector,a=e.action,n=e.clear,i=void 0!==n&&n,o=document.querySelector(t);if(o instanceof HTMLElement){if(\"custom\"!==a){var u=this.getTargets(o),c=!1;u.forEach(function(e){var n=r.getStoredData(e),u=n.required,s=n.disabled,l=ba(e);switch(c||(c=r.triggerInteraction(o,a)),a){case\"show\":r.showInput(e,o,c,u,s);break;case\"hide\":r.hideInput(e,o,c);break;case\"enable\":r.enableInput(e,l);break;case\"disable\":r.disableInput(e,l);break;case\"require\":r.requireInput(e,l);break;case\"unrequire\":r.unrequireInput(e,l);break;default:B(t,\"wrong-action\");}i&&r.clearInput(e)})}else this.triggerInteraction(o,a);}else B(t,\"wrong-selector\")}},{key:\"showInput\",value:function(e,r,t,a,n){t||(r.style.display=\"block\"),e.required=a,e.disabled=n}},{key:\"hideInput\",value:function(e,r,t){t||(r.style.display=\"none\"),this.submitHiddenInputs||(e.disabled=!0),e.required=!1}},{key:\"enableInput\",value:function(e,r){r&&(e.disabled=!1),this.updateStoredData(e,\"disabled\",!1)}},{key:\"disableInput\",value:function(e,r){r&&(e.disabled=!0),this.updateStoredData(e,\"disabled\",!0)}},{key:\"requireInput\",value:function(e,r){r&&(e.required=!0),this.updateStoredData(e,\"required\",!0)}},{key:\"unrequireInput\",value:function(e,r){r&&(e.required=!1),this.updateStoredData(e,\"required\",!1)}},{key:\"getTargets\",value:function(e){return K(e)?[e]:Array.from(e.querySelectorAll(\"input, select, textarea\"))}},{key:\"triggerInteraction\",value:function(e,r){var t=\"custom\"===r?e:e.querySelector(\":scope > [data-logic=\\\"\".concat(r,\"\\\"]\"));return t instanceof HTMLElement&&(t.click(),!0)}},{key:\"clearInput\",value:function(e){\"checkbox\"===e.type||\"radio\"===e.type?e.checked=!1:e.value=\"\"}},{key:\"updateStoredData\",value:function(e,r,t){var a=this.store.findIndex(function(r){return r.element===e});a>-1&&(this.store[a][r]=t)}},{key:\"getStoredData\",value:function(e){return this.store.find(function(r){return r.element===e})}}]),e}(),jb=ib;L.default=jb;var D={},na=D&&D.__importDefault||function($){return $&&$.__esModule?$:{default:$}};Object.defineProperty(D,\"__esModule\",{value:!0});var kb=na(I),lb=na(L);D={MSF:kb.default,Logic:lb.default};if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=D}else if(typeof define===\"function\"&&define.amd){define(function(){return D})}else{this[\"AWF\"]=D}})();","import * as AWF from \"advanced-webflow-forms/dist/awf.js\";\nimport { AsyncForm } from \"./async_form.js\";\nimport { FileUpload } from \"./fileupload.js\";\n\nvar Webflow = window.Webflow || [];\nWebflow.push(() => {\n\tcreateChapeauFormular();\n});\n\nfunction createChapeauFormular() {\n\tconst $main = document.querySelector('[c-chapeau-form=\"main\"]');\n\n\tconst $nav = $main.querySelector('[c-chapeau-form=\"nav\"]');\n\tconst $totalSteps = $main.querySelector('[c-chapeau-form=\"total-steps\"]');\n\tconst $progress = $main.querySelector('[c-chapeau-form=\"progress\"]');\n\n\tconst $slider = $main.querySelector('[c-chapeau-form=\"slider\"]');\n\tconst $slideList = $main.querySelector('[c-chapeau-form=\"slides\"]');\n\tconst $notQualifiedMsg = $main.querySelector('[c-chapeau-form=\"not-qualified-message\"]');\n\n\tconst $buttons = $main.querySelector('[c-chapeau-form=\"buttons\"]');\n\n\tconst formSelector = '[c-chapeau-form=\"form\"]';\n\tconst nextSelector = '[c-chapeau-form=\"next\"]';\n\tconst backSelector = '[c-chapeau-form=\"back\"]';\n\tconst currentStepSelector = '[c-chapeau-form=\"current-step\"]';\n\n\tmoveCmsSlidesToSlider($slider, $slideList);\n\n\t// Create MultiStepForm\n\tconst msf = new AWF.MSF({\n\t\thiddeButtonsOnSubmit: false, // Buttons will be manually hidden\n\t\tscrollTopOnStepChange: false,\n\t\tformSelector: formSelector,\n\t\tnextSelector: nextSelector,\n\t\tbackSelector: backSelector,\n\t\tcurrentStepSelector: currentStepSelector,\n\t});\n\n\tuseDisabledClass(msf);\n\tuseProgressBar(msf, $progress);\n\tuseBrowserValidation(msf);\n\tuseNotQualified(msf, $notQualifiedMsg, $nav, $buttons);\n\tuseAyncForm(msf);\n\tuseFileUpload(msf, $main);\n\n\t// Set total step count\n\tconst totalSteps = msf.view.steps.length;\n\t$totalSteps.textContent = totalSteps;\n\n\t// Make msf available in console\n\twindow.msf = msf;\n\n\t$main.removeAttribute(\"c-cloak\");\n\n\tmsf.view.setMaskHeight(0);\n}\n\nfunction moveCmsSlidesToSlider($slider, $slideList) {\n\tconst sliderMask = $slider.querySelector(\":scope > .w-slider-mask\");\n\tconst slides = Array.from($slideList.querySelectorAll(\":scope > .w-dyn-items > .w-dyn-item\"));\n\n\tArray.from(sliderMask.querySelectorAll(\".w-slide\")).forEach((el) => el.remove());\n\n\tslides.forEach((slide) => {\n\t\tslide.classList.add(\"w-slide\");\n\t\tsliderMask.appendChild(slide);\n\t});\n\n\t$slideList.remove();\n\n\t// Reset Webflow Slider\n\tWebflow.destroy();\n\tWebflow.ready();\n\tWebflow.require(\"ix2\").init();\n\tWebflow.require(\"slider\").redraw();\n\tWebflow.require(\"slider\").ready();\n}\n\nfunction useProgressBar({ view, controller }, $progress) {\n\tview.next.addEventListener(\"click\", updateProgressBar);\n\tview.back.addEventListener(\"click\", updateProgressBar);\n\tupdateProgressBar();\n\n\tfunction updateProgressBar() {\n\t\tconst currentStep = controller.currentStep + 1; // 0-based\n\t\tconst totalSteps = view.steps.length;\n\t\tconst progress = Math.min((currentStep / totalSteps) * 100, 100);\n\n\t\t$progress.style.width = `${progress}%`;\n\t}\n}\n\nfunction useNotQualified({ view, controller }, notQualifiedMsg, nav, buttons) {\n\tview.form.addEventListener(\"change\", checkQualified);\n\tfunction checkQualified() {\n\t\tconst inputs = view.getInputs(controller.currentStep);\n\n\t\tconst notQualified = inputs.some((input) => {\n\t\t\tif (input.checked) {\n\t\t\t\treturn input.parentElement.querySelector('[c-chapeau-form=\"not-qualified\"]') != null;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tconst currentSlide = view.steps[controller.currentStep];\n\t\tconst isNextSlideNotQualifiedMessage = currentSlide.nextSibling?.matches(\n\t\t\t'[c-chapeau-form=\"not-qualified-message\"]'\n\t\t);\n\t\tif (notQualified) {\n\t\t\tview.next.dataset.trackDisabled = true;\n\t\t\tif (!isNextSlideNotQualifiedMessage) {\n\t\t\t\tcurrentSlide.insertAdjacentHTML(\"afterend\", notQualifiedMsg.outerHTML);\n\t\t\t\tcurrentSlide.nextElementSibling\n\t\t\t\t\t.querySelector('[c-chapeau-form=\"not-qualified-back\"]')\n\t\t\t\t\t.addEventListener(\"click\", () => view.back.click());\n\t\t\t}\n\t\t} else {\n\t\t\tview.next.dataset.trackDisabled = false;\n\t\t\tif (isNextSlideNotQualifiedMessage) {\n\t\t\t\tcurrentSlide.nextSibling.remove();\n\t\t\t}\n\t\t}\n\n\t\tcurrentSlide.dataset.notQualified = notQualified;\n\n\t\tWebflow.require(\"slider\").redraw();\n\t\tWebflow.require(\"slider\").ready();\n\t}\n\n\t// Do not submit if not qualified\n\tconst originalSubmitForm = view.submitForm.bind(view);\n\tview.submitForm = () => {\n\t\tconst lastSlide = view.steps[view.steps.length - 1];\n\t\tif (lastSlide.dataset.notQualified === \"true\") {\n\t\t\tview.goNext();\n\t\t\thideElements();\n\t\t} else {\n\t\t\toriginalSubmitForm();\n\t\t}\n\t};\n\n\tview.next.addEventListener(\"click\", () => {\n\t\tconst lastSlide = view.steps[controller.currentStep - 1];\n\t\tif (lastSlide.dataset.notQualified === \"true\") {\n\t\t\thideElements();\n\t\t}\n\t});\n\n\tview.back.addEventListener(\"click\", () => {\n\t\tshowElements();\n\t});\n\n\tfunction hideElements() {\n\t\tview.hideElement(nav);\n\t\tview.hideElement(buttons);\n\t}\n\n\tfunction showElements() {\n\t\tview.showElement(nav);\n\t\tview.showElement(buttons);\n\t}\n}\n\nfunction useDisabledClass({ view }) {\n\t// Back Button is already disabled using built-in method. So redo that\n\tview.enableElement(view.back);\n\n\tview.disableElement = (el) => {\n\t\tif (!el) return;\n\t\tel.classList.add(\"disabled\");\n\t};\n\n\tview.enableElement = (el) => {\n\t\tif (!el) return;\n\t\tel.classList.remove(\"disabled\");\n\t};\n\n\tview.disableElement(view.back);\n}\n\nfunction useBrowserValidation(msf) {\n\tconst view = msf.view;\n\tconst controller = msf.controller;\n\n\t// Safe original implementation\n\tconst originalCheckRequiredInputs = controller.checkRequiredInputs.bind(controller);\n\n\tfunction newCheckRequiredInputs() {\n\t\tthis.inputsCurrentlyValid = true;\n\n\t\tconst inputs = this.view.getInputs(this.currentStep);\n\n\t\tfor (const input of inputs) {\n\t\t\tconst isValid = input.reportValidity();\n\t\t\t// Short circuit and directly return false if one input is not valid\n\t\t\tif (!isValid) {\n\t\t\t\tthis.inputsCurrentlyValid = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Run original implementation (for warning classes, etc.)\n\t\treturn originalCheckRequiredInputs();\n\t}\n\n\t// Monkeypatch `checkRequiredInputs` with custom function\n\tcontroller.checkRequiredInputs = newCheckRequiredInputs.bind(controller);\n}\n\nfunction useAyncForm(msf) {\n\tconst view = msf.view;\n\tconst controller = msf.controller;\n\n\t// Get elements\n\tconst $formBlock = view.form.closest(\"[c-async-form]\");\n\tconst $back = view.back;\n\tconst $next = view.next;\n\n\tconst asyncForm = new AsyncForm($formBlock);\n\tasyncForm.onState = (state) => {\n\t\t// Hide Buttons on success\n\t\tif (state === \"success\") {\n\t\t\tview.hideElement($back);\n\t\t\tview.hideElement($next);\n\t\t}\n\t};\n\n\t// Next button text should always reflect submit button (e.g. loading text)\n\tcontroller.observeSubmitText();\n\t// Remove submit functionality by monkeypatching, because AsyncForm handles it\n\tcontroller.handleSubmit = () => {\n\t\t// Prevent currentStep from exceding the maximum\n\t\tcontroller.currentStep = Math.min(controller.currentStep, view.steps.length - 1);\n\t};\n}\n\nfunction useFileUpload(msf, $main) {\n\tconst fileupload = new FileUpload($main);\n\n\tconst view = msf.view;\n\tconst controller = msf.controller;\n\n\t// Update mask height if files are added or removed\n\tview.form.addEventListener(\"FilePond:updatefiles\", () => {\n\t\tsetTimeout(() => view.setMaskHeight(controller.currentStep), 100); // 100ms delay to let FilePond-Element update\n\t});\n}\n"],"names":["AsyncForm","el","e","fn","event","prev","handler","payload","url","options","err","inputElements","input","name","value","inputHandler","state","isNode","createStore","initialState","queries","actions","actionQueue","dispatchQueue","getState","processActionQueue","queue","processDispatchQueue","type","data","dispatch","isBlocking","actionHandlers","query","str","args","queryHandles","api","action","defineProperty","obj","property","definition","forin","cb","key","createObject","attr","node","ns","svgElements","isSVGElement","tag","createElement","className","attributes","element","appendChild","parent","child","index","appendChildView","childViews","view","removeChildView","IS_BROWSER","isBrowser","testElement","getChildCount","getViewRect","elementRect","offset","scale","left","top","right","bottom","rect","childView","childViewRect","expandRect","calculateRectSize","isNumber","thereYet","position","destination","velocity","errorMargin","spring","stiffness","damping","mass","target","resting","ts","skipToEndState","f","easeInOutQuad","t","tween","duration","easing","delay","start","p","reverse","animator","createAnimator","category","def","props","addGetSet","keys","overwrite","o","getter","setter","animations","mixinConfig","viewProps","viewInternalAPI","viewExternalAPI","initialProps","animation","addEvent","removeEvent","listeners","viewState","events","add","remove","apis","isDefined","defaults","styles","currentProps","getOffset","getScale","getRect","propsHaveChanged","applyStyles","newProps","prop","opacity","perspective","translateX","translateY","scaleX","scaleY","rotateX","rotateY","rotateZ","originX","originY","width","height","transforms","elementCurrentStyle","Mixins","updateRect","style","createView","read","write","create","destroy","filterFrameActionsForChild","didCreateView","didWriteView","ignoreRect","ignoreRectUpdate","mixins","store","frameRect","isResting","activeMixins","ref","writers","readers","destroyers","getElement","getChildViews","getReference","createChildView","getStyle","_read","internalAPI","reader","_write","frameActions","shouldOptimize","writer","mixin","_destroy","destroyer","sharedAPIDefinition","internalAPIDefinition","needle","externalAPIDefinition","mixinAPIDefinition","a","b","mixinAPI","childCount","createPainter","fps","painter","interval","last","id","requestTick","cancelTick","setTimerType","tick","delta","createRoute","routes","root","timestamp","insertBefore","newNode","referenceNode","insertAfter","isArray","isEmpty","trim","toString","toArray","splitter","isBoolean","toBoolean","isString","toNumber","toInt","toFloat","isInt","toBytes","base","naturalFileSize","isFunction","toFunctionReference","string","levels","level","methods","createServerAPI","outline","createAction","method","timeout","headers","parts","toServerAPI","isNull","isObject","isAPI","getType","replaceSingleQuotes","conversionTable","convertTo","getValueByType","newValue","defaultValue","valueType","newValueType","convertedValue","createOption","currentValue","createOptions","optionDefinition","createInitialState","fromCamels","separator","part","createOptionAPI","createOptionActions","createOptionQueries","InteractionMethod","getUniqueId","arrayRemove","arr","run","sync","on","off","listener","fire","copyObjectPropertiesToObject","src","excluded","PRIVATE","createItemAPI","item","removeReleasedItems","items","ItemStatus","FileOrigin","getNonNumeric","getDecimalSeparator","getThousandsSeparator","decimalSeparator","thousandsStringWithSeparator","Type","filters","applyFilterChain","utils","resolve","reject","matchingFilters","initialFilter","current","next","error","applyFilters","addFilter","extendDefaultOptions","additionalOptions","defaultOptions","getOptions","setOptions","opts","getItemByQuery","getNumericAspectRatioFromString","aspectRatio","getActiveItems","Status","res","canUpdateFileInput","dataTransfer","ITEM_ERROR","ITEM_BUSY","ITEM_READY","isItemInErrorState","isItemInBusyState","isItemInReadyState","isAsync","EMPTY","ERROR","BUSY","IDLE","READY","option","status","hasRoomForItem","count","maxFileCount","limit","min","max","arrayInsert","insertItem","isBase64DataURI","getFilenameFromURL","getExtensionFromFilename","guesstimateExtension","subtype","leftPad","padding","getDateString","date","getFileFromBlob","blob","filename","extension","file","getBlobBuilder","createBlob","arrayBuffer","mimeType","BB","bb","getBlobFromByteStringWithMimeType","byteString","ab","ia","i","getMimeTypeFromBase64DataURI","dataURI","getBase64DataFromBase64DataURI","getByteStringFromBase64DataURI","getBlobFromBase64DataURI","getFileFromBase64DataURI","getFileNameFromHeader","header","matches","getFileSizeFromHeader","size","getTranfserIdFromHeader","getFileInfoFromHeaders","info","rows","source","createFileLoader","fetchFn","getProgress","abort","load","loadURL","response","computable","total","fileinfo","isGet","sendRequest","aborted","xhr","headersReceived","process","createResponse","code","body","createTimeoutResponse","hasQS","buildURL","createFetchFunction","apiUrl","onload","onerror","progress","request","ChunkStatus","processFileChunked","metadata","transfer","chunks","chunkTransferId","chunkServer","chunkSize","chunkRetryDelays","ondata","fd","requestTransferId","formData","requestParams","requestTransferOffset","requestUrl","lastChunkIndex","completeProcessingChunks","canProcessChunk","chunk","processChunk","processChunks","lengthComputable","loaded","updateTotalProgress","retryProcessChunk","totalBytesTransfered","totalSize","abortChunks","serverId","createFileProcessorFunction","canChunkUpload","shouldChunkUpload","willChunkUpload","createProcessorFunction","params","createRevertFunction","uniqueFileId","getRandomNumber","createPerceivedPerformanceUpdater","tickMin","tickMax","runtime","createFileProcessor","processFn","allowMinimumUploadDuration","progressFn","completeFn","transferId","reset","getDuration","getFilenameWithoutExtension","createFileStub","isFile","deepCloneObject","v","createItem","origin","serverFileReference","abortProcessingRequestComplete","setStatus","getFileExtension","getFileType","getFileSize","getFile","loader","meta","success","result","retryLoad","abortLoad","processor","onprocess","requestProcessing","abortProcessing","revert","revertFileUpload","forceRevert","serverTransferId","setMetadata","silent","itemAPI","getItemIndexByQuery","getItemById","itemId","fetchBlob","getDomainFromURL","isExternalURL","dynamicLabel","label","isMockItem","listUpdated","optionalPromise","sortItems","compare","getItemByQueryFromState","itemHandler","failure","files","activeItems","change","shouldPrepareOutput","beforePrepareFile","upload","doUpload","currentIndex","interactionMethod","insertLocation","totalItems","ignoredFiles","isValidFile","promises","itemInsertLocation","mainStatus","handleAdd","shouldAdd","loadComplete","restore","fetch","processNow","maxParallelUploads","processNext","queueEntry","itemReference","server","noop","shouldRemove","removeFromView","handleRevert","shouldRevert","requestRemoveResult","optionKeys","prioritizedOptionKeys","PrioritizedOptions","formatFilename","createElement$1","tagName","text","textNode","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","describeArc","x","y","startAngle","endAngle","arcSweep","end","percentageArc","from","to","svg","ringStrokeWidth","ringFrom","ringTo","coordinates","progressIndicator","create$1","write$1","isDisabled","shouldDisable","fileActionButton","toNaturalFileSize","bytes","labelBytes","labelKilobytes","labelMegabytes","labelGigabytes","KB","MB","GB","removeDecimalsWhenZero","decimalCount","create$2","fileName","fileSize","updateFile","updateFileSizeOnError","fileInfo","toPercentage","create$3","main","sub","didSetItemLoadProgress","title","didSetItemProcessProgress","didRequestItemProcessing","didAbortItemProcessing","didCompleteItemProcessing","clear","fileStatus","Buttons","ButtonKeys","calculateFileInfoOffset","getRemoveIndicatorAligment","buttonRect","calculateButtonWidth","calculateFileVerticalCenterOffset","calculateFileHorizontalCenterOffset","getLoadIndicatorAlignment","getProcessIndicatorAlignment","DefaultStyle","IdleStyle","ProcessingStyle","StyleMap","processingCompleteIndicatorView","create$4","LocalButtons","curr","allowRevert","allowRemove","allowProcess","instantUpload","alignRemoveItemButton","buttonFilter","enabledButtons","map","buttonView","loadIndicatorView","progressIndicatorView","write$2","route","stylesToApply","defaultStyles","control","create$5","didLoadItem","fileWrapper","PANEL_SPRING_PROPS","create$6","section","createSection","viewConstructor","write$3","topRect","bottomRect","panel","createDragHelper","itemIds","prevIndex","ITEM_TRANSLATE_SPRING","ITEM_SCALE_SPRING","StateMap","create$7","grab","removedActivateListener","dragState","drag","drop","route$1","write$4","getItemsPerRow","horizontalSpace","itemWidth","getItemIndexByPosition","children","positionInView","l","itemRect","itemHorizontalMargin","itemsPerRow","childMid","itemVerticalMargin","itemHeight","indexX","indexY","offsetX","offsetY","itemTop","itemRight","itemBottom","dropAreaDimensions","val","create$8","addItemView","now","spawnDate","cooldown","dist","moveItem","vx","vy","introItemView","removeItemView","getItemHeight","getItemWidth","dragItem","numItems","oldIndex","dragPosition","dragHeight","dragWidth","cols","location","visibleChildren","idx","childHeight","childBottom","childTop","route$2","write$5","dragCoordinates","dragIndex","addIndex","dragIndexOffset","removeIndexOffset","addIndexOffset","childRect","dragOffset","visualHeight","prevX","prevY","visualIndex","vectorX","vectorY","filterSetItemActions","list","create$9","storeDragCoordinates","clearDragCoordinates","route$3","write$6","newHeight","listScroller","attrToggle","enabledValue","resetFileInput","form","parentNode","create$a","setAcceptedFileTypes","toggleAllowMultiple","toggleDirectoryFilter","toggleDisabled","toggleRequired","setCaptureMethod","doesAllowBrowse","disableField","updateRequiredStatus","updateFieldValidityStatus","browser","Key","create$b","updateLabelValue","clickable","dropLabel","addBlob","moveBlob","hideBlob","explodeBlob","write$7","route$4","drip","setInputFiles","create$c","getField","syncFieldPositionsWithItems","didReorderItems","didAddItem","shouldUseFileInput","dataContainer","didLoadItem$1","field","fileItem","didPrepareOutput","didSetDisabled","didRemoveItem","didDefineValue","write$8","getRootNode","images","text$1","guesstimateMimeType","requestDataTransferItems","links","getLinks","hasFiles","getFiles","promisedFiles","isFileSystemItem","getFilesFromItem","returnedFileGroups","group","isEntry","entry","getAsEntry","isDirectoryEntry","getFilesInDirectory","dirCounter","fileCounter","resolveIfDone","readEntries","dirEntry","directoryReader","readBatch","entries","correctedFile","correctMissingFileType","getLinksFromTransferMetaData","getLinksFromTransferURLData","dragNDropObservers","eventPosition","createDragNDropClient","scopeToObserve","filterElement","observer","getDragNDropObserver","client","newObserver","createDragNDropObserver","clients","dragenter","dragover","dragleave","handlers","createHandler","elementFromPoint","point","isEventTarget","elementAtPosition","initialTarget","setDropEffect","effect","onenter","overDropTarget","onexit","ondrag","allowdrop","allowsTransfer","ondrop","createHopper","scope","validateItems","catchesDropsOnPage","requiresDropOnElement","filterItems","lastState","currentState","filteredItems","listening","listeners$1","handlePaste","activeEl","inScope","listen","unlisten","createPaster","create$d","addFilesNotificationTimeout","notificationClearTimeout","filenames","assist","message","clear$1","listModified","isUsingFilePond","itemAdded","itemRemoved","itemProcessed","itemProcessedUndo","itemError","assistant","toCamels","debounce","func","immidiateOnly","MAX_FILES_LIMIT","prevent","create$e","canHover","hasPointerEvents","credits","frag","write$9","route$5","bounds","calculateRootBoundingBoxHeight","hopper","isMultiItem","maxItems","atMaxCapacity","addAction","listItemMargin","calculateListItemMargin","listHeight","calculateListHeight","labelHeight","currentLabelHeight","listMarginTop","listMarginBottom","boundsHeight","history","MAX_BOUNCES","bounces","listAvailableHeight","isCappedHeight","panelHeight","itemMargin","visual","scrollList","itemList","newItem","removedItem","verticalItemCount","exceedsMaxFiles","allowReplace","allowMultiple","totalBrowseItems","getDragIndex","toggleDrop","isAllowed","enabled","beforeDropFile","toggleBrowse","togglePaste","createApp","initialOptions","originalElement","visibilityHandler","resizeDoneTimer","isResizing","isResizingHorizontally","initialWindowWidth","currentWindowWidth","resizeHandler","isHidden","readWriteApi","routeActionsToEvents","createEvent","eventRoutes","exposeEvent","detail","exports","filtered","prepareFile","addFile","addFiles","isFilePondFile","removeFile","sources","lastArgument","processFile","prepareFiles","processFiles","removeFiles","q","createAppObject","customOptions","lowerCaseFirstLetter","attributeNameToPropertyName","attributeName","mapObject","object","propertyMap","selector","mapping","selectorRegExp","getAttributesAsObject","attributeMapping","output","attribute","createAppAtElement","mergedOptions","attributeOptions","app","createApp$1","PRIVATE_METHODS","createAppAPI","replaceInString","replacements","match","createWorker","workerBlob","workerURL","worker","transferList","loadImage","img","renameFile","renamedFile","copyFile","registeredPlugins","createAppPlugin","plugin","pluginOutline","isOperaMini","hasPromises","hasBlobSlice","hasCreateObjectURL","hasVisibility","hasTiming","hasCSSSupports","isIE11","supported","isSupported","Status$1","OptionTypes","create$f","parse","find","registerPlugin","getOptions$1","setOptions$1","updateOptionTypes","hook","indexToRemove","context","newHook","plugins","mimeTypeMatchesWildCard","wildcard","mimeTypeGroup","wildcardGroup","isValidMimeType","acceptedTypes","userInputType","acceptedType","getItemType","validateFile","acceptedFileTypes","typeDetector","detectedType","applyMimeTypeMap","acceptedFileType","validationResult","handleRejection","acceptedFileTypesMapped","acceptedFileTypesMappedUnique","sizeMax","sizeMin","fileFilter","totalSizeMax","FileUpload","asyncForm","FilePond.registerPlugin","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePond.create","_","filepond","FilePond.Status","fileObject","fileUrl","gclid","fbclid","fbc","ttclid","inputs","conversionIds","getConversionIDs","fbp","getCookie","useragent","oa","M","j","pa","r","qa","n","$","ca","G","N","R","U","V","O","X","ra","da","sa","ta","s","ua","Y","va","ea","wa","xa","c","d","h","u","m","w","E","k","S","g","H","T","C","F","A","ya","I","za","fa","Aa","Ba","Ca","Da","Z","Ea","Fa","ga","aa","Ga","Ha","Ia","Ja","P","ha","Ka","La","J","Ma","Na","Oa","Pa","Qa","Ra","Sa","Ta","Ua","Va","ja","Wa","Xa","Ya","Za","ka","$a","_a","W","z","Q","K","B","ba","L","db","la","eb","ma","fb","gb","hb","ib","jb","D","na","kb","lb","module","Webflow","createChapeauFormular","$main","$nav","$totalSteps","$progress","$slider","$slideList","$notQualifiedMsg","$buttons","formSelector","nextSelector","backSelector","currentStepSelector","moveCmsSlidesToSlider","msf","AWF.MSF","useDisabledClass","useProgressBar","useBrowserValidation","useNotQualified","useAyncForm","useFileUpload","totalSteps","sliderMask","slides","slide","controller","updateProgressBar","currentStep","notQualifiedMsg","nav","buttons","checkQualified","notQualified","currentSlide","isNextSlideNotQualifiedMessage","originalSubmitForm","hideElements","showElements","originalCheckRequiredInputs","newCheckRequiredInputs","$formBlock","$back","$next"],"mappings":"AAAO,MAAMA,GAAU;AAAA,EACtB,YAAYC,GAAI;AACf,QAAIA,EAAG,QAAQ;AACd,aAAOD,GAAU,KAAKC,EAAG,QAAQ,YAAY;AAG9C,SAAK,MAAM,KAAK,UAChBD,GAAU,KAAK,KAAK,GAAG,IAAI,MAC3BC,EAAG,QAAQ,eAAe,KAAK,KAE/B,KAAK,KAAKA,GAEV,KAAK,OAAOA,EAAG,cAAc,MAAM,GACnC,KAAK,cAAcA,EAAG,cAAc,cAAc,GAClD,KAAK,WAAWA,EAAG,cAAc,cAAc,GAE/C,KAAK,eAAeA,EAAG,cAAc,iBAAiB,GACtD,KAAK,aAAa,KAAK,iBACvB,KAAK,cAAc,KAAK,aAAa,QAAQ,MAG7C,KAAK,uBAAuB,IAE5B,KAAK,kBAAkB,IAEvB,KAAK,gBAAgB,IAErB,KAAK,kBAAkB,IAEvB,KAAK,GAAG,iBAAiB,UAAU,CAACC,MAAM,KAAK,OAAOA,CAAC,CAAC;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYD,IAAI,eAAeC,GAAI;AACtB,SAAK,qBAAqB,KAAKA,CAAE;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcD,IAAI,UAAUA,GAAI;AACjB,SAAK,gBAAgB,KAAKA,CAAE;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeD,IAAI,QAAQA,GAAI;AACf,SAAK,cAAc,KAAKA,CAAE;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWD,IAAI,QAAQA,GAAI;AACf,SAAK,gBAAgB,KAAKA,CAAE;AAAA,EAC5B;AAAA,EAED,MAAM,OAAOC,GAAO;AACnB,IAAAA,EAAM,eAAc;AAEpB,QAAI;AAEH,UAAI,CADiB,KAAK,qBAAqB,OAAO,CAACC,GAAMC,MAAYA,EAAO,KAAMD,GAAM,EAAI;AAC7E;AAEnB,WAAK,SAAS,SAAS;AAEvB,YAAME,IAAU,MAAM,KAAK,iBACrBC,IAAM,KAAK,KAAK,QAGhBC,IAAU;AAAA,QACf,QAHc,KAAK,KAAK;AAAA,QAIxB,SAAS;AAAA,UACR,gBAAgB;AAAA,QAChB;AAAA,QACD,MAAM,KAAK,UAAUF,CAAO;AAAA,MAChC;AAIG,OAFiB,MAAM,MAAMC,GAAKC,CAAO,GAE5B,KACZ,KAAK,SAAS,SAAS,IAEvB,KAAK,SAAS,OAAO;AAAA,IAEtB,SAAQC,GAAK;AACb,cAAQ,MAAMA,CAAG,GACjB,KAAK,SAAS,OAAO;AAAA,IACrB;AAAA,EACD;AAAA,EAED,MAAM,gBAAgB;AACrB,QAAIH,IAAU,KAAK,gBAAgB,OAAO,CAACA,GAASD,MAAYA,EAAQC,CAAO,GAAG,CAAE,CAAA;AAEpF,UAAMI,IAAgB,KAAK,SAAS,OAAO,CAACV,MAAOA,EAAG,SAAS,EAAE;AACjE,eAAWW,KAASD,GAAe;AAClC,YAAME,IAAOD,EAAM;AACnB,UAAIE,IAAQF,EAAM;AAElB,iBAAWG,KAAgB,KAAK;AAC/B,QAAAD,IAAQ,MAAMC,EAAaH,GAAOE,CAAK;AAGxC,UAAIA,MAAU,SAIVF,EAAM,SAAS,eAClBE,IAAQF,EAAM,UAGX,EAAAA,EAAM,SAAS,WAAW,CAACA,EAAM,WAIrC;AAAA,YAAI,OAAOL,EAAQM,CAAI,IAAM,KAAa;AACzC,UAAK,MAAM,QAAQN,EAAQM,CAAI,CAAC,MAC/BN,EAAQM,CAAI,IAAI,CAACN,EAAQM,CAAI,CAAC,IAG/BN,EAAQM,CAAI,EAAE,KAAKC,CAAK;AACxB;AAAA,QACA;AAED,QAAAP,EAAQM,CAAI,IAAIC;AAAA;AAAA,IAChB;AAED,WAAOP;AAAA,EACP;AAAA;AAAA;AAAA;AAAA,EAKD,SAASS,GAAO;AACf,YAAQA,GAAK;AAAA,MACZ,KAAK;AACJ,aAAK,KAAK,MAAM,UAAU,MAC1B,KAAK,YAAY,MAAM,UAAU,MACjC,KAAK,SAAS,MAAM,UAAU,MAC9B,KAAK,SAAS,QAAQ,CAACf,MAAQA,EAAG,WAAW,EAAK,GAClD,KAAK,cAAc,KAAK,WAAW;AACnC;AAAA,MACD,KAAK;AACJ,aAAK,KAAK,MAAM,UAAU,QAC1B,KAAK,YAAY,MAAM,UAAU,SACjC,KAAK,SAAS,MAAM,UAAU,QAC9B,KAAK,SAAS,QAAQ,CAACA,MAAQA,EAAG,WAAW,EAAM,GACnD,KAAK,cAAc,KAAK,UAAU,GAElC,KAAK,KAAK,SACV,KAAK,YAAY,eAAe;AAAA,UAC/B,UAAU;AAAA,UACV,OAAO;AAAA,QACZ,CAAK;AACD;AAAA,MACD,KAAK;AACJ,aAAK,KAAK,MAAM,UAAU,MAC1B,KAAK,YAAY,MAAM,UAAU,MACjC,KAAK,SAAS,MAAM,UAAU,SAC9B,KAAK,SAAS,QAAQ,CAACA,MAAQA,EAAG,WAAW,EAAM,GACnD,KAAK,cAAc,KAAK,UAAU;AAClC;AAAA,IAGD;AAED,SAAK,gBAAgB,QAAQ,CAACK,MAAYA,EAAQU,CAAK,CAAC;AAAA,EACxD;AAAA,EAED,gBAAgB;AACf,WAAI,KAAK,wBAAwB,mBACzB,KAAK,aAAa,QAElB,KAAK,aAAa;AAAA,EAE1B;AAAA,EAED,cAAcF,GAAO;AACpB,IAAI,KAAK,wBAAwB,mBAChC,KAAK,aAAa,QAAQA,IAE1B,KAAK,aAAa,cAAcA;AAAA,EAEjC;AAAA,EAED,IAAI,WAAW;AACd,WAAO,MAAM,KAAK,KAAK,KAAK,QAAQ;AAAA,EACpC;AACF;AAEAd,GAAU,OAAO,CAAA;AAEjB,SAAS,iBAAiB,oBAAoB,MAAM;AACnD,QAAM,KAAK,SAAS,iBAAiB,gBAAgB,CAAC,EAAE,QAAQ,CAACC,MAAO,IAAID,GAAUC,CAAE,CAAC;AAC1F,CAAC;ACrOD;AAAA;AAAA;AAAA;AAAA;AAQA,MAAMgB,KAAS,CAAAH,MAASA,aAAiB,aAEnCI,KAAc,CAACC,GAAcC,IAAU,CAAA,GAAIC,IAAU,CAAA,MAAO;AAE9D,QAAML,IAAQ;AAAA,IACV,GAAGG;AAAA,EACX,GAGUG,IAAc,CAAA,GACdC,IAAgB,CAAA,GAGhBC,IAAW,OAAO,EAAE,GAAGR,EAAO,IAG9BS,IAAqB,MAAM;AAE7B,UAAMC,IAAQ,CAAC,GAAGJ,CAAW;AAG7B,WAAAA,EAAY,SAAS,GAEdI;AAAA,EACf,GAGUC,IAAuB,MAAM;AAE/B,UAAMD,IAAQ,CAAC,GAAGH,CAAa;AAG/B,IAAAA,EAAc,SAAS,GAGvBG,EAAM,QAAQ,CAAC,EAAE,MAAAE,GAAM,MAAAC,EAAI,MAAO;AAC9B,MAAAC,EAASF,GAAMC,CAAI;AAAA,IAC/B,CAAS;AAAA,EACT,GAGUC,IAAW,CAACF,GAAMC,GAAME,MAAe;AAEzC,QAAIA,KAAc,CAAC,SAAS,QAAQ;AAChC,MAAAR,EAAc,KAAK,EAAE,MAAAK,GAAM,MAAAC,EAAM,CAAA;AACjC;AAAA,IACH;AAGD,IAAIG,EAAeJ,CAAI,KACnBI,EAAeJ,CAAI,EAAEC,CAAI,GAI7BP,EAAY,KAAK;AAAA,MACb,MAAAM;AAAA,MACA,MAAAC;AAAA,IACZ,CAAS;AAAA,EACT,GAEUI,IAAQ,CAACC,MAAQC,MAAUC,EAAaF,CAAG,IAAIE,EAAaF,CAAG,EAAE,GAAGC,CAAI,IAAI,MAE5EE,IAAM;AAAA,IACR,UAAAb;AAAA,IACA,oBAAAC;AAAA,IACA,sBAAAE;AAAA,IACA,UAAAG;AAAA,IACA,OAAAG;AAAA,EACR;AAEI,MAAIG,IAAe,CAAA;AACnB,EAAAhB,EAAQ,QAAQ,CAAAa,MAAS;AACrB,IAAAG,IAAe;AAAA,MACX,GAAGH,EAAMjB,CAAK;AAAA,MACd,GAAGoB;AAAA,IACf;AAAA,EACA,CAAK;AAED,MAAIJ,IAAiB,CAAA;AACrB,SAAAX,EAAQ,QAAQ,CAAAiB,MAAU;AACtB,IAAAN,IAAiB;AAAA,MACb,GAAGM,EAAOR,GAAUG,GAAOjB,CAAK;AAAA,MAChC,GAAGgB;AAAA,IACf;AAAA,EACA,CAAK,GAEMK;AACX,GAEME,KAAiB,CAACC,GAAKC,GAAUC,MAAe;AAClD,MAAI,OAAOA,KAAe,YAAY;AAClC,IAAAF,EAAIC,CAAQ,IAAIC;AAChB;AAAA,EACH;AACD,SAAO,eAAeF,GAAKC,GAAU,EAAE,GAAGC,EAAU,CAAE;AAC1D,GAEMC,IAAQ,CAACH,GAAKI,MAAO;AACvB,aAAWC,KAAOL;AACd,IAAKA,EAAI,eAAeK,CAAG,KAI3BD,EAAGC,GAAKL,EAAIK,CAAG,CAAC;AAExB,GAEMC,KAAe,CAAAJ,MAAc;AAC/B,QAAMF,IAAM,CAAA;AACZ,SAAAG,EAAMD,GAAY,CAAAD,MAAY;AAC1B,IAAAF,GAAeC,GAAKC,GAAUC,EAAWD,CAAQ,CAAC;AAAA,EAC1D,CAAK,GACMD;AACX,GAEMO,KAAO,CAACC,GAAMnC,GAAMC,IAAQ,SAAS;AACvC,MAAIA,MAAU;AACV,WAAOkC,EAAK,aAAanC,CAAI,KAAKmC,EAAK,aAAanC,CAAI;AAE5D,EAAAmC,EAAK,aAAanC,GAAMC,CAAK;AACjC,GAEMmC,KAAK,8BACLC,KAAc,CAAC,OAAO,MAAM,GAE5BC,KAAe,CAAAC,MAAOF,GAAY,SAASE,CAAG,GAE9CC,KAAgB,CAACD,GAAKE,GAAWC,IAAa,CAAA,MAAO;AACvD,EAAI,OAAOD,KAAc,aACrBC,IAAaD,GACbA,IAAY;AAEhB,QAAME,IAAUL,GAAaC,CAAG,IAC1B,SAAS,gBAAgBH,IAAIG,CAAG,IAChC,SAAS,cAAcA,CAAG;AAChC,SAAIE,MACIH,GAAaC,CAAG,IAChBL,GAAKS,GAAS,SAASF,CAAS,IAEhCE,EAAQ,YAAYF,IAG5BX,EAAMY,GAAY,CAAC1C,GAAMC,MAAU;AAC/B,IAAAiC,GAAKS,GAAS3C,GAAMC,CAAK;AAAA,EACjC,CAAK,GACM0C;AACX,GAEMC,KAAc,CAAAC,MAAU,CAACC,GAAOC,MAAU;AAC5C,EAAI,OAAOA,IAAU,OAAeF,EAAO,SAASE,CAAK,IACrDF,EAAO,aAAaC,GAAOD,EAAO,SAASE,CAAK,CAAC,IAEjDF,EAAO,YAAYC,CAAK;AAEhC,GAEME,KAAkB,CAACH,GAAQI,MAAe,CAACC,GAAMH,OAC/C,OAAOA,IAAU,MACjBE,EAAW,OAAOF,GAAO,GAAGG,CAAI,IAEhCD,EAAW,KAAKC,CAAI,GAGjBA,IAGLC,KAAkB,CAACN,GAAQI,MAAe,CAAAC,OAE5CD,EAAW,OAAOA,EAAW,QAAQC,CAAI,GAAG,CAAC,GAGzCA,EAAK,QAAQ,cACbL,EAAO,YAAYK,EAAK,OAAO,GAG5BA,IAGLE,KACF,OAAO,SAAW,OAAe,OAAO,OAAO,WAAa,KAC1DC,KAAY,MAAMD,IAElBE,KAAcD,GAAW,IAAGb,GAAc,KAAK,IAAI,CAAA,GACnDe,KACF,cAAcD,KAAc,CAAAlE,MAAMA,EAAG,SAAS,SAAS,CAAAA,MAAMA,EAAG,WAAW,QAEzEoE,KAAc,CAACC,GAAaR,GAAYS,GAAQC,MAAU;AAC5D,QAAMC,IAAOF,EAAO,CAAC,KAAKD,EAAY,MAChCI,IAAMH,EAAO,CAAC,KAAKD,EAAY,KAC/BK,IAAQF,IAAOH,EAAY,OAC3BM,IAASF,IAAMJ,EAAY,UAAUE,EAAM,CAAC,KAAK,IAEjDK,IAAO;AAAA;AAAA,IAET,SAAS;AAAA,MACL,GAAGP;AAAA,IACN;AAAA;AAAA,IAGD,OAAO;AAAA,MACH,MAAMA,EAAY;AAAA,MAClB,KAAKA,EAAY;AAAA,MACjB,OAAOA,EAAY;AAAA,MACnB,QAAQA,EAAY;AAAA,IACvB;AAAA;AAAA;AAAA,IAID,OAAO;AAAA,MACH,MAAAG;AAAA,MACA,KAAAC;AAAA,MACA,OAAAC;AAAA,MACA,QAAAC;AAAA,IACH;AAAA,EACT;AAGI,SAAAd,EACK,OAAO,CAAAgB,MAAa,CAACA,EAAU,cAAa,CAAE,EAC9C,IAAI,CAAAA,MAAaA,EAAU,IAAI,EAC/B,QAAQ,CAAAC,MAAiB;AACtB,IAAAC,GAAWH,EAAK,OAAO,EAAE,GAAGE,EAAc,MAAK,CAAE,GACjDC,GAAWH,EAAK,OAAO,EAAE,GAAGE,EAAc,MAAK,CAAE;AAAA,EAC7D,CAAS,GAGLE,GAAkBJ,EAAK,KAAK,GAG5BA,EAAK,MAAM,UAAUA,EAAK,QAAQ,cAClCA,EAAK,MAAM,SAASA,EAAK,QAAQ,aAGjCI,GAAkBJ,EAAK,KAAK,GAErBA;AACX,GAEMG,KAAa,CAACtB,GAAQC,MAAU;AAElC,EAAAA,EAAM,OAAOD,EAAO,KACpBC,EAAM,SAASD,EAAO,MACtBC,EAAM,UAAUD,EAAO,KACvBC,EAAM,QAAQD,EAAO,MAEjBC,EAAM,SAASD,EAAO,WACtBA,EAAO,SAASC,EAAM,SAGtBA,EAAM,QAAQD,EAAO,UACrBA,EAAO,QAAQC,EAAM;AAE7B,GAEMsB,KAAoB,CAAAJ,MAAQ;AAC9B,EAAAA,EAAK,QAAQA,EAAK,QAAQA,EAAK,MAC/BA,EAAK,SAASA,EAAK,SAASA,EAAK;AACrC,GAEMK,KAAW,CAAApE,MAAS,OAAOA,KAAU,UAUrCqE,KAAW,CAACC,GAAUC,GAAaC,GAAUC,IAAc,SACtD,KAAK,IAAIH,IAAWC,CAAW,IAAIE,KAAe,KAAK,IAAID,CAAQ,IAAIC,GAM5EC;AAAA;AAAA,EAEF,CAAC,EAAE,WAAAC,IAAY,KAAK,SAAAC,IAAU,MAAM,MAAAC,IAAO,GAAE,IAAK,CAAE,MAEhD;AACI,QAAIC,IAAS,MACTR,IAAW,MACXE,IAAW,GACXO,IAAU;AA6Ed,UAAMxD,IAAMS,GAAa;AAAA,MACrB,aA3EgB,CAACgD,GAAIC,MAAmB;AAExC,YAAIF;AAAS;AAGb,YAAI,EAAEX,GAASU,CAAM,KAAKV,GAASE,CAAQ,IAAI;AAC3C,UAAAS,IAAU,IACVP,IAAW;AACX;AAAA,QACH;AAGD,cAAMU,IAAI,EAAEZ,IAAWQ,KAAUH;AAGjC,QAAAH,KAAYU,IAAIL,GAGhBP,KAAYE,GAGZA,KAAYI,GAGRP,GAASC,GAAUQ,GAAQN,CAAQ,KAAKS,KACxCX,IAAWQ,GACXN,IAAW,GACXO,IAAU,IAGVxD,EAAI,SAAS+C,CAAQ,GACrB/C,EAAI,WAAW+C,CAAQ,KAGvB/C,EAAI,SAAS+C,CAAQ;AAAA,MAEzC;AAAA,MAwCgB,QAAQ;AAAA,QACJ,KAnCU,CAAAtE,MAAS;AAgBvB,cAdIoE,GAASpE,CAAK,KAAK,CAACoE,GAASE,CAAQ,MACrCA,IAAWtE,IAIX8E,MAAW,SACXA,IAAS9E,GACTsE,IAAWtE,IAIf8E,IAAS9E,GAGLsE,MAAaQ,KAAU,OAAOA,IAAW,KAAa;AAEtD,YAAAC,IAAU,IACVP,IAAW,GAGXjD,EAAI,SAAS+C,CAAQ,GACrB/C,EAAI,WAAW+C,CAAQ;AAEvB;AAAA,UACH;AAED,UAAAS,IAAU;AAAA,QAC1B;AAAA,QAOoB,KAAK,MAAMD;AAAA,MACd;AAAA,MACD,SAAS;AAAA,QACL,KAAK,MAAMC;AAAA,MACd;AAAA,MACD,UAAU,CAAA/E,MAAS;AAAA,MAAE;AAAA,MACrB,YAAY,CAAAA,MAAS;AAAA,MAAE;AAAA,IACvC,CAAa;AAED,WAAOuB;AAAA,EACnB;AAAA,GAGM4D,KAAgB,CAAAC,MAAMA,IAAI,MAAM,IAAIA,IAAIA,IAAI,MAAM,IAAI,IAAIA,KAAKA,GAE/DC;AAAA;AAAA,EAEF,CAAC,EAAE,UAAAC,IAAW,KAAK,QAAAC,IAASJ,IAAe,OAAAK,IAAQ,EAAC,IAAK,CAAE,MAEvD;AACI,QAAIC,IAAQ,MACRL,GACAM,GACAX,IAAU,IACVY,IAAU,IACVb,IAAS;AA0Bb,UAAMvD,IAAMS,GAAa;AAAA,MACrB,aAzBgB,CAACgD,GAAIC,MAAmB;AACxC,QAAIF,KAAWD,MAAW,SAEtBW,MAAU,SACVA,IAAQT,IAGR,EAAAA,IAAKS,IAAQD,OAEjBJ,IAAIJ,IAAKS,IAAQD,GAEbJ,KAAKE,KAAYL,KACjBG,IAAI,GACJM,IAAIC,IAAU,IAAI,GAClBpE,EAAI,SAASmE,IAAIZ,CAAM,GACvBvD,EAAI,WAAWmE,IAAIZ,CAAM,GACzBC,IAAU,OAEVW,IAAIN,IAAIE,GACR/D,EAAI,UAAU6D,KAAK,IAAIG,EAAOI,IAAU,IAAID,IAAIA,CAAC,IAAI,KAAKZ,CAAM;AAAA,MAEpF;AAAA,MAKgB,QAAQ;AAAA,QACJ,KAAK,MAAOa,IAAU,IAAIb;AAAA,QAC1B,KAAK,CAAA9E,MAAS;AAEV,cAAI8E,MAAW,MAAM;AACjB,YAAAA,IAAS9E,GACTuB,EAAI,SAASvB,CAAK,GAClBuB,EAAI,WAAWvB,CAAK;AACpB;AAAA,UACH;AAGD,UAAIA,IAAQ8E,KACRA,IAAS,GACTa,IAAU,OAGVA,IAAU,IACVb,IAAS9E,IAIb+E,IAAU,IACVU,IAAQ;AAAA,QACX;AAAA,MACJ;AAAA,MACD,SAAS;AAAA,QACL,KAAK,MAAMV;AAAA,MACd;AAAA,MACD,UAAU,CAAA/E,MAAS;AAAA,MAAE;AAAA,MACrB,YAAY,CAAAA,MAAS;AAAA,MAAE;AAAA,IACvC,CAAa;AAED,WAAOuB;AAAA,EACnB;AAAA,GAEMqE,KAAW;AAAA,EACb,QAAAlB;AAAA,EACA,OAAAW;AACJ,GAOMQ,KAAiB,CAACjE,GAAYkE,GAAUnE,MAAa;AAGvD,QAAMoE,IACFnE,EAAWkE,CAAQ,KAAK,OAAOlE,EAAWkE,CAAQ,EAAEnE,CAAQ,KAAM,WAC5DC,EAAWkE,CAAQ,EAAEnE,CAAQ,IAC7BC,EAAWkE,CAAQ,KAAKlE,GAE5Bd,IAAO,OAAOiF,KAAQ,WAAWA,IAAMA,EAAI,MAC3CC,IAAQ,OAAOD,KAAQ,WAAW,EAAE,GAAGA,EAAK,IAAG;AAErD,SAAOH,GAAS9E,CAAI,IAAI8E,GAAS9E,CAAI,EAAEkF,CAAK,IAAI;AACpD,GAEMC,KAAY,CAACC,GAAMxE,GAAKsE,GAAOG,IAAY,OAAU;AACvD,EAAAzE,IAAM,MAAM,QAAQA,CAAG,IAAIA,IAAM,CAACA,CAAG,GACrCA,EAAI,QAAQ,CAAA0E,MAAK;AACb,IAAAF,EAAK,QAAQ,CAAAnE,MAAO;AAChB,UAAIhC,IAAOgC,GACPsE,IAAS,MAAML,EAAMjE,CAAG,GACxBuE,IAAS,CAAAtG,MAAUgG,EAAMjE,CAAG,IAAI/B;AAQpC,MANI,OAAO+B,KAAQ,aACfhC,IAAOgC,EAAI,KACXsE,IAAStE,EAAI,UAAUsE,GACvBC,IAASvE,EAAI,UAAUuE,IAGvB,EAAAF,EAAErG,CAAI,KAAK,CAACoG,OAIhBC,EAAErG,CAAI,IAAI;AAAA,QACN,KAAKsG;AAAA,QACL,KAAKC;AAAA,MACrB;AAAA,IACA,CAAS;AAAA,EACT,CAAK;AACL,GAMMC,KAAa,CAAC,EAAE,aAAAC,GAAa,WAAAC,GAAW,iBAAAC,GAAiB,iBAAAC,EAAe,MAAO;AAEjF,QAAMC,IAAe,EAAE,GAAGH,KAGpBF,IAAa,CAAA;AAGnB,SAAA1E,EAAM2E,GAAa,CAAC7E,GAAUkF,MAAc;AACxC,UAAMjB,IAAWC,GAAegB,CAAS;AACzC,QAAI,CAACjB;AACD;AAIJ,IAAAA,EAAS,WAAW,CAAA5F,MAAS;AACzB,MAAAyG,EAAU9E,CAAQ,IAAI3B;AAAA,IAClC,GAGQ4F,EAAS,SAASgB,EAAajF,CAAQ,GAiBvCsE,GAAU,CAdG;AAAA,MACT,KAAKtE;AAAA,MACL,QAAQ,CAAA3B,MAAS;AAEb,QAAI4F,EAAS,WAAW5F,MAIxB4F,EAAS,SAAS5F;AAAA,MACrB;AAAA,MACD,QAAQ,MAAMyG,EAAU9E,CAAQ;AAAA,IAC5C,CAGuB,GAAG,CAAC+E,GAAiBC,CAAe,GAAGF,GAAW,EAAI,GAGrEF,EAAW,KAAKX,CAAQ;AAAA,EAChC,CAAK,GAGM;AAAA,IACH,OAAO,CAAAZ,MAAM;AACT,UAAIC,IAAiB,SAAS,QAC1BF,IAAU;AACd,aAAAwB,EAAW,QAAQ,CAAAM,MAAa;AAC5B,QAAKA,EAAU,YAAS9B,IAAU,KAClC8B,EAAU,YAAY7B,GAAIC,CAAc;AAAA,MACxD,CAAa,GACMF;AAAA,IACV;AAAA,IACD,SAAS,MAAM;AAAA,IAAE;AAAA,EACzB;AACA,GAEM+B,KAAW,CAAApE,MAAW,CAAC5B,GAAMzB,MAAO;AACtC,EAAAqD,EAAQ,iBAAiB5B,GAAMzB,CAAE;AACrC,GAEM0H,KAAc,CAAArE,MAAW,CAAC5B,GAAMzB,MAAO;AACzC,EAAAqD,EAAQ,oBAAoB5B,GAAMzB,CAAE;AACxC,GAGM2H,KAAY,CAAC;AAAA,EACf,aAAAR;AAAA,EACA,WAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,WAAAM;AAAA,EACA,MAAAhE;AACJ,MAAM;AACF,QAAMiE,IAAS,CAAA,GAETC,IAAML,GAAS7D,EAAK,OAAO,GAC3BmE,IAASL,GAAY9D,EAAK,OAAO;AAEvC,SAAA0D,EAAgB,KAAK,CAAC7F,GAAMzB,MAAO;AAC/B,IAAA6H,EAAO,KAAK;AAAA,MACR,MAAApG;AAAA,MACA,IAAAzB;AAAA,IACZ,CAAS,GACD8H,EAAIrG,GAAMzB,CAAE;AAAA,EACpB,GAEIsH,EAAgB,MAAM,CAAC7F,GAAMzB,MAAO;AAChC,IAAA6H,EAAO,OAAOA,EAAO,UAAU,CAAA5H,MAASA,EAAM,SAASwB,KAAQxB,EAAM,OAAOD,CAAE,GAAG,CAAC,GAClF+H,EAAOtG,GAAMzB,CAAE;AAAA,EACvB,GAEW;AAAA,IACH,OAAO,MAEI;AAAA,IAEX,SAAS,MAAM;AACX,MAAA6H,EAAO,QAAQ,CAAA5H,MAAS;AACpB,QAAA8H,EAAO9H,EAAM,MAAMA,EAAM,EAAE;AAAA,MAC3C,CAAa;AAAA,IACJ;AAAA,EACT;AACA,GAIM+H,KAAO,CAAC,EAAE,aAAAb,GAAa,WAAAC,GAAW,iBAAAE,EAAe,MAAO;AAC1D,EAAAV,GAAUO,GAAaG,GAAiBF,CAAS;AACrD,GAEMa,KAAY,CAAAtH,MAASA,KAAS,MAO9BuH,KAAW;AAAA,EACb,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AACb,GAEMC,KAAS,CAAC,EAAE,aAAAhB,GAAa,WAAAC,GAAW,iBAAAC,GAAiB,iBAAAC,GAAiB,MAAA1D,QAAW;AAEnF,QAAM2D,IAAe,EAAE,GAAGH,KAGpBgB,IAAe,CAAA;AAGrB,EAAAxB,GAAUO,GAAa,CAACE,GAAiBC,CAAe,GAAGF,CAAS;AAGpE,QAAMiB,IAAY,MAAM,CAACjB,EAAU,cAAiB,GAAGA,EAAU,cAAiB,CAAC,GAC7EkB,IAAW,MAAM,CAAClB,EAAU,UAAa,GAAGA,EAAU,UAAa,CAAC,GACpEmB,IAAU,MACZ3E,EAAK,OAAOM,GAAYN,EAAK,MAAMA,EAAK,YAAYyE,EAAW,GAAEC,EAAU,CAAA,IAAI;AACnF,SAAAjB,EAAgB,OAAO,EAAE,KAAKkB,EAAO,GACrCjB,EAAgB,OAAO,EAAE,KAAKiB,EAAO,GAGrCpB,EAAY,QAAQ,CAAAzE,MAAO;AACvB,IAAA0E,EAAU1E,CAAG,IACT,OAAO6E,EAAa7E,CAAG,IAAM,MAAcwF,GAASxF,CAAG,IAAI6E,EAAa7E,CAAG;AAAA,EACvF,CAAK,GAGM;AAAA,IACH,OAAO,MAAM;AAET,UAAK8F,GAAiBJ,GAAchB,CAAS;AAK7C,eAAAqB,GAAY7E,EAAK,SAASwD,CAAS,GAGnC,OAAO,OAAOgB,GAAc,EAAE,GAAGhB,EAAW,CAAA,GAGrC;AAAA,IACV;AAAA,IACD,SAAS,MAAM;AAAA,IAAE;AAAA,EACzB;AACA,GAEMoB,KAAmB,CAACJ,GAAcM,MAAa;AAEjD,MAAI,OAAO,KAAKN,CAAY,EAAE,WAAW,OAAO,KAAKM,CAAQ,EAAE;AAC3D,WAAO;AAIX,aAAWC,KAAQD;AACf,QAAIA,EAASC,CAAI,MAAMP,EAAaO,CAAI;AACpC,aAAO;AAIf,SAAO;AACX,GAEMF,KAAc,CAChBpF,GACA;AAAA,EACI,SAAAuF;AAAA,EACA,aAAAC;AAAA,EACA,YAAAC;AAAA,EACA,YAAAC;AAAA,EACA,QAAAC;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,OAAAC;AAAA,EACA,QAAAC;AACH,MACA;AACD,MAAIC,IAAa,IACbtB,IAAS;AAGb,GAAIF,GAAUoB,CAAO,KAAKpB,GAAUqB,CAAO,OACvCnB,KAAU,qBAAqBkB,KAAW,CAAC,MAAMC,KAAW,CAAC,QAK7DrB,GAAUY,CAAW,MACrBY,KAAc,eAAeZ,CAAW,UAIxCZ,GAAUa,CAAU,KAAKb,GAAUc,CAAU,OAC7CU,KAAc,eAAeX,KAAc,CAAC,OAAOC,KAAc,CAAC,aAIlEd,GAAUe,CAAM,KAAKf,GAAUgB,CAAM,OACrCQ,KAAc,WAAWxB,GAAUe,CAAM,IAAIA,IAAS,CAAC,KACnDf,GAAUgB,CAAM,IAAIA,IAAS,CAChC,UAIDhB,GAAUmB,CAAO,MACjBK,KAAc,WAAWL,CAAO,UAGhCnB,GAAUiB,CAAO,MACjBO,KAAc,WAAWP,CAAO,UAGhCjB,GAAUkB,CAAO,MACjBM,KAAc,WAAWN,CAAO,UAIhCM,EAAW,WACXtB,KAAU,aAAasB,CAAU,MAIjCxB,GAAUW,CAAO,MACjBT,KAAU,WAAWS,CAAO,KAGxBA,MAAY,MACZT,KAAU,uBAIVS,IAAU,MACVT,KAAU,0BAKdF,GAAUuB,CAAM,MAChBrB,KAAU,UAAUqB,CAAM,QAI1BvB,GAAUsB,CAAK,MACfpB,KAAU,SAASoB,CAAK;AAI5B,QAAMG,IAAsBrG,EAAQ,uBAAuB;AAG3D,GAAI8E,EAAO,WAAWuB,EAAoB,UAAUvB,MAAWuB,OAC3DrG,EAAQ,MAAM,UAAU8E,GAGxB9E,EAAQ,sBAAsB8E;AAEtC,GAEMwB,KAAS;AAAA,EACX,QAAAxB;AAAA,EACA,WAAAR;AAAA,EACA,YAAAT;AAAA,EACA,MAAAc;AACJ,GAEM4B,KAAa,CAAClF,IAAO,CAAE,GAAErB,IAAU,CAAE,GAAEwG,IAAQ,QAC5CxG,EAAQ,qBACTqB,EAAK,aAAa,SAASmF,EAAM,YAAY,EAAE,KAAK,GACpDnF,EAAK,YAAY,SAASmF,EAAM,WAAW,EAAE,KAAK,GAClDnF,EAAK,cAAc,SAASmF,EAAM,aAAa,EAAE,KAAK,GACtDnF,EAAK,eAAe,SAASmF,EAAM,cAAc,EAAE,KAAK,GACxDnF,EAAK,aAAa,SAASmF,EAAM,YAAY,EAAE,KAAK,GACpDxG,EAAQ,mBAAmB,KAG/BqB,EAAK,OAAOrB,EAAQ,cAAc,GAClCqB,EAAK,MAAMrB,EAAQ,aAAa,GAChCqB,EAAK,QAAQrB,EAAQ,eAAe,GACpCqB,EAAK,SAASrB,EAAQ,gBAAgB,GAEtCqB,EAAK,QAAQA,EAAK,OAAOA,EAAK,OAC9BA,EAAK,SAASA,EAAK,MAAMA,EAAK,QAE9BA,EAAK,YAAYrB,EAAQ,WAEzBqB,EAAK,SAASrB,EAAQ,iBAAiB,MAEhCqB,IAGLoF;AAAA;AAAA,EAEF,CAAC;AAAA;AAAA,IAEG,KAAA7G,IAAM;AAAA,IACN,MAAAvC,IAAO;AAAA,IACP,YAAA0C,IAAa,CAAE;AAAA;AAAA,IAGf,MAAA2G,IAAO,MAAM;AAAA,IAAE;AAAA,IACf,OAAAC,IAAQ,MAAM;AAAA,IAAE;AAAA,IAChB,QAAAC,IAAS,MAAM;AAAA,IAAE;AAAA,IACjB,SAAAC,IAAU,MAAM;AAAA,IAAE;AAAA;AAAA,IAGlB,4BAAAC,IAA6B,CAAC3G,GAAOtC,MAAYA;AAAA,IACjD,eAAAkJ,IAAgB,MAAM;AAAA,IAAE;AAAA,IACxB,cAAAC,IAAe,MAAM;AAAA,IAAE;AAAA;AAAA,IAGvB,YAAAC,IAAa;AAAA,IACb,kBAAAC,IAAmB;AAAA;AAAA,IAGnB,QAAAC,IAAS,CAAE;AAAA,EACd,IAAG,OAAO,CAEPC,GAEA9D,IAAQ,CAAE,MACT;AAED,UAAMtD,IAAUH,GAAcD,GAAK,aAAavC,CAAI,IAAI0C,CAAU,GAG5DyG,IAAQ,OAAO,iBAAiBxG,GAAS,IAAI,GAG7CqB,IAAOkF;AACb,QAAIc,IAAY,MAGZC,IAAY;AAGhB,UAAMhH,IAAa,CAAA,GAGbiH,IAAe,CAAA,GAGfC,IAAM,CAAA,GAGNhK,IAAQ,CAAA,GAGRiK,IAAU;AAAA,MACZd;AAAA;AAAA,IACZ,GAEce,IAAU;AAAA,MACZhB;AAAA;AAAA,IACZ,GAEciB,IAAa;AAAA,MACfd;AAAA;AAAA,IACZ,GAGce,IAAa,MAAM5H,GACnB6H,IAAgB,MAAMvH,EAAW,UACjCwH,KAAe,MAAMN,GACrBO,IAAkB,CAAAX,MAAS,CAAC7G,GAAM+C,OAAU/C,EAAK6G,GAAO9D,EAAK,GAC7D4B,IAAU,MACRmC,MAGJA,IAAYxG,GAAYQ,GAAMf,GAAY,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GACjD+G,IAELW,IAAW,MAAMxB,GAMjByB,IAAQ,MAAM;AAChB,MAAAZ,IAAY,MAGZ/G,EAAW,QAAQ,CAAAH,OAASA,GAAM,MAAO,CAAA,GAEpB,EAAE+G,KAAoB7F,EAAK,SAASA,EAAK,WAE1DkF,GAAWlF,GAAMrB,GAASwG,CAAK;AAInC,YAAM3H,IAAM,EAAE,MAAMqJ,IAAa,OAAA5E,GAAO,MAAAjC,EAAI;AAC5C,MAAAqG,EAAQ,QAAQ,CAAAS,OAAUA,GAAOtJ,CAAG,CAAC;AAAA,IACjD,GAMcuJ,IAAS,CAAC9F,GAAI+F,GAAcC,OAAmB;AAEjD,UAAIjG,KAAUgG,EAAa,WAAW;AAGtC,aAAAZ,EAAQ,QAAQ,CAAAc,OAAU;AAQtB,QAPsBA,GAAO;AAAA,UACzB,OAAAjF;AAAA,UACA,MAAM4E;AAAA,UACN,SAASG;AAAA,UACT,WAAW/F;AAAA,UACX,gBAAAgG;AAAA,QACpB,CAAiB,MACqB,OAClBjG,KAAU;AAAA,MAE9B,CAAa,GAGDkF,EAAa,QAAQ,CAAAiB,OAAS;AAG1B,QADqBA,GAAM,MAAMlG,CAAE,MACd,OACjBD,KAAU;AAAA,MAE9B,CAAa,GAGD/B,EACK,OAAO,CAAAH,OAAS,CAAC,CAACA,GAAM,QAAQ,UAAU,EAC1C,QAAQ,CAAAA,OAAS;AAOd,QALqBA,GAAM;AAAA,UACvBmC;AAAA,UACAwE,EAA2B3G,IAAOkI,CAAY;AAAA,UAC9CC;AAAA,QACxB,MAEwBjG,KAAU;AAAA,MAElC,CAAiB,GAGL/B,EAEK,QAAQ,CAACH,IAAOC,OAAU;AAEvB,QAAID,GAAM,QAAQ,eAKlB+H,GAAY,YAAY/H,GAAM,SAASC,EAAK,GAG5CD,GAAM,MAAK,GAGXA,GAAM;AAAA,UACFmC;AAAA,UACAwE,EAA2B3G,IAAOkI,CAAY;AAAA,UAC9CC;AAAA,QACxB,GAGoBjG,KAAU;AAAA,MAC9B,CAAiB,GAGLiF,IAAYjF,IAEZ2E,EAAa;AAAA,QACT,OAAA1D;AAAA,QACA,MAAM4E;AAAA,QACN,SAASG;AAAA,QACT,WAAW/F;AAAA,MAC3B,CAAa,GAGMD;AAAA,IACnB,GAEcoG,IAAW,MAAM;AACnB,MAAAlB,EAAa,QAAQ,CAAAiB,MAASA,EAAM,QAAS,CAAA,GAC7Cb,EAAW,QAAQ,CAAAe,MAAa;AAC5B,QAAAA,EAAU,EAAE,MAAMR,IAAa,OAAA5E,EAAO,CAAA;AAAA,MACtD,CAAa,GACDhD,EAAW,QAAQ,CAAAH,MAASA,EAAM,SAAU,CAAA;AAAA,IACxD,GAGcwI,IAAsB;AAAA,MACxB,SAAS;AAAA,QACL,KAAKf;AAAA,MACR;AAAA,MACD,OAAO;AAAA,QACH,KAAKI;AAAA,MACR;AAAA,MACD,YAAY;AAAA,QACR,KAAKH;AAAA,MACR;AAAA,IACb,GAGce,IAAwB;AAAA,MAC1B,GAAGD;AAAA,MACH,MAAM;AAAA,QACF,KAAKzD;AAAA,MACR;AAAA;AAAA,MAGD,KAAK;AAAA,QACD,KAAK4C;AAAA,MACR;AAAA;AAAA,MAGD,IAAI,CAAAe,MAAUxL,MAASwL;AAAA,MACvB,aAAa5I,GAAYD,CAAO;AAAA,MAChC,iBAAiB+H,EAAgBX,CAAK;AAAA,MACtC,UAAU,CAAA7G,OACND,EAAW,KAAKC,CAAI,GACbA;AAAA,MAEX,YAAY,CAAAA,MAAQ;AAChB,QAAAD,EAAW,OAAOA,EAAW,QAAQC,CAAI,GAAG,CAAC;AAAA,MAChD;AAAA,MACD,iBAAiBF,GAAgBL,GAASM,CAAU;AAAA,MACpD,iBAAiBE,GAAgBR,GAASM,CAAU;AAAA,MACpD,gBAAgB,CAAAiI,MAAUd,EAAQ,KAAKc,CAAM;AAAA,MAC7C,gBAAgB,CAAAJ,MAAUT,EAAQ,KAAKS,CAAM;AAAA,MAC7C,mBAAmB,CAAAO,MAAaf,EAAW,KAAKe,CAAS;AAAA,MACzD,kBAAkB,MAAO1I,EAAQ,mBAAmB;AAAA;AAAA,MAGpD,UAAUoH,EAAM;AAAA,MAChB,OAAOA,EAAM;AAAA,IACzB,GAGc0B,KAAwB;AAAA,MAC1B,SAAS;AAAA,QACL,KAAKlB;AAAA,MACR;AAAA,MACD,YAAY;AAAA,QACR,KAAKC;AAAA,MACR;AAAA,MACD,MAAM;AAAA,QACF,KAAK3C;AAAA,MACR;AAAA,MACD,SAAS;AAAA,QACL,KAAK,MAAMoC;AAAA,MACd;AAAA,MACD,eAAe,MAAML;AAAA,MACrB,OAAAgB;AAAA,MACA,QAAAG;AAAA,MACA,UAAAK;AAAA,IACZ,GAGcM,KAAqB;AAAA,MACvB,GAAGJ;AAAA,MACH,MAAM;AAAA,QACF,KAAK,MAAMtH;AAAA,MACd;AAAA,IACb;AAGQ,WAAO,KAAK8F,CAAM,EACb,KAAK,CAAC6B,GAAGC,MAEFD,MAAM,WACC,IACAC,MAAM,WACN,KAEJ,CACV,EACA,QAAQ,CAAA5J,MAAO;AACZ,YAAM6J,IAAW5C,GAAOjH,CAAG,EAAE;AAAA,QACzB,aAAa8H,EAAO9H,CAAG;AAAA,QACvB,WAAWiE;AAAA,QACX,WAAW9F;AAAA,QACX,iBAAiBoL;AAAA,QACjB,iBAAiBE;AAAA,QACjB,MAAMxJ,GAAayJ,EAAkB;AAAA,MACzD,CAAiB;AAED,MAAIG,KACA3B,EAAa,KAAK2B,CAAQ;AAAA,IAE9C,CAAa;AAGL,UAAMhB,KAAc5I,GAAasJ,CAAqB;AAGtD,IAAAhC,EAAO;AAAA,MACH,MAAMsB;AAAA,MACN,OAAA5E;AAAA,IACZ,CAAS;AAGD,UAAM6F,KAAavI,GAAcZ,CAAO;AACxC,WAAAM,EAAW,QAAQ,CAACH,GAAOC,MAAU;AACjC,MAAA8H,GAAY,YAAY/H,EAAM,SAASgJ,KAAa/I,CAAK;AAAA,IACrE,CAAS,GAGD2G,EAAcmB,EAAW,GAGlB5I,GAAawJ,EAAqB;AAAA,EACjD;AAAA,GAEMM,KAAgB,CAAC1C,GAAMC,GAAO0C,IAAM,OAAO;AAC7C,QAAMhM,IAAO;AAGb,MAAI,OAAOA,CAAI,GAAG;AACd,WAAOA,CAAI,EAAE,QAAQ,KAAKqJ,CAAI,GAC9B,OAAOrJ,CAAI,EAAE,QAAQ,KAAKsJ,CAAK;AAC/B;AAAA,EACH;AAED,SAAOtJ,CAAI,IAAI;AAAA,IACX,SAAS,CAACqJ,CAAI;AAAA,IACd,SAAS,CAACC,CAAK;AAAA,EACvB;AAEI,QAAM2C,IAAU,OAAOjM,CAAI,GAErBkM,IAAW,MAAOF;AACxB,MAAIG,IAAO,MACPC,IAAK,MACLC,IAAc,MACdC,IAAa;AAEjB,QAAMC,IAAe,MAAM;AACvB,IAAI,SAAS,UACTF,IAAc,MAAM,OAAO,WAAW,MAAMG,EAAK,YAAY,IAAG,CAAE,GAAGN,CAAQ,GAC7EI,IAAa,MAAM,OAAO,aAAaF,CAAE,MAEzCC,IAAc,MAAM,OAAO,sBAAsBG,CAAI,GACrDF,IAAa,MAAM,OAAO,qBAAqBF,CAAE;AAAA,EAE7D;AAEI,WAAS,iBAAiB,oBAAoB,MAAM;AAChD,IAAIE,KAAYA,KAChBC,KACAC,EAAK,YAAY,IAAG,CAAE;AAAA,EAC9B,CAAK;AAED,QAAMA,IAAO,CAAAvH,MAAM;AAEf,IAAAmH,IAAKC,EAAYG,CAAI,GAGhBL,MACDA,IAAOlH;AAGX,UAAMwH,IAAQxH,IAAKkH;AAEnB,IAAIM,KAASP,MAMbC,IAAOlH,IAAMwH,IAAQP,GAGrBD,EAAQ,QAAQ,QAAQ,CAAA5C,MAAQA,EAAM,CAAA,GACtC4C,EAAQ,QAAQ,QAAQ,CAAA3C,MAASA,EAAMrE,CAAE,CAAC;AAAA,EAClD;AAEI,SAAAsH,KACAC,EAAK,YAAY,IAAG,CAAE,GAEf;AAAA,IACH,OAAO,MAAM;AACT,MAAAF,EAAWF,CAAE;AAAA,IAChB;AAAA,EACT;AACA,GAEMM,KAAc,CAACC,GAAQrN,MAAO,CAAC,EAAE,MAAAsN,GAAM,OAAA3G,GAAO,SAAAzF,IAAU,CAAA,GAAI,WAAAqM,GAAW,gBAAA5B,EAAc,MAAO;AAC9F,EAAAzK,EACK,OAAO,CAAAiB,MAAUkL,EAAOlL,EAAO,IAAI,CAAC,EACpC;AAAA,IAAQ,CAAAA,MACLkL,EAAOlL,EAAO,IAAI,EAAE,EAAE,MAAAmL,GAAM,OAAA3G,GAAO,QAAQxE,EAAO,MAAM,WAAAoL,GAAW,gBAAA5B,EAAc,CAAE;AAAA,EAC/F,GACQ3L,KACAA,EAAG,EAAE,MAAAsN,GAAM,OAAA3G,GAAO,SAAAzF,GAAS,WAAAqM,GAAW,gBAAA5B,EAAc,CAAE;AAE9D,GAEM6B,KAAe,CAACC,GAASC,MAC3BA,EAAc,WAAW,aAAaD,GAASC,CAAa,GAE1DC,KAAc,CAACF,GAASC,MACnBA,EAAc,WAAW,aAAaD,GAASC,EAAc,WAAW,GAG7EE,KAAU,CAAAjN,MAAS,MAAM,QAAQA,CAAK,GAEtCkN,KAAU,CAAAlN,MAASA,KAAS,MAE5BmN,KAAO,CAAA/L,MAAOA,EAAI,QAElBgM,KAAW,CAAApN,MAAS,KAAKA,GAEzBqN,KAAU,CAACrN,GAAOsN,IAAW,QAC3BJ,GAAQlN,CAAK,IACN,KAEPiN,GAAQjN,CAAK,IACNA,IAEJoN,GAASpN,CAAK,EAChB,MAAMsN,CAAQ,EACd,IAAIH,EAAI,EACR,OAAO,CAAA/L,MAAOA,EAAI,MAAM,GAG3BmM,KAAY,CAAAvN,MAAS,OAAOA,KAAU,WAEtCwN,KAAY,CAAAxN,MAAUuN,GAAUvN,CAAK,IAAIA,IAAQA,MAAU,QAE3DyN,KAAW,CAAAzN,MAAS,OAAOA,KAAU,UAErC0N,KAAW,CAAA1N,MACboE,GAASpE,CAAK,IAAIA,IAAQyN,GAASzN,CAAK,IAAIoN,GAASpN,CAAK,EAAE,QAAQ,YAAY,EAAE,IAAI,GAEpF2N,KAAQ,CAAA3N,MAAS,SAAS0N,GAAS1N,CAAK,GAAG,EAAE,GAE7C4N,KAAU,CAAA5N,MAAS,WAAW0N,GAAS1N,CAAK,CAAC,GAE7C6N,KAAQ,CAAA7N,MAASoE,GAASpE,CAAK,KAAK,SAASA,CAAK,KAAK,KAAK,MAAMA,CAAK,MAAMA,GAE7E8N,KAAU,CAAC9N,GAAO+N,IAAO,QAAS;AAEpC,MAAIF,GAAM7N,CAAK;AACX,WAAOA;AAIX,MAAIgO,IAAkBZ,GAASpN,CAAK,EAAE,KAAI;AAG1C,SAAI,OAAO,KAAKgO,CAAe,KAC3BA,IAAkBA,EAAgB,QAAQ,QAAQ,EAAE,EAAE,QAC/CL,GAAMK,CAAe,IAAID,IAAOA,KAIvC,MAAM,KAAKC,CAAe,KAC1BA,IAAkBA,EAAgB,QAAQ,QAAQ,EAAE,EAAE,QAC/CL,GAAMK,CAAe,IAAID,KAG7BJ,GAAMK,CAAe;AAChC,GAEMC,KAAa,CAAAjO,MAAS,OAAOA,KAAU,YAEvCkO,KAAsB,CAAAC,MAAU;AAClC,MAAIjE,IAAM,MACNkE,IAASD,EAAO,MAAM,GAAG,GACzBE,IAAQ;AACZ,SAAQA,IAAQD,EAAO;AAEnB,QADAlE,IAAMA,EAAImE,CAAK,GACX,CAACnE;AACD,aAAO;AAGf,SAAOA;AACX,GAEMoE,KAAU;AAAA,EACZ,SAAS;AAAA,EACT,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AACV,GAEMC,KAAkB,CAAAC,MAAW;AAC/B,QAAMjN,IAAM,CAAA;AAEZ,SAAAA,EAAI,MAAMkM,GAASe,CAAO,IAAIA,IAAUA,EAAQ,OAAO,IACvDjN,EAAI,UAAUiN,EAAQ,UAAU,SAASA,EAAQ,SAAS,EAAE,IAAI,GAChEjN,EAAI,UAAUiN,EAAQ,UAAUA,EAAQ,UAAU,IAElD3M,EAAMyM,IAAS,CAAAvM,MAAO;AAClB,IAAAR,EAAIQ,CAAG,IAAI0M,GAAa1M,GAAKyM,EAAQzM,CAAG,GAAGuM,GAAQvM,CAAG,GAAGR,EAAI,SAASA,EAAI,OAAO;AAAA,EACzF,CAAK,GAGDA,EAAI,UAAUiN,EAAQ,WAAWf,GAASe,CAAO,KAAKA,EAAQ,MAAMjN,EAAI,UAAU,MAGlFA,EAAI,SAASiN,EAAQ,UAAU,MAG/B,OAAOjN,EAAI,SAEJA;AACX,GAEMkN,KAAe,CAAC1O,GAAMyO,GAASE,GAAQC,GAASC,MAAY;AAE9D,MAAIJ,MAAY;AACZ,WAAO;AAIX,MAAI,OAAOA,KAAY;AACnB,WAAOA;AAIX,QAAMhN,IAAS;AAAA,IACX,KAAKkN,MAAW,SAASA,MAAW,UAAU,IAAI3O,CAAI,MAAM;AAAA,IAC5D,QAAA2O;AAAA,IACA,SAAAE;AAAA,IACA,iBAAiB;AAAA,IACjB,SAAAD;AAAA,IACA,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,SAAS;AAAA,EACjB;AAGI,MAAIlB,GAASe,CAAO;AAChB,WAAAhN,EAAO,MAAMgN,GACNhN;AAOX,MAHA,OAAO,OAAOA,GAAQgN,CAAO,GAGzBf,GAASjM,EAAO,OAAO,GAAG;AAC1B,UAAMqN,IAAQrN,EAAO,QAAQ,MAAM,OAAO;AAC1C,IAAAA,EAAO,UAAU;AAAA,MACb,QAAQqN,EAAM,CAAC;AAAA,MACf,OAAOA,EAAM,CAAC;AAAA,IAC1B;AAAA,EACK;AAGD,SAAArN,EAAO,kBAAkBgM,GAAUhM,EAAO,eAAe,GAElDA;AACX,GAEMsN,KAAc,CAAA9O,MAASuO,GAAgBvO,CAAK,GAE5C+O,KAAS,CAAA/O,MAASA,MAAU,MAE5BgP,KAAW,CAAAhP,MAAS,OAAOA,KAAU,YAAYA,MAAU,MAE3DiP,KAAQ,CAAAjP,MAENgP,GAAShP,CAAK,KACdyN,GAASzN,EAAM,GAAG,KAClBgP,GAAShP,EAAM,OAAO,KACtBgP,GAAShP,EAAM,MAAM,KACrBgP,GAAShP,EAAM,OAAO,KACtBgP,GAAShP,EAAM,KAAK,GAItBkP,KAAU,CAAAlP,MACRiN,GAAQjN,CAAK,IACN,UAGP+O,GAAO/O,CAAK,IACL,SAGP6N,GAAM7N,CAAK,IACJ,QAGP,2BAA2B,KAAKA,CAAK,IAC9B,UAGPiP,GAAMjP,CAAK,IACJ,QAGJ,OAAOA,GAGZmP,KAAsB,CAAA/N,MACxBA,EACK,QAAQ,UAAU,IAAI,EACtB,QAAQ,UAAU,IAAI,EACtB,QAAQ,UAAU,IAAI,EACtB,QAAQ,UAAU,IAAI,EACtB,QAAQ,UAAU,IAAI,EACtB,QAAQ,UAAU,IAAI,GAEzBgO,KAAkB;AAAA,EACpB,OAAO/B;AAAA,EACP,SAASG;AAAA,EACT,KAAK,CAAAxN,MAAUkP,GAAQlP,CAAK,MAAM,UAAU8N,GAAQ9N,CAAK,IAAI2N,GAAM3N,CAAK;AAAA,EACxE,QAAQ4N;AAAA,EACR,OAAOA;AAAA,EACP,OAAOE;AAAA,EACP,QAAQ,CAAA9N,MAAUiO,GAAWjO,CAAK,IAAIA,IAAQoN,GAASpN,CAAK;AAAA,EAC5D,UAAU,CAAAA,MAASkO,GAAoBlO,CAAK;AAAA,EAC5C,WAAW8O;AAAA,EACX,QAAQ,CAAA9O,MAAS;AACb,QAAI;AACA,aAAO,KAAK,MAAMmP,GAAoBnP,CAAK,CAAC;AAAA,IAC/C,QAAW;AACR,aAAO;AAAA,IACV;AAAA,EACJ;AACL,GAEMqP,KAAY,CAACrP,GAAOc,MAASsO,GAAgBtO,CAAI,EAAEd,CAAK,GAExDsP,KAAiB,CAACC,GAAUC,GAAcC,MAAc;AAE1D,MAAIF,MAAaC;AACb,WAAOD;AAIX,MAAIG,IAAeR,GAAQK,CAAQ;AAGnC,MAAIG,MAAiBD,GAAW;AAE5B,UAAME,IAAiBN,GAAUE,GAAUE,CAAS;AAMpD,QAHAC,IAAeR,GAAQS,CAAc,GAGjCA,MAAmB;AACnB,YAAM,kDAAkD,MAAM,qBAAqBF,CAAS;AAE5F,IAAAF,IAAWI;AAAA,EAElB;AAGD,SAAOJ;AACX,GAEMK,KAAe,CAACJ,GAAcC,MAAc;AAC9C,MAAII,IAAeL;AACnB,SAAO;AAAA,IACH,YAAY;AAAA,IACZ,KAAK,MAAMK;AAAA,IACX,KAAK,CAAAN,MAAY;AACb,MAAAM,IAAeP,GAAeC,GAAUC,GAAcC,CAAS;AAAA,IAClE;AAAA,EACT;AACA,GAEMK,KAAgB,CAAAnQ,MAAW;AAC7B,QAAM+B,IAAM,CAAA;AACZ,SAAAG,EAAMlC,GAAS,CAAAqI,MAAQ;AACnB,UAAM+H,IAAmBpQ,EAAQqI,CAAI;AACrC,IAAAtG,EAAIsG,CAAI,IAAI4H,GAAaG,EAAiB,CAAC,GAAGA,EAAiB,CAAC,CAAC;AAAA,EACzE,CAAK,GACM/N,GAAaN,CAAG;AAC3B,GAEMsO,KAAqB,CAAArQ,OAAY;AAAA;AAAA,EAEnC,OAAO,CAAE;AAAA;AAAA,EAGT,mBAAmB;AAAA;AAAA,EAGnB,mBAAmB;AAAA;AAAA,EAGnB,iBAAiB,CAAE;AAAA;AAAA,EAGnB,SAASmQ,GAAcnQ,CAAO;AAClC,IAEMsQ,KAAa,CAAC9B,GAAQ+B,IAAY,QACpC/B,EACK,MAAM,WAAW,EACjB,IAAI,CAAAgC,MAAQA,EAAK,aAAa,EAC9B,KAAKD,CAAS,GAEjBE,KAAkB,CAACtG,GAAOnK,MAAY;AACxC,QAAM+B,IAAM,CAAA;AACZ,SAAAG,EAAMlC,GAAS,CAAAoC,MAAO;AAClB,IAAAL,EAAIK,CAAG,IAAI;AAAA,MACP,KAAK,MAAM+H,EAAM,SAAQ,EAAG,QAAQ/H,CAAG;AAAA,MACvC,KAAK,CAAA/B,MAAS;AACV,QAAA8J,EAAM,SAAS,OAAOmG,GAAWlO,GAAK,GAAG,EAAE,YAAa,CAAA,IAAI;AAAA,UACxD,OAAA/B;AAAA,QACpB,CAAiB;AAAA,MACJ;AAAA,IACb;AAAA,EACA,CAAK,GACM0B;AACX,GAEM2O,KAAsB,CAAA1Q,MAAW,CAACqB,GAAUG,GAAOjB,MAAU;AAC/D,QAAMwB,IAAM,CAAA;AACZ,SAAAG,EAAMlC,GAAS,CAAAoC,MAAO;AAClB,UAAMhC,IAAOkQ,GAAWlO,GAAK,GAAG,EAAE,YAAW;AAE7C,IAAAL,EAAI,OAAO3B,CAAI,EAAE,IAAI,CAAAyB,MAAU;AAC3B,UAAI;AACA,QAAAtB,EAAM,QAAQ6B,CAAG,IAAIP,EAAO;AAAA,MAC/B,QAAW;AAAA,MAEX;AAGD,MAAAR,EAAS,WAAWjB,CAAI,IAAI,EAAE,OAAOG,EAAM,QAAQ6B,CAAG,EAAC,CAAE;AAAA,IACrE;AAAA,EACA,CAAK,GACML;AACX,GAEM4O,KAAsB,CAAA3Q,MAAW,CAAAO,MAAS;AAC5C,QAAMwB,IAAM,CAAA;AACZ,SAAAG,EAAMlC,GAAS,CAAAoC,MAAO;AAClB,IAAAL,EAAI,OAAOuO,GAAWlO,GAAK,GAAG,EAAE,aAAa,EAAE,IAAI,CAAAP,MAAUtB,EAAM,QAAQ6B,CAAG;AAAA,EACtF,CAAK,GACML;AACX,GAEM6O,KAAoB;AAAA,EACtB,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AACV,GAEMC,KAAc,MAChB,KAAK,OAAQ,EACR,SAAS,EAAE,EACX,UAAU,GAAG,EAAE,GAElBC,KAAc,CAACC,GAAK5N,MAAU4N,EAAI,OAAO5N,GAAO,CAAC,GAEjD6N,KAAM,CAAC7O,GAAI8O,MAAS;AACtB,EAAIA,IACA9O,MACO,SAAS,SAChB,QAAQ,QAAQ,CAAC,EAAE,KAAKA,CAAE,IAE1B,WAAWA,GAAI,CAAC;AAExB,GAEM+O,KAAK,MAAM;AACb,QAAM7J,IAAY,CAAA,GACZ8J,IAAM,CAACxR,GAAOwC,MAAO;AACvB,IAAA2O;AAAA,MACIzJ;AAAA,MACAA,EAAU,UAAU,CAAA+J,MAAYA,EAAS,UAAUzR,MAAUyR,EAAS,OAAOjP,KAAM,CAACA,EAAG;AAAA,IACnG;AAAA,EACA,GACUkP,IAAO,CAAC1R,GAAO+B,GAAMuP,MAAS;AAChC,IAAA5J,EACK,OAAO,CAAA+J,MAAYA,EAAS,UAAUzR,CAAK,EAC3C,IAAI,CAAAyR,MAAYA,EAAS,EAAE,EAC3B,QAAQ,CAAAjP,MAAM6O,GAAI,MAAM7O,EAAG,GAAGT,CAAI,GAAGuP,CAAI,CAAC;AAAA,EACvD;AACI,SAAO;AAAA,IACH,UAAU,CAACtR,MAAU+B,MAAS;AAC1B,MAAA2P,EAAK1R,GAAO+B,GAAM,EAAI;AAAA,IACzB;AAAA,IACD,MAAM,CAAC/B,MAAU+B,MAAS;AACtB,MAAA2P,EAAK1R,GAAO+B,GAAM,EAAK;AAAA,IAC1B;AAAA,IACD,IAAI,CAAC/B,GAAOwC,MAAO;AACf,MAAAkF,EAAU,KAAK,EAAE,OAAA1H,GAAO,IAAAwC,EAAI,CAAA;AAAA,IAC/B;AAAA,IACD,QAAQ,CAACxC,GAAOwC,MAAO;AACnB,MAAAkF,EAAU,KAAK;AAAA,QACX,OAAA1H;AAAA,QACA,IAAI,IAAI+B,MAAS;AACb,UAAAyP,EAAIxR,GAAOwC,CAAE,GACbA,EAAG,GAAGT,CAAI;AAAA,QACb;AAAA,MACjB,CAAa;AAAA,IACJ;AAAA,IACD,KAAAyP;AAAA,EACR;AACA,GAEMG,KAA+B,CAACC,GAAKpM,GAAQqM,MAAa;AAC5D,SAAO,oBAAoBD,CAAG,EACzB,OAAO,CAAAvP,MAAY,CAACwP,EAAS,SAASxP,CAAQ,CAAC,EAC/C;AAAA,IAAQ,CAAAI,MACL,OAAO,eAAe+C,GAAQ/C,GAAK,OAAO,yBAAyBmP,GAAKnP,CAAG,CAAC;AAAA,EACxF;AACA,GAEMqP,KAAU;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,GAEMC,KAAgB,CAAAC,MAAQ;AAC1B,QAAM/P,IAAM,CAAA;AACZ,SAAA0P,GAA6BK,GAAM/P,GAAK6P,EAAO,GACxC7P;AACX,GAEMgQ,KAAsB,CAAAC,MAAS;AACjC,EAAAA,EAAM,QAAQ,CAACF,GAAMxO,MAAU;AAC3B,IAAIwO,EAAK,YACLb,GAAYe,GAAO1O,CAAK;AAAA,EAEpC,CAAK;AACL,GAEM2O,IAAa;AAAA,EACf,MAAM;AAAA,EACN,MAAM;AAAA,EACN,mBAAmB;AAAA,EACnB,YAAY;AAAA,EACZ,qBAAqB;AAAA,EACrB,kBAAkB;AAAA,EAClB,yBAAyB;AAAA,EACzB,SAAS;AAAA,EACT,YAAY;AAChB,GAEMC,KAAa;AAAA,EACf,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AACX,GAEMC,KAAgB,CAAAvQ,MAAO,UAAU,KAAKA,CAAG,GAEzCwQ,KAAsB,MAAMD,GAAe,IAAK,eAAgB,CAAA,EAAE,CAAC,GAEnEE,KAAwB,MAAM;AAGhC,QAAMC,IAAmBF,MACnBG,IAAgC,IAAQ;AAE9C,SAAIA,MADqC,SAE9BJ,GAAcI,CAA4B,EAAE,CAAC,IAEjDD,MAAqB,MAAM,MAAM;AAC5C,GAEME,IAAO;AAAA,EACT,SAAS;AAAA,EACT,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,OAAO;AACX,GAGMC,KAAU,CAAA,GAGVC,KAAmB,CAACnQ,GAAK/B,GAAOmS,MAClC,IAAI,QAAQ,CAACC,GAASC,MAAW;AAE7B,QAAMC,IAAkBL,GAAQ,OAAO,CAAA/M,MAAKA,EAAE,QAAQnD,CAAG,EAAE,IAAI,CAAAmD,MAAKA,EAAE,EAAE;AAGxE,MAAIoN,EAAgB,WAAW,GAAG;AAC9B,IAAAF,EAAQpS,CAAK;AACb;AAAA,EACH;AAGD,QAAMuS,IAAgBD,EAAgB;AAGtC,EAAAA,EACK;AAAA;AAAA,IAEG,CAACE,GAASC,MAASD,EAAQ,KAAK,CAAAxS,MAASyS,EAAKzS,GAAOmS,CAAK,CAAC;AAAA;AAAA,IAG3DI,EAAcvS,GAAOmS,CAAK;AAAA;AAAA,EAG7B,EACA,KAAK,CAAAnS,MAASoS,EAAQpS,CAAK,CAAC,EAC5B,MAAM,CAAA0S,MAASL,EAAOK,CAAK,CAAC;AACzC,CAAK,GAECC,KAAe,CAAC5Q,GAAK/B,GAAOmS,MAC9BF,GAAQ,OAAO,CAAA/M,MAAKA,EAAE,QAAQnD,CAAG,EAAE,IAAI,CAAAmD,MAAKA,EAAE,GAAGlF,GAAOmS,CAAK,CAAC,GAG5DS,KAAY,CAAC7Q,GAAKD,MAAOmQ,GAAQ,KAAK,EAAE,KAAAlQ,GAAK,IAAAD,EAAE,CAAE,GAEjD+Q,KAAuB,CAAAC,MAAqB,OAAO,OAAOC,IAAgBD,CAAiB,GAE3FE,KAAa,OAAO,EAAE,GAAGD,GAAc,IAEvCE,KAAa,CAAAC,MAAQ;AACvB,EAAArR,EAAMqR,GAAM,CAACnR,GAAK/B,MAAU;AAExB,IAAK+S,GAAehR,CAAG,MAGvBgR,GAAehR,CAAG,EAAE,CAAC,IAAIuN;AAAA,MACrBtP;AAAA,MACA+S,GAAehR,CAAG,EAAE,CAAC;AAAA,MACrBgR,GAAehR,CAAG,EAAE,CAAC;AAAA,IACjC;AAAA,EACA,CAAK;AACL,GAGMgR,KAAiB;AAAA;AAAA,EAEnB,IAAI,CAAC,MAAMf,EAAK,MAAM;AAAA;AAAA,EAGtB,MAAM,CAAC,YAAYA,EAAK,MAAM;AAAA;AAAA,EAG9B,UAAU,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA,EAG9B,WAAW,CAAC,MAAMA,EAAK,MAAM;AAAA;AAAA,EAG7B,UAAU,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA,EAG9B,eAAe,CAAC,MAAMA,EAAK,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjC,0BAA0B,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EAG7C,WAAW,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EAC9B,aAAa,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EAChC,YAAY,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EAC/B,eAAe,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA,EACnC,cAAc,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EACjC,aAAa,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EAChC,aAAa,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EAChC,cAAc,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EACjC,cAAc,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA,EAClC,sBAAsB,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA;AAAA,EAG1C,aAAa,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA,EAGjC,aAAa,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA;AAAA,EAGjC,UAAU,CAAC,MAAMA,EAAK,GAAG;AAAA;AAAA,EACzB,eAAe,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA;AAAA,EAGnC,2BAA2B,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EAC9C,oBAAoB,CAAC,UAAUA,EAAK,MAAM;AAAA;AAAA,EAC1C,oBAAoB,CAAC,IAAIA,EAAK,GAAG;AAAA;AAAA,EAGjC,YAAY,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA,EAChC,eAAe,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EAClC,gBAAgB,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA,EACpC,cAAc,CAAC,CAAC,aAAa,aAAa,aAAa,GAAGA,EAAK,KAAK;AAAA;AAAA,EAGpE,eAAe,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA,EAClC,oBAAoB,CAAC,GAAGA,EAAK,GAAG;AAAA;AAAA,EAChC,4BAA4B,CAAC,IAAMA,EAAK,OAAO;AAAA;AAAA;AAAA,EAG/C,cAAc,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA,EAClC,YAAY,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA,EAChC,WAAW,CAAC,KAASA,EAAK,GAAG;AAAA;AAAA,EAC7B,kBAAkB,CAAC,CAAC,KAAK,KAAM,GAAI,GAAGA,EAAK,KAAK;AAAA;AAAA;AAAA,EAGhD,QAAQ,CAAC,MAAMA,EAAK,UAAU;AAAA;AAAA,EAG9B,cAAc,CAAC,KAAMA,EAAK,GAAG;AAAA;AAAA,EAG7B,oBAAoB,CAAC,SAASA,EAAK,MAAM;AAAA,EACzC,wBAAwB,CAAC,MAAMA,EAAK,MAAM;AAAA,EAC1C,wBAAwB,CAAC,MAAMA,EAAK,MAAM;AAAA,EAC1C,wBAAwB,CAAC,MAAMA,EAAK,MAAM;AAAA,EAE1C,uBAAuB,CAACJ,MAAuBI,EAAK,MAAM;AAAA;AAAA,EAC1D,yBAAyB,CAACH,MAAyBG,EAAK,MAAM;AAAA;AAAA,EAE9D,WAAW;AAAA,IACP;AAAA,IACAA,EAAK;AAAA,EACR;AAAA,EACD,mBAAmB,CAAC,gCAAgCA,EAAK,MAAM;AAAA,EAC/D,yBAAyB,CAAC,oBAAoBA,EAAK,MAAM;AAAA,EACzD,2BAA2B,CAAC,sBAAsBA,EAAK,MAAM;AAAA,EAC7D,wBAAwB,CAAC,gBAAgBA,EAAK,MAAM;AAAA,EACpD,sBAAsB,CAAC,iBAAiBA,EAAK,MAAM;AAAA,EACnD,kBAAkB,CAAC,WAAWA,EAAK,MAAM;AAAA,EACzC,gBAAgB,CAAC,SAASA,EAAK,MAAM;AAAA;AAAA,EACrC,oBAAoB,CAAC,qBAAqBA,EAAK,MAAM;AAAA,EACrD,kBAAkB,CAAC,WAAWA,EAAK,MAAM;AAAA;AAAA,EACzC,sBAAsB,CAAC,uBAAuBA,EAAK,MAAM;AAAA,EACzD,qBAAqB,CAAC,aAAaA,EAAK,MAAM;AAAA,EAC9C,6BAA6B,CAAC,mBAAmBA,EAAK,MAAM;AAAA,EAC5D,4BAA4B,CAAC,oBAAoBA,EAAK,MAAM;AAAA,EAC5D,0BAA0B,CAAC,uBAAuBA,EAAK,MAAM;AAAA,EAC7D,gCAAgC,CAAC,uBAAuBA,EAAK,MAAM;AAAA,EAEnE,kBAAkB,CAAC,iBAAiBA,EAAK,MAAM;AAAA,EAC/C,iBAAiB,CAAC,gBAAgBA,EAAK,MAAM;AAAA,EAC7C,gBAAgB,CAAC,eAAeA,EAAK,MAAM;AAAA,EAE3C,uBAAuB,CAAC,UAAUA,EAAK,MAAM;AAAA,EAC7C,0BAA0B,CAAC,SAASA,EAAK,MAAM;AAAA,EAC/C,0BAA0B,CAAC,SAASA,EAAK,MAAM;AAAA,EAC/C,gCAAgC,CAAC,UAAUA,EAAK,MAAM;AAAA,EACtD,+BAA+B,CAAC,QAAQA,EAAK,MAAM;AAAA,EACnD,gCAAgC,CAAC,SAASA,EAAK,MAAM;AAAA,EACrD,wBAAwB,CAAC,UAAUA,EAAK,MAAM;AAAA;AAAA,EAG9C,YAAY;AAAA,IACR;AAAA,IACAA,EAAK;AAAA,EACR;AAAA,EACD,aAAa;AAAA,IACT;AAAA,IACAA,EAAK;AAAA,EACR;AAAA,EACD,WAAW;AAAA,IACP;AAAA,IACAA,EAAK;AAAA,EACR;AAAA,EACD,UAAU;AAAA,IACN;AAAA,IACAA,EAAK;AAAA,EACR;AAAA,EACD,UAAU;AAAA,IACN;AAAA,IACAA,EAAK;AAAA,EACR;AAAA;AAAA,EAGD,QAAQ,CAAC,MAAMA,EAAK,QAAQ;AAAA,EAC5B,WAAW,CAAC,MAAMA,EAAK,QAAQ;AAAA,EAC/B,SAAS,CAAC,MAAMA,EAAK,QAAQ;AAAA,EAC7B,gBAAgB,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACpC,YAAY,CAAC,MAAMA,EAAK,QAAQ;AAAA,EAChC,gBAAgB,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACpC,mBAAmB,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACvC,WAAW,CAAC,MAAMA,EAAK,QAAQ;AAAA,EAC/B,oBAAoB,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACxC,uBAAuB,CAAC,MAAMA,EAAK,QAAQ;AAAA,EAC3C,oBAAoB,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACxC,qBAAqB,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACzC,eAAe,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACnC,gBAAgB,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACpC,cAAc,CAAC,MAAMA,EAAK,QAAQ;AAAA,EAClC,eAAe,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACnC,eAAe,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACnC,gBAAgB,CAAC,MAAMA,EAAK,QAAQ;AAAA;AAAA,EAGpC,gBAAgB,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACpC,eAAe,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACnC,kBAAkB,CAAC,MAAMA,EAAK,QAAQ;AAAA,EACtC,mBAAmB,CAAC,MAAMA,EAAK,QAAQ;AAAA;AAAA,EAGvC,kBAAkB,CAAC,MAAMA,EAAK,MAAM;AAAA;AAAA,EACpC,uBAAuB,CAAC,MAAMA,EAAK,MAAM;AAAA;AAAA,EACzC,2BAA2B,CAAC,MAAMA,EAAK,MAAM;AAAA,EAC7C,+BAA+B,CAAC,QAAQA,EAAK,MAAM;AAAA,EACnD,gCAAgC,CAAC,SAASA,EAAK,MAAM;AAAA,EACrD,4BAA4B,CAAC,SAASA,EAAK,MAAM;AAAA,EACjD,gCAAgC,CAAC,SAASA,EAAK,MAAM;AAAA,EACrD,4BAA4B,CAAC,IAAOA,EAAK,OAAO;AAAA;AAAA,EAGhD,OAAO,CAAC,CAAA,GAAIA,EAAK,KAAK;AAAA;AAAA,EAGtB,SAAS,CAAC,CAAC,qBAAqB,kBAAkB,GAAGA,EAAK,KAAK;AACnE,GAEMmB,KAAiB,CAAC3B,GAAOrQ,MAEvB+L,GAAQ/L,CAAK,IACNqQ,EAAM,CAAC,KAAK,OAInB3D,GAAM1M,CAAK,IACJqQ,EAAMrQ,CAAK,KAAK,QAIvB,OAAOA,KAAU,aACjBA,IAAQA,EAAM,KAIXqQ,EAAM,KAAK,CAAAF,MAAQA,EAAK,OAAOnQ,CAAK,KAAK,OAG9CiS,KAAkC,CAAAC,MAAe;AACnD,MAAInG,GAAQmG,CAAW;AACnB,WAAOA;AAEX,MAAI,IAAI,KAAKA,CAAW,GAAG;AACvB,UAAMxE,IAAQwE,EAAY,MAAM,GAAG;AACnC,WAAOxE,EAAM,CAAC,IAAIA,EAAM,CAAC;AAAA,EAC5B;AACD,SAAO,WAAWwE,CAAW;AACjC,GAEMC,KAAiB,CAAA9B,MAASA,EAAM,OAAO,CAAAF,MAAQ,CAACA,EAAK,QAAQ,GAE7DiC,KAAS;AAAA,EACX,OAAO;AAAA,EACP,MAAM;AAAA;AAAA,EACN,OAAO;AAAA;AAAA,EACP,MAAM;AAAA;AAAA,EACN,OAAO;AAAA;AACX;AAEA,IAAIC,KAAM;AACV,MAAMC,KAAqB,MAAM;AAC7B,MAAID,OAAQ;AACR,QAAI;AACA,YAAME,IAAe,IAAI;AACzB,MAAAA,EAAa,MAAM,IAAI,IAAI,KAAK,CAAC,aAAa,GAAG,gBAAgB,CAAC;AAClE,YAAMvU,IAAK,SAAS,cAAc,OAAO;AACzC,MAAAA,EAAG,aAAa,QAAQ,MAAM,GAC9BA,EAAG,QAAQuU,EAAa,OACxBF,KAAMrU,EAAG,MAAM,WAAW;AAAA,IAC7B,QAAa;AACV,MAAAqU,KAAM;AAAA,IACT;AAEL,SAAOA;AACX,GAEMG,KAAa;AAAA,EACflC,EAAW;AAAA,EACXA,EAAW;AAAA,EACXA,EAAW;AACf,GACMmC,KAAY;AAAA,EACdnC,EAAW;AAAA,EACXA,EAAW;AAAA,EACXA,EAAW;AAAA,EACXA,EAAW;AACf,GACMoC,KAAa,CAACpC,EAAW,mBAAmB,GAE5CqC,KAAqB,CAAAxC,MAAQqC,GAAW,SAASrC,EAAK,MAAM,GAC5DyC,KAAoB,CAAAzC,MAAQsC,GAAU,SAAStC,EAAK,MAAM,GAC1D0C,KAAqB,CAAA1C,MAAQuC,GAAW,SAASvC,EAAK,MAAM,GAE5D2C,KAAU,CAAA/T,MACZ8O,GAAS9O,EAAM,QAAQ,MAAM,MAC5B8O,GAAS9O,EAAM,QAAQ,OAAO,OAAO,KAAK+N,GAAW/N,EAAM,QAAQ,OAAO,OAAO,IAEhFI,KAAU,CAAAJ,OAAU;AAAA,EACtB,YAAY,MAAM;AACd,UAAMsR,IAAQ8B,GAAepT,EAAM,KAAK,GAElC,EAAE,OAAAgU,GAAO,OAAAC,GAAO,MAAAC,GAAM,MAAAC,GAAM,OAAAC,EAAO,IAAGf;AAE5C,WAAI/B,EAAM,WAAW,IAAU0C,IAE3B1C,EAAM,KAAKsC,EAAkB,IAAUK,IAEvC3C,EAAM,KAAKuC,EAAiB,IAAUK,IAEtC5C,EAAM,KAAKwC,EAAkB,IAAUM,IAEpCD;AAAA,EACV;AAAA,EAED,UAAU,CAAAlT,MAASgS,GAAejT,EAAM,OAAOiB,CAAK;AAAA,EAEpD,iBAAiB,CAAAA,MAASgS,GAAeG,GAAepT,EAAM,KAAK,GAAGiB,CAAK;AAAA,EAE3E,kBAAkB,MAAMmS,GAAepT,EAAM,KAAK;AAAA,EAElD,WAAW,MAAMA,EAAM;AAAA,EAEvB,eAAe,CAAAiB,MAAS;AACpB,UAAMmQ,IAAO6B,GAAejT,EAAM,OAAOiB,CAAK;AAC9C,WAAOmQ,IAAOA,EAAK,WAAW;AAAA,EACjC;AAAA,EAED,eAAe,CAAAnQ,MAAS;AACpB,UAAMmQ,IAAO6B,GAAejT,EAAM,OAAOiB,CAAK;AAC9C,WAAOmQ,IAAOA,EAAK,WAAW;AAAA,EACjC;AAAA,EAED,YAAY,MACR,OAAO,KAAKpR,EAAM,OAAO,EACpB,OAAO,CAAA6B,MAAO,SAAS,KAAKA,CAAG,CAAC,EAChC,IAAI,CAAAwS,OAAW;AAAA,IACZ,MAAMA;AAAA,IACN,OAAOrU,EAAM,QAAQqU,CAAM;AAAA,EAC3C,EAAc;AAAA,EAEV,wBAAwB,MACE,SAAS,KAAKrU,EAAM,QAAQ,gBAAgB,IAE5D,IACAkT,GAAgClT,EAAM,QAAQ,qBAAqB;AAAA,EAI7E,6BAA6B,MAAMA,EAAM,QAAQ;AAAA,EAEjD,qBAAqB,CAAAsU,MACjBlB,GAAepT,EAAM,KAAK,EAAE,OAAO,CAAAoR,MAAQA,EAAK,WAAWkD,CAAM;AAAA,EAErE,iBAAiB,MAAMlB,GAAepT,EAAM,KAAK,EAAE;AAAA,EAEnD,0BAA0B,MACtBA,EAAM,QAAQ,eAAeuT,GAAkB,KAAM,CAACQ,GAAQ/T,CAAK;AAAA,EAEvE,UAAU,MAAM+T,GAAQ/T,CAAK;AAAA,EAE7B,sBAAsB,CAAAiB,OAAU;AAAA,IAC5B,YAAYA,EAAM,2BAA2B,KAAK;AAAA,IAClD,gBAAgBA,EAAM,+BAA+B,KAAK;AAAA,IAC1D,gBAAgBA,EAAM,+BAA+B,KAAK;AAAA,IAC1D,gBAAgBA,EAAM,+BAA+B,KAAK;AAAA,EAClE;AACA,IAEMsT,KAAiB,CAAAvU,MAAS;AAC5B,QAAMwU,IAAQpB,GAAepT,EAAM,KAAK,EAAE;AAG1C,MAAI,CAACA,EAAM,QAAQ;AACf,WAAOwU,MAAU;AAIrB,QAAMC,IAAezU,EAAM,QAAQ;AAMnC,SALIyU,MAAiB,QAKjBD,IAAQC;AAMhB,GAEMC,KAAQ,CAAC5U,GAAO6U,GAAKC,MAAQ,KAAK,IAAI,KAAK,IAAIA,GAAK9U,CAAK,GAAG6U,CAAG,GAE/DE,KAAc,CAACrE,GAAK5N,GAAOwO,MAASZ,EAAI,OAAO5N,GAAO,GAAGwO,CAAI,GAE7D0D,KAAa,CAACxD,GAAOF,GAAMxO,MACzBoK,GAAQoE,CAAI,IACL,OAIP,OAAOxO,IAAU,OACjB0O,EAAM,KAAKF,CAAI,GACRA,MAIXxO,IAAQ8R,GAAM9R,GAAO,GAAG0O,EAAM,MAAM,GAGpCuD,GAAYvD,GAAO1O,GAAOwO,CAAI,GAGvBA,IAGL2D,KAAkB,CAAA7T,MACpB,4GAA4G;AAAA,EACxGA;AACR,GAEM8T,KAAqB,CAAAxV,MACvB,GAAGA,CAAG,GACD,MAAM,GAAG,EACT,IAAK,EACL,MAAM,GAAG,EACT,SAEHyV,KAA2B,CAAApV,MAAQA,EAAK,MAAM,GAAG,EAAE,OAEnDqV,KAAuB,CAAAtU,MAAQ;AAEjC,MAAI,OAAOA,KAAS;AAChB,WAAO;AAIX,QAAMuU,IAAUvU,EAAK,MAAM,GAAG,EAAE,IAAG;AAGnC,SAAI,MAAM,KAAKuU,CAAO,IACX,QAGP,iBAAiB,KAAKA,CAAO,IACtB,QAGP,QAAQ,KAAKA,CAAO,IACb,QAGP,SAAS,KAAKA,CAAO,IACd,QAIP,SAAS,KAAKA,CAAO,IAEjBA,MAAY,SACL,QAIJA,IAGJ;AACX,GAEMC,KAAU,CAACtV,GAAOuV,IAAU,QAAQA,IAAUvV,GAAO,MAAM,CAACuV,EAAQ,MAAM,GAE1EC,KAAgB,CAACC,IAAO,oBAAI,KAAM,MACpC,GAAGA,EAAK,YAAa,CAAA,IAAIH,GAAQG,EAAK,SAAU,IAAG,GAAG,IAAI,CAAC,IAAIH;AAAA,EAC3DG,EAAK,QAAS;AAAA,EACd;AACH,CAAA,IAAIH,GAAQG,EAAK,SAAQ,GAAI,IAAI,CAAC,IAAIH,GAAQG,EAAK,WAAU,GAAI,IAAI,CAAC,IAAIH;AAAA,EACvEG,EAAK,WAAY;AAAA,EACjB;AACH,CAAA,IAECC,KAAkB,CAACC,GAAMC,GAAU9U,IAAO,MAAM+U,IAAY,SAAS;AACvE,QAAMC,IACF,OAAOhV,KAAS,WACV6U,EAAK,MAAM,GAAGA,EAAK,MAAM7U,CAAI,IAC7B6U,EAAK,MAAM,GAAGA,EAAK,MAAMA,EAAK,IAAI;AAC5C,SAAAG,EAAK,mBAAmB,oBAAI,QAGxBH,EAAK,kBAAeG,EAAK,gBAAgBH,EAAK,gBAG7ClI,GAASmI,CAAQ,MAClBA,IAAWJ,GAAa,IAIxBI,KAAYC,MAAc,QAAQV,GAAyBS,CAAQ,IACnEE,EAAK,OAAOF,KAEZC,IAAYA,KAAaT,GAAqBU,EAAK,IAAI,GACvDA,EAAK,OAAOF,KAAYC,IAAY,MAAMA,IAAY,MAGnDC;AACX,GAEMC,KAAiB,MACX,OAAO,cACX,OAAO,eACP,OAAO,qBACP,OAAO,kBACP,OAAO,eAGTC,KAAa,CAACC,GAAaC,MAAa;AAC1C,QAAMC,IAAKJ;AAEX,MAAII,GAAI;AACJ,UAAMC,IAAK,IAAID;AACf,WAAAC,EAAG,OAAOH,CAAW,GACdG,EAAG,QAAQF,CAAQ;AAAA,EAC7B;AAED,SAAO,IAAI,KAAK,CAACD,CAAW,GAAG;AAAA,IAC3B,MAAMC;AAAA,EACd,CAAK;AACL,GAEMG,KAAoC,CAACC,GAAYJ,MAAa;AAChE,QAAMK,IAAK,IAAI,YAAYD,EAAW,MAAM,GACtCE,IAAK,IAAI,WAAWD,CAAE;AAE5B,WAASE,IAAI,GAAGA,IAAIH,EAAW,QAAQG;AACnC,IAAAD,EAAGC,CAAC,IAAIH,EAAW,WAAWG,CAAC;AAGnC,SAAOT,GAAWO,GAAIL,CAAQ;AAClC,GAEMQ,KAA+B,CAAAC,OACzB,cAAc,KAAKA,CAAO,KAAK,IAAI,CAAC,KAAK,MAG/CC,KAAiC,CAAAD,MAEtBA,EAAQ,MAAM,GAAG,EAAE,CAAC,EAGrB,QAAQ,OAAO,EAAE,GAG3BE,KAAiC,CAAAF,MAC5B,KAAKC,GAA+BD,CAAO,CAAC,GAGjDG,KAA2B,CAAAH,MAAW;AACxC,QAAMT,IAAWQ,GAA6BC,CAAO,GAC/CL,IAAaO,GAA+BF,CAAO;AAEzD,SAAON,GAAkCC,GAAYJ,CAAQ;AACjE,GAEMa,KAA2B,CAACJ,GAASf,GAAUC,MAC1CH,GAAgBoB,GAAyBH,CAAO,GAAGf,GAAU,MAAMC,CAAS,GAGjFmB,KAAwB,CAAAC,MAAU;AAEpC,MAAI,CAAC,yBAAyB,KAAKA,CAAM;AAAG,WAAO;AAGnD,QAAMC,IAAUD,EACX,MAAM,2BAA2B,EACjC,OAAO,CAAC,EACR,IAAI,CAAAlX,MAAQA,EAAK,KAAM,EAAC,QAAQ,sBAAsB,EAAE,CAAC,EACzD,OAAO,CAAAA,MAAQA,EAAK,MAAM;AAE/B,SAAOmX,EAAQ,SAAS,UAAUA,EAAQA,EAAQ,SAAS,CAAC,CAAC,IAAI;AACrE,GAEMC,KAAwB,CAAAF,MAAU;AACpC,MAAI,mBAAmB,KAAKA,CAAM,GAAG;AACjC,UAAMG,IAAOH,EAAO,MAAM,QAAQ,EAAE,CAAC;AACrC,WAAOG,IAAO,SAASA,GAAM,EAAE,IAAI;AAAA,EACtC;AACD,SAAO;AACX,GAEMC,KAA0B,CAAAJ,MACxB,0BAA0B,KAAKA,CAAM,MACzBA,EAAO,MAAM,GAAG,EAAE,CAAC,KAAK,IAAI,UAC3B,MAKfK,KAAyB,CAAA1I,MAAW;AACtC,QAAM2I,IAAO;AAAA,IACT,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,EACd,GAEUC,IAAO5I,EAAQ,MAAM;AAAA,CAAI;AAC/B,WAASqI,KAAUO,GAAM;AACrB,UAAMzX,IAAOiX,GAAsBC,CAAM;AACzC,QAAIlX,GAAM;AACN,MAAAwX,EAAK,OAAOxX;AACZ;AAAA,IACH;AAED,UAAMqX,IAAOD,GAAsBF,CAAM;AACzC,QAAIG,GAAM;AACN,MAAAG,EAAK,OAAOH;AACZ;AAAA,IACH;AAED,UAAMK,IAASJ,GAAwBJ,CAAM;AAC7C,QAAIQ,GAAQ;AACR,MAAAF,EAAK,SAASE;AACd;AAAA,IACH;AAAA,EACJ;AAED,SAAOF;AACX,GAEMG,KAAmB,CAAAC,MAAW;AAChC,QAAMzX,IAAQ;AAAA,IACV,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,WAAW;AAAA,IACX,UAAU;AAAA,IACV,SAAS;AAAA,EACjB,GAEU0X,IAAc,MAAM1X,EAAM,UAC1B2X,IAAQ,MAAM;AAChB,IAAI3X,EAAM,WAAWA,EAAM,QAAQ,SAC/BA,EAAM,QAAQ;EAE1B,GAGU4X,IAAO,MAAM;AAEf,UAAML,IAASvX,EAAM;AAErB,IAAAqB,EAAI,KAAK,QAAQkW,CAAM,GAGnBA,aAAkB,OAClBlW,EAAI,KAAK,QAAQkW,CAAM,IAChBA,aAAkB,OAEzBlW,EAAI,KAAK,QAAQmU,GAAgB+B,GAAQA,EAAO,IAAI,CAAC,IAC9CxC,GAAgBwC,CAAM,IAE7BlW,EAAI,KAAK,QAAQwV,GAAyBU,CAAM,CAAC,IAGjDM,EAAQN,CAAM;AAAA,EAE1B,GAGUM,IAAU,CAAArY,MAAO;AAEnB,QAAI,CAACiY,GAAS;AACV,MAAApW,EAAI,KAAK,SAAS;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,MACtB,CAAa;AACD;AAAA,IACH;AAGD,IAAArB,EAAM,YAAY,KAAK,OAGvBA,EAAM,UAAUyX;AAAA,MACZjY;AAAA,MACA,CAAAsY,MAAY;AAER,QAAA9X,EAAM,WAAW,KAAK,IAAG,IAAKA,EAAM,WAGpCA,EAAM,WAAW,IAGb8X,aAAoB,SACpBA,IAAWtC,GAAgBsC,GAAUA,EAAS,QAAQ9C,GAAmBxV,CAAG,CAAC,IAGjF6B,EAAI;AAAA,UACA;AAAA;AAAA,UAEAyW,aAAoB,OAAOA,IAAWA,IAAWA,EAAS,OAAO;AAAA,QACrF;AAAA,MACa;AAAA,MACD,CAAAtF,MAAS;AACL,QAAAnR,EAAI;AAAA,UACA;AAAA,UACA,OAAOmR,KAAU,WACX;AAAA,YACI,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAMA;AAAA,UACT,IACDA;AAAA,QAC1B;AAAA,MACa;AAAA,MACD,CAACuF,GAAYzF,GAAS0F,MAAU;AAU5B,YARIA,MACAhY,EAAM,OAAOgY,IAIjBhY,EAAM,WAAW,KAAK,IAAG,IAAKA,EAAM,WAGhC,CAAC+X,GAAY;AACb,UAAA/X,EAAM,WAAW;AACjB;AAAA,QACH;AAGD,QAAAA,EAAM,WAAWsS,IAAU0F,GAG3B3W,EAAI,KAAK,YAAYrB,EAAM,QAAQ;AAAA,MACtC;AAAA,MACD,MAAM;AACF,QAAAqB,EAAI,KAAK,OAAO;AAAA,MACnB;AAAA,MACD,CAAAyW,MAAY;AACR,cAAMG,IAAWb;AAAA,UACb,OAAOU,KAAa,WAAWA,IAAWA,EAAS;AAAA,QACvE;AACgB,QAAAzW,EAAI,KAAK,QAAQ;AAAA,UACb,MAAMrB,EAAM,QAAQiY,EAAS;AAAA,UAC7B,UAAUA,EAAS;AAAA,UACnB,QAAQA,EAAS;AAAA,QACrC,CAAiB;AAAA,MACJ;AAAA,IACb;AAAA,EACA,GAEU5W,IAAM;AAAA,IACR,GAAGsP,GAAI;AAAA,IACP,WAAW,CAAA4G,MAAWvX,EAAM,SAASuX;AAAA,IACrC,aAAAG;AAAA;AAAA,IACA,OAAAC;AAAA;AAAA,IACA,MAAAC;AAAA;AAAA,EACR;AAEI,SAAOvW;AACX,GAEM6W,KAAQ,CAAA1J,MAAU,WAAW,KAAKA,CAAM,GAExC2J,KAAc,CAACtX,GAAMrB,GAAKC,MAAY;AACxC,QAAM4B,IAAM;AAAA,IACR,WAAW,MAAM;AAAA,IAAE;AAAA,IACnB,YAAY,MAAM;AAAA,IAAE;AAAA,IACpB,QAAQ,MAAM;AAAA,IAAE;AAAA,IAChB,WAAW,MAAM;AAAA,IAAE;AAAA,IACnB,SAAS,MAAM;AAAA,IAAE;AAAA,IACjB,SAAS,MAAM;AAAA,IAAE;AAAA,IACjB,OAAO,MAAM;AACT,MAAA+W,IAAU,IACVC,EAAI,MAAK;AAAA,IACZ;AAAA,EACT;AAGI,MAAID,IAAU,IACVE,IAAkB;AAGtB,EAAA7Y,IAAU;AAAA,IACN,QAAQ;AAAA,IACR,SAAS,CAAE;AAAA,IACX,iBAAiB;AAAA,IACjB,GAAGA;AAAA,EACX,GAGID,IAAM,UAAUA,CAAG,GAIf0Y,GAAMzY,EAAQ,MAAM,KAAKoB,MACzBrB,IAAM,GAAGA,CAAG,GAAG,mBAAmB,OAAOqB,KAAS,WAAWA,IAAO,KAAK,UAAUA,CAAI,CAAC,CAAC;AAI7F,QAAMwX,IAAM,IAAI,kBAGVE,IAAUL,GAAMzY,EAAQ,MAAM,IAAI4Y,IAAMA,EAAI;AAClD,SAAAE,EAAQ,aAAa,CAAArZ,MAAK;AAEtB,IAAIkZ,KAIJ/W,EAAI,WAAWnC,EAAE,kBAAkBA,EAAE,QAAQA,EAAE,KAAK;AAAA,EAC5D,GAGImZ,EAAI,qBAAqB,MAAM;AAE3B,IAAIA,EAAI,aAAa,KAKjBA,EAAI,eAAe,KAAKA,EAAI,WAAW,KAIvCC,MAIJA,IAAkB,IAGlBjX,EAAI,UAAUgX,CAAG;AAAA,EACzB,GAGIA,EAAI,SAAS,MAAM;AAEf,IAAIA,EAAI,UAAU,OAAOA,EAAI,SAAS,MAClChX,EAAI,OAAOgX,CAAG,IAEdhX,EAAI,QAAQgX,CAAG;AAAA,EAE3B,GAGIA,EAAI,UAAU,MAAMhX,EAAI,QAAQgX,CAAG,GAGnCA,EAAI,UAAU,MAAM;AAChB,IAAAD,IAAU,IACV/W,EAAI,QAAO;AAAA,EACnB,GAGIgX,EAAI,YAAY,MAAMhX,EAAI,UAAUgX,CAAG,GAGvCA,EAAI,KAAK5Y,EAAQ,QAAQD,GAAK,EAAI,GAG9BmO,GAAMlO,EAAQ,OAAO,MACrB4Y,EAAI,UAAU5Y,EAAQ,UAI1B,OAAO,KAAKA,EAAQ,OAAO,EAAE,QAAQ,CAAAoC,MAAO;AACxC,UAAM/B,IAAQ,SAAS,mBAAmBL,EAAQ,QAAQoC,CAAG,CAAC,CAAC;AAC/D,IAAAwW,EAAI,iBAAiBxW,GAAK/B,CAAK;AAAA,EACvC,CAAK,GAGGL,EAAQ,iBACR4Y,EAAI,eAAe5Y,EAAQ,eAI3BA,EAAQ,oBACR4Y,EAAI,kBAAkB,KAI1BA,EAAI,KAAKxX,CAAI,GAENQ;AACX,GAEMmX,IAAiB,CAAC5X,GAAM6X,GAAMC,GAAMhK,OAAa;AAAA,EACnD,MAAA9N;AAAA,EACA,MAAA6X;AAAA,EACA,MAAAC;AAAA,EACA,SAAAhK;AACJ,IAEMiK,KAAwB,CAAA/W,MAAM,CAAAyW,MAAO;AACvC,EAAAzW,EAAG4W,EAAe,SAAS,GAAG,WAAWH,EAAI,sBAAuB,CAAA,CAAC;AACzE,GAEMO,KAAQ,CAAA1X,MAAO,KAAK,KAAKA,CAAG,GAC5B2X,KAAW,IAAIlK,MAAU;AAC3B,MAAInP,IAAM;AACV,SAAAmP,EAAM,QAAQ,CAAAsB,MAAQ;AAClB,IAAAzQ,KAAOoZ,GAAMpZ,CAAG,KAAKoZ,GAAM3I,CAAI,IAAIA,EAAK,QAAQ,MAAM,GAAG,IAAIA;AAAA,EACrE,CAAK,GACMzQ;AACX,GAEMsZ,KAAsB,CAACC,IAAS,IAAIzX,MAAW;AAEjD,MAAI,OAAOA,KAAW;AAClB,WAAOA;AAIX,MAAI,CAACA,KAAU,CAACiM,GAASjM,EAAO,GAAG;AAC/B,WAAO;AAIX,QAAM0X,IAAS1X,EAAO,WAAW,CAAAgS,MAAOA,IAClC2F,IAAU3X,EAAO,YAAY,CAAAgS,MAAO;AAG1C,SAAO,CAAC9T,GAAKoY,GAAMpF,GAAO0G,GAAUvB,GAAOjJ,MAAY;AAEnD,UAAMyK,IAAUhB,GAAY3Y,GAAKqZ,GAASE,GAAQzX,EAAO,GAAG,GAAG;AAAA,MAC3D,GAAGA;AAAA,MACH,cAAc;AAAA,IAC1B,CAAS;AAED,WAAA6X,EAAQ,SAAS,CAAAd,MAAO;AAEpB,YAAM3J,IAAU2J,EAAI,yBAGd3C,IAAW0B,GAAuB1I,CAAO,EAAE,QAAQsG,GAAmBxV,CAAG;AAG/E,MAAAoY;AAAA,QACIY;AAAA,UACI;AAAA,UACAH,EAAI;AAAA,UACJ/W,EAAO,WAAW,SACZ,OACAkU,GAAgBwD,EAAOX,EAAI,QAAQ,GAAG3C,CAAQ;AAAA,UACpDhH;AAAA,QACH;AAAA,MACjB;AAAA,IACA,GAEQyK,EAAQ,UAAU,CAAAd,MAAO;AACrB,MAAA7F;AAAA,QACIgG;AAAA,UACI;AAAA,UACAH,EAAI;AAAA,UACJY,EAAQZ,EAAI,QAAQ,KAAKA,EAAI;AAAA,UAC7BA,EAAI,sBAAuB;AAAA,QAC9B;AAAA,MACjB;AAAA,IACA,GAEQc,EAAQ,YAAY,CAAAd,MAAO;AACvB,MAAA3J,EAAQ8J,EAAe,WAAWH,EAAI,QAAQ,MAAMA,EAAI,sBAAuB,CAAA,CAAC;AAAA,IAC5F,GAEQc,EAAQ,YAAYR,GAAsBnG,CAAK,GAC/C2G,EAAQ,aAAaD,GACrBC,EAAQ,UAAUxB,GAGXwB;AAAA,EACf;AACA,GAEMC,KAAc;AAAA,EAChB,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,SAAS;AACb,GAYMC,KAAqB,CACvBN,GACAzX,GACAzB,GACA+V,GACA0D,GACA1B,GACApF,GACA0G,GACAvB,GACA4B,GACA9Z,MACC;AAED,QAAM+Z,IAAS,CAAA,GACT,EAAE,iBAAAC,GAAiB,aAAAC,GAAa,WAAAC,GAAW,kBAAAC,EAAgB,IAAKna,GAGhEO,IAAQ;AAAA,IACV,UAAUyZ;AAAA,IACV,SAAS;AAAA,EACjB,GAGUI,IAASvY,EAAO,WAAW,CAAAwY,MAAMA,IACjCd,IACF1X,EAAO,WACN,CAAC+W,GAAK7J,MACHA,MAAW,SAAS6J,EAAI,kBAAkB,eAAe,IAAIA,EAAI,WACnEY,IAAU3X,EAAO,YAAY,CAAAgS,MAAO,OAGpCyG,IAAoB,CAAAnY,MAAM;AAC5B,UAAMoY,IAAW,IAAI;AAGrB,IAAIlL,GAASwK,CAAQ,KAAGU,EAAS,OAAOna,GAAM,KAAK,UAAUyZ,CAAQ,CAAC;AAEtE,UAAM5K,IACF,OAAOpN,EAAO,WAAY,aACpBA,EAAO,QAAQsU,GAAM0D,CAAQ,IAC7B;AAAA,MACI,GAAGhY,EAAO;AAAA,MACV,iBAAiBsU,EAAK;AAAA,IAC5C,GAEcqE,IAAgB;AAAA,MAClB,GAAG3Y;AAAA,MACH,SAAAoN;AAAA,IACZ,GAGcyK,IAAUhB,GAAY0B,EAAOG,CAAQ,GAAGnB,GAASE,GAAQzX,EAAO,GAAG,GAAG2Y,CAAa;AAEzF,IAAAd,EAAQ,SAAS,CAAAd,MAAOzW,EAAGoX,EAAOX,GAAK4B,EAAc,MAAM,CAAC,GAE5Dd,EAAQ,UAAU,CAAAd,MACd7F;AAAA,MACIgG;AAAA,QACI;AAAA,QACAH,EAAI;AAAA,QACJY,EAAQZ,EAAI,QAAQ,KAAKA,EAAI;AAAA,QAC7BA,EAAI,sBAAuB;AAAA,MAC9B;AAAA,IACjB,GAEQc,EAAQ,YAAYR,GAAsBnG,CAAK;AAAA,EACvD,GAEU0H,IAAwB,CAAAtY,MAAM;AAChC,UAAMuY,IAAatB,GAASE,GAAQW,EAAY,KAAK1Z,EAAM,QAAQ,GAS7Dia,IAAgB;AAAA,MAClB,SAPA,OAAO3Y,EAAO,WAAY,aACpBA,EAAO,QAAQtB,EAAM,QAAQ,IAC7B;AAAA,QACI,GAAGsB,EAAO;AAAA,MAChC;AAAA,MAIY,QAAQ;AAAA,IACpB,GAEc6X,IAAUhB,GAAY,MAAMgC,GAAYF,CAAa;AAE3D,IAAAd,EAAQ,SAAS,CAAAd,MAAOzW,EAAGoX,EAAOX,GAAK4B,EAAc,MAAM,CAAC,GAE5Dd,EAAQ,UAAU,CAAAd,MACd7F;AAAA,MACIgG;AAAA,QACI;AAAA,QACAH,EAAI;AAAA,QACJY,EAAQZ,EAAI,QAAQ,KAAKA,EAAI;AAAA,QAC7BA,EAAI,sBAAuB;AAAA,MAC9B;AAAA,IACjB,GAEQc,EAAQ,YAAYR,GAAsBnG,CAAK;AAAA,EACvD,GAGU4H,IAAiB,KAAK,MAAMxE,EAAK,OAAO+D,CAAS;AACvD,WAASpD,IAAI,GAAGA,KAAK6D,GAAgB7D,KAAK;AACtC,UAAMhT,IAASgT,IAAIoD,GACb9Y,IAAO+U,EAAK,MAAMrS,GAAQA,IAASoW,GAAW,iCAAiC;AACrF,IAAAH,EAAOjD,CAAC,IAAI;AAAA,MACR,OAAOA;AAAA,MACP,MAAM1V,EAAK;AAAA,MACX,QAAA0C;AAAA,MACA,MAAA1C;AAAA,MACA,MAAA+U;AAAA,MACA,UAAU;AAAA,MACV,SAAS,CAAC,GAAGgE,CAAgB;AAAA,MAC7B,QAAQR,GAAY;AAAA,MACpB,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,IACrB;AAAA,EACK;AAED,QAAMiB,IAA2B,MAAMzC,EAAK5X,EAAM,QAAQ,GAEpDsa,IAAkB,CAAAC,MACpBA,EAAM,WAAWnB,GAAY,UAAUmB,EAAM,WAAWnB,GAAY,OAElEoB,IAAe,CAAAD,MAAS;AAE1B,QAAIva,EAAM;AAAS;AAMnB,QAHAua,IAAQA,KAASf,EAAO,KAAKc,CAAe,GAGxC,CAACC,GAAO;AAER,MAAIf,EAAO,MAAM,CAAAe,MAASA,EAAM,WAAWnB,GAAY,QAAQ,KAC3DiB;AAIJ;AAAA,IACH;AAGD,IAAAE,EAAM,SAASnB,GAAY,YAC3BmB,EAAM,WAAW;AAGjB,UAAMV,IAASH,EAAY,WAAW,CAAAI,MAAMA,IACtCb,IAAUS,EAAY,YAAY,CAAApG,MAAO,OAGzC6G,IAAatB,GAASE,GAAQW,EAAY,KAAK1Z,EAAM,QAAQ,GAE7D0O,IACF,OAAOgL,EAAY,WAAY,aACzBA,EAAY,QAAQa,CAAK,IACzB;AAAA,MACI,GAAGb,EAAY;AAAA,MACf,gBAAgB;AAAA,MAChB,iBAAiBa,EAAM;AAAA,MACvB,iBAAiB3E,EAAK;AAAA,MACtB,eAAeA,EAAK;AAAA,IAC1C,GAEcuD,IAAWoB,EAAM,UAAUpC,GAAY0B,EAAOU,EAAM,IAAI,GAAGJ,GAAY;AAAA,MACzE,GAAGT;AAAA,MACH,SAAAhL;AAAA,IACH,CAAA;AAED,IAAAyK,EAAQ,SAAS,MAAM;AAEnB,MAAAoB,EAAM,SAASnB,GAAY,UAG3BmB,EAAM,UAAU,MAGhBE;IACZ,GAEQtB,EAAQ,aAAa,CAACuB,GAAkBC,GAAQ3C,OAAU;AACtD,MAAAuC,EAAM,WAAWG,IAAmBC,IAAS,MAC7CC;IACZ,GAEQzB,EAAQ,UAAU,CAAAd,MAAO;AACrB,MAAAkC,EAAM,SAASnB,GAAY,OAC3BmB,EAAM,UAAU,MAChBA,EAAM,QAAQtB,EAAQZ,EAAI,QAAQ,KAAKA,EAAI,YACtCwC,EAAkBN,CAAK,KACxB/H;AAAA,QACIgG;AAAA,UACI;AAAA,UACAH,EAAI;AAAA,UACJY,EAAQZ,EAAI,QAAQ,KAAKA,EAAI;AAAA,UAC7BA,EAAI,sBAAuB;AAAA,QAC9B;AAAA,MACrB;AAAA,IAEA,GAEQc,EAAQ,YAAY,CAAAd,MAAO;AACvB,MAAAkC,EAAM,SAASnB,GAAY,OAC3BmB,EAAM,UAAU,MACXM,EAAkBN,CAAK,KACxB5B,GAAsBnG,CAAK,EAAE6F,CAAG;AAAA,IAEhD,GAEQc,EAAQ,UAAU,MAAM;AACpB,MAAAoB,EAAM,SAASnB,GAAY,QAC3BmB,EAAM,UAAU,MAChB5C;IACZ;AAAA,EACA,GAEUkD,IAAoB,CAAAN,MAElBA,EAAM,QAAQ,WAAW,IAAU,MAGvCA,EAAM,SAASnB,GAAY,SAC3B,aAAamB,EAAM,OAAO,GAC1BA,EAAM,UAAU,WAAW,MAAM;AAC7B,IAAAC,EAAaD,CAAK;AAAA,EACrB,GAAEA,EAAM,QAAQ,MAAK,CAAE,GAGjB,KAGLK,IAAsB,MAAM;AAE9B,UAAME,IAAuBtB,EAAO,OAAO,CAAChU,GAAG+U,MACvC/U,MAAM,QAAQ+U,EAAM,aAAa,OAAa,OAC3C/U,IAAI+U,EAAM,UAClB,CAAC;AAGJ,QAAIO,MAAyB;AAAM,aAAO5B,EAAS,IAAO,GAAG,CAAC;AAG9D,UAAM6B,IAAYvB,EAAO,OAAO,CAACxB,GAAOuC,MAAUvC,IAAQuC,EAAM,MAAM,CAAC;AAGvE,IAAArB,EAAS,IAAM4B,GAAsBC,CAAS;AAAA,EACtD,GAGUN,IAAgB,MAAM;AAGxB,IAFwBjB,EAAO,OAAO,CAAAe,MAASA,EAAM,WAAWnB,GAAY,UAAU,EACjF,UACkB,KACvBoB;EACR,GAEUQ,KAAc,MAAM;AACtB,IAAAxB,EAAO,QAAQ,CAAAe,MAAS;AACpB,mBAAaA,EAAM,OAAO,GACtBA,EAAM,WACNA,EAAM,QAAQ;IAE9B,CAAS;AAAA,EACT;AAGI,SAAKva,EAAM,WAaPka,EAAsB,CAAA3W,MAAU;AAE5B,IAAIvD,EAAM,YAGVwZ,EACK,OAAO,CAAAe,MAASA,EAAM,SAAShX,CAAM,EACrC,QAAQ,CAAAgX,MAAS;AACd,MAAAA,EAAM,SAASnB,GAAY,UAC3BmB,EAAM,WAAWA,EAAM;AAAA,IAC3C,CAAiB,GAGLE;EACZ,CAAS,IA1BDV,EAAkB,CAAAkB,MAAY;AAE1B,IAAIjb,EAAM,YAGVuZ,EAAS0B,CAAQ,GAGjBjb,EAAM,WAAWib,GACjBR;EACZ,CAAS,GAmBE;AAAA,IACH,OAAO,MAAM;AACT,MAAAza,EAAM,UAAU,IAChBgb;IACH;AAAA,EACT;AACA,GAUME,KAA8B,CAACnC,GAAQzX,GAAQzB,GAAMJ,MAAY,CACnEmW,GACA0D,GACA1B,GACApF,GACA0G,GACAvB,GACA4B,MACC;AAED,MAAI,CAAC3D;AAAM;AAGX,QAAMuF,IAAiB1b,EAAQ,cACzB2b,IAAoBD,KAAkBvF,EAAK,OAAOnW,EAAQ,WAC1D4b,IAAkBF,MAAmBC,KAAqB3b,EAAQ;AACxE,MAAImW,aAAgB,QAAQyF;AACxB,WAAOhC;AAAA,MACHN;AAAA,MACAzX;AAAA,MACAzB;AAAA,MACA+V;AAAA,MACA0D;AAAA,MACA1B;AAAA,MACApF;AAAA,MACA0G;AAAA,MACAvB;AAAA,MACA4B;AAAA,MACA9Z;AAAA,IACZ;AAGI,QAAMoa,IAASvY,EAAO,WAAW,CAAAwY,MAAMA,IACjCd,IAAS1X,EAAO,WAAW,CAAAgS,MAAOA,IAClC2F,IAAU3X,EAAO,YAAY,CAAAgS,MAAO,OAEpC5E,IACF,OAAOpN,EAAO,WAAY,aACpBA,EAAO,QAAQsU,GAAM0D,CAAQ,KAAK,CAAE,IACpC;AAAA,IACI,GAAGhY,EAAO;AAAA,EAC5B,GAEU2Y,IAAgB;AAAA,IAClB,GAAG3Y;AAAA,IACH,SAAAoN;AAAA,EACR;AAGI,MAAIsL,IAAW,IAAI;AAGnB,EAAIlL,GAASwK,CAAQ,KACjBU,EAAS,OAAOna,GAAM,KAAK,UAAUyZ,CAAQ,CAAC,IAIjD1D,aAAgB,OAAO,CAAC,EAAE,MAAM,MAAM,MAAAA,EAAI,CAAE,IAAIA,GAAM,QAAQ,CAAAxE,MAAQ;AACnE,IAAA4I,EAAS;AAAA,MACLna;AAAA,MACAuR,EAAK;AAAA,MACLA,EAAK,SAAS,OAAOA,EAAK,KAAK,OAAO,GAAGA,EAAK,IAAI,GAAGA,EAAK,KAAK,IAAI;AAAA,IAC/E;AAAA,EACA,CAAK;AAGD,QAAM+H,IAAUhB,GAAY0B,EAAOG,CAAQ,GAAGnB,GAASE,GAAQzX,EAAO,GAAG,GAAG2Y,CAAa;AACzF,SAAAd,EAAQ,SAAS,CAAAd,MAAO;AACpB,IAAAT,EAAKY,EAAe,QAAQH,EAAI,QAAQW,EAAOX,EAAI,QAAQ,GAAGA,EAAI,sBAAqB,CAAE,CAAC;AAAA,EAClG,GAEIc,EAAQ,UAAU,CAAAd,MAAO;AACrB,IAAA7F;AAAA,MACIgG;AAAA,QACI;AAAA,QACAH,EAAI;AAAA,QACJY,EAAQZ,EAAI,QAAQ,KAAKA,EAAI;AAAA,QAC7BA,EAAI,sBAAuB;AAAA,MAC9B;AAAA,IACb;AAAA,EACA,GAEIc,EAAQ,YAAYR,GAAsBnG,CAAK,GAC/C2G,EAAQ,aAAaD,GACrBC,EAAQ,UAAUxB,GAGXwB;AACX,GAEMmC,KAA0B,CAACvC,IAAS,IAAIzX,GAAQzB,GAAMJ,MAEpD,OAAO6B,KAAW,aAAmB,IAAIia,MAAWja,EAAOzB,GAAM,GAAG0b,GAAQ9b,CAAO,IAGnF,CAAC6B,KAAU,CAACiM,GAASjM,EAAO,GAAG,IAAU,OAGtC4Z,GAA4BnC,GAAQzX,GAAQzB,GAAMJ,CAAO,GAO9D+b,KAAuB,CAACzC,IAAS,IAAIzX,MAAW;AAElD,MAAI,OAAOA,KAAW;AAClB,WAAOA;AAIX,MAAI,CAACA,KAAU,CAACiM,GAASjM,EAAO,GAAG;AAC/B,WAAO,CAACma,GAAc7D,MAASA;AAInC,QAAMoB,IAAS1X,EAAO,WAAW,CAAAgS,MAAOA,IAClC2F,IAAU3X,EAAO,YAAY,CAAAgS,MAAO;AAG1C,SAAO,CAACmI,GAAc7D,GAAMpF,MAAU;AAClC,UAAM2G,IAAUhB;AAAA,MACZsD;AAAA,MACA1C,IAASzX,EAAO;AAAA,MAChBA;AAAA;AAAA,IACZ;AACQ,WAAA6X,EAAQ,SAAS,CAAAd,MAAO;AACpB,MAAAT;AAAA,QACIY;AAAA,UACI;AAAA,UACAH,EAAI;AAAA,UACJW,EAAOX,EAAI,QAAQ;AAAA,UACnBA,EAAI,sBAAuB;AAAA,QAC9B;AAAA,MACjB;AAAA,IACA,GAEQc,EAAQ,UAAU,CAAAd,MAAO;AACrB,MAAA7F;AAAA,QACIgG;AAAA,UACI;AAAA,UACAH,EAAI;AAAA,UACJY,EAAQZ,EAAI,QAAQ,KAAKA,EAAI;AAAA,UAC7BA,EAAI,sBAAuB;AAAA,QAC9B;AAAA,MACjB;AAAA,IACA,GAEQc,EAAQ,YAAYR,GAAsBnG,CAAK,GAExC2G;AAAA,EACf;AACA,GAEMuC,KAAkB,CAAC/G,IAAM,GAAGC,IAAM,MAAMD,IAAM,KAAK,OAAM,KAAMC,IAAMD,IAErEgH,KAAoC,CACtC/Z,GACAwD,IAAW,KACX7B,IAAS,GACTqY,IAAU,IACVC,IAAU,QACT;AACD,MAAIpN,IAAU;AACd,QAAMlJ,IAAQ,KAAK,OAEb8G,IAAO,MAAM;AACf,QAAIyP,IAAU,KAAK,IAAG,IAAKvW,GACvBD,IAAQoW,GAAgBE,GAASC,CAAO;AAE5C,IAAIC,IAAUxW,IAAQF,MAClBE,IAAQwW,IAAUxW,IAAQF;AAG9B,QAAI8T,IAAW4C,IAAU1W;AACzB,QAAI8T,KAAY,KAAK,SAAS,QAAQ;AAClC,MAAAtX,EAAG,CAAC;AACJ;AAAA,IACH;AAED,IAAAA,EAAGsX,CAAQ,GAEXzK,IAAU,WAAWpC,GAAM/G,CAAK;AAAA,EACxC;AAEI,SAAIF,IAAW,KAAGiH,KAEX;AAAA,IACH,OAAO,MAAM;AACT,mBAAaoC,CAAO;AAAA,IACvB;AAAA,EACT;AACA,GAEMsN,KAAsB,CAACC,GAAWvc,MAAY;AAChD,QAAMO,IAAQ;AAAA,IACV,UAAU;AAAA,IACV,mBAAmB;AAAA,IACnB,6BAA6B;AAAA,IAC7B,UAAU;AAAA,IACV,WAAW;AAAA,IACX,mBAAmB;AAAA,IACnB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,EAClB,GAEU,EAAE,4BAAAic,EAA4B,IAAGxc,GAEjC8Y,IAAU,CAAC3C,GAAM0D,MAAa;AAChC,UAAM4C,IAAa,MAAM;AAIrB,MAAIlc,EAAM,aAAa,KAAKA,EAAM,aAAa,QAG/CqB,EAAI,KAAK,YAAYA,EAAI,YAAa,CAAA;AAAA,IAClD,GAEc8a,IAAa,MAAM;AACrB,MAAAnc,EAAM,WAAW,IACjBqB,EAAI,KAAK,kBAAkBrB,EAAM,SAAS,IAAI;AAAA,IAC1D;AAGQ,IAAAqB,EAAI,KAAK,OAAO,GAGhBrB,EAAM,YAAY,KAAK,OAGvBA,EAAM,8BAA8B2b;AAAA,MAChC,CAAAzC,MAAY;AACR,QAAAlZ,EAAM,oBAAoBkZ,GAC1BlZ,EAAM,oBAAoB,KAAK,IAAG,IAAKA,EAAM,WAE7Ckc,KAIIlc,EAAM,YAAYA,EAAM,sBAAsB,KAAK,CAACA,EAAM,YAE1Dmc;MAEP;AAAA;AAAA;AAAA,MAGDF,IAA6BP,GAAgB,KAAK,IAAI,IAAI;AAAA,IACtE,GAGQ1b,EAAM,UAAUgc;AAAA;AAAA,MAEZpG;AAAA;AAAA,MAGA0D;AAAA;AAAA;AAAA;AAAA,MAKA,CAAAxB,MAAY;AAGR,QAAA9X,EAAM,WAAW8O,GAASgJ,CAAQ,IAC5BA,IACA;AAAA,UACI,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM,GAAGA,CAAQ;AAAA,UACjB,SAAS,CAAE;AAAA,QACrC,GAGgB9X,EAAM,WAAW,KAAK,IAAG,IAAKA,EAAM,WAGpCA,EAAM,WAAW,GAGjBqB,EAAI,KAAK,QAAQrB,EAAM,SAAS,IAAI,IAMhC,CAACic,KACAA,KAA8Bjc,EAAM,sBAAsB,MAE3Dmc;MAEP;AAAA;AAAA,MAGD,CAAA3J,MAAS;AAEL,QAAAxS,EAAM,4BAA4B,SAGlCqB,EAAI;AAAA,UACA;AAAA,UACAyN,GAAS0D,CAAK,IACRA,IACA;AAAA,YACI,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM,GAAGA,CAAK;AAAA,UACjB;AAAA,QAC3B;AAAA,MACa;AAAA;AAAA,MAGD,CAACuF,GAAYzF,GAAS0F,MAAU;AAE5B,QAAAhY,EAAM,WAAW,KAAK,IAAG,IAAKA,EAAM,WAGpCA,EAAM,WAAW+X,IAAazF,IAAU0F,IAAQ,MAEhDkE;MACH;AAAA;AAAA,MAGD,MAAM;AAEF,QAAAlc,EAAM,4BAA4B,SAGlCqB,EAAI,KAAK,SAASrB,EAAM,WAAWA,EAAM,SAAS,OAAO,IAAI;AAAA,MAChE;AAAA;AAAA,MAGD,CAAAoc,MAAc;AACV,QAAA/a,EAAI,KAAK,YAAY+a,CAAU;AAAA,MAClC;AAAA,IACb;AAAA,EACA,GAEUzE,IAAQ,MAAM;AAEhB,IAAK3X,EAAM,YAGXA,EAAM,4BAA4B,SAG9BA,EAAM,QAAQ,SAAOA,EAAM,QAAQ,SAGvCA,EAAM,WAAW;AAAA,EACzB,GAEUqc,IAAQ,MAAM;AAChB,IAAA1E,KACA3X,EAAM,WAAW,IACjBA,EAAM,oBAAoB,GAC1BA,EAAM,WAAW,GACjBA,EAAM,YAAY,MAClBA,EAAM,oBAAoB,GAC1BA,EAAM,WAAW,GACjBA,EAAM,UAAU,MAChBA,EAAM,WAAW;AAAA,EACzB,GAEU0X,IAAcuE,IACd,MAAOjc,EAAM,WAAW,KAAK,IAAIA,EAAM,UAAUA,EAAM,iBAAiB,IAAI,OAC5E,MAAMA,EAAM,YAAY,MAExBsc,IAAcL,IACd,MAAM,KAAK,IAAIjc,EAAM,UAAUA,EAAM,iBAAiB,IACtD,MAAMA,EAAM,UAEZqB,IAAM;AAAA,IACR,GAAGsP,GAAI;AAAA,IACP,SAAA4H;AAAA;AAAA,IACA,OAAAZ;AAAA;AAAA,IACA,aAAAD;AAAA,IACA,aAAA4E;AAAA,IACA,OAAAD;AAAA,EACR;AAEI,SAAOhb;AACX,GAEMkb,KAA8B,CAAA1c,MAAQA,EAAK,UAAU,GAAGA,EAAK,YAAY,GAAG,CAAC,KAAKA,GAElF2c,KAAiB,CAAAjF,MAAU;AAC7B,MAAI1W,IAAO,CAAC0W,EAAO,MAAMA,EAAO,MAAMA,EAAO,IAAI;AAGjD,SAAIA,aAAkB,QAAQxC,GAAgBwC,CAAM,IAChD1W,EAAK,CAAC,IAAI0W,EAAO,QAAQjC,GAAa,IAC/BP,GAAgBwC,CAAM,KAE7B1W,EAAK,CAAC,IAAI0W,EAAO,QACjB1W,EAAK,CAAC,IAAI2V,GAA6Be,CAAM,KACtChK,GAASgK,CAAM,MAEtB1W,EAAK,CAAC,IAAImU,GAAmBuC,CAAM,GACnC1W,EAAK,CAAC,IAAI,GACVA,EAAK,CAAC,IAAI,6BAGP;AAAA,IACH,MAAMA,EAAK,CAAC;AAAA,IACZ,MAAMA,EAAK,CAAC;AAAA,IACZ,MAAMA,EAAK,CAAC;AAAA,EACpB;AACA,GAEM4b,KAAS,CAAA3c,MAAS,CAAC,EAAEA,aAAiB,QAASA,aAAiB,QAAQA,EAAM,OAE9E4c,KAAkB,CAAA1L,MAAO;AAC3B,MAAI,CAAClC,GAASkC,CAAG;AAAG,WAAOA;AAC3B,QAAMpM,IAASmI,GAAQiE,CAAG,IAAI,CAAA,IAAK,CAAA;AACnC,aAAWnP,KAAOmP,GAAK;AACnB,QAAI,CAACA,EAAI,eAAenP,CAAG;AAAG;AAC9B,UAAM8a,IAAI3L,EAAInP,CAAG;AACjB,IAAA+C,EAAO/C,CAAG,IAAI8a,KAAK7N,GAAS6N,CAAC,IAAID,GAAgBC,CAAC,IAAIA;AAAA,EACzD;AACD,SAAO/X;AACX,GAEMgY,KAAa,CAACC,IAAS,MAAMC,IAAsB,MAAMlH,IAAO,SAAS;AAE3E,QAAM3J,IAAKqE,MAKLtQ,IAAQ;AAAA;AAAA,IAEV,UAAU;AAAA;AAAA,IAGV,QAAQ;AAAA;AAAA,IAGR,UAAU;AAAA;AAAA,IAGV,QAAQ;AAAA;AAAA,IAGR,MAAA4V;AAAA;AAAA,IAGA,qBAAAkH;AAAA;AAAA,IAGA,YAAY;AAAA;AAAA,IAGZ,mBAAmB;AAAA;AAAA,IAGnB,QAAQA,IAAsBvL,EAAW,sBAAsBA,EAAW;AAAA;AAAA,IAG1E,cAAc;AAAA,IACd,iBAAiB;AAAA,EACzB;AAGI,MAAIwL,IAAiC;AAKrC,QAAMzD,IAAW,CAAA,GAGX0D,IAAY,CAAA1I,MAAWtU,EAAM,SAASsU,GAGtCxD,IAAO,CAAC1R,MAAUmc,MAAW;AAC/B,IAAIvb,EAAM,YAAYA,EAAM,UAC5BqB,EAAI,KAAKjC,GAAO,GAAGmc,CAAM;AAAA,EACjC,GAGU0B,IAAmB,MAAMhI,GAAyBjV,EAAM,KAAK,IAAI,GACjEkd,IAAc,MAAMld,EAAM,KAAK,MAC/Bmd,IAAc,MAAMnd,EAAM,KAAK,MAC/Bod,IAAU,MAAMpd,EAAM,MAKtB4X,IAAO,CAACL,GAAQ8F,GAAQrE,MAAW;AAQrC,QANAhZ,EAAM,SAASuX,GAGflW,EAAI,SAAS,MAAM,GAGfrB,EAAM,MAAM;AACZ,MAAAqB,EAAI,SAAS,WAAW;AACxB;AAAA,IACH;AAGD,IAAArB,EAAM,OAAOwc,GAAejF,CAAM,GAGlC8F,EAAO,GAAG,QAAQ,MAAM;AACpB,MAAAvM,EAAK,WAAW;AAAA,IAC5B,CAAS,GAGDuM,EAAO,GAAG,QAAQ,CAAAC,MAAQ;AAEtB,MAAAtd,EAAM,KAAK,OAAOsd,EAAK,MAGvBtd,EAAM,KAAK,WAAWsd,EAAK,UAGvBA,EAAK,WACLT,IAASrL,GAAW,OACpBxR,EAAM,sBAAsBsd,EAAK,QACjCtd,EAAM,SAASuR,EAAW,sBAI9BT,EAAK,WAAW;AAAA,IAC5B,CAAS,GAGDuM,EAAO,GAAG,YAAY,CAAAnE,MAAY;AAC9B,MAAA8D,EAAUzL,EAAW,OAAO,GAE5BT,EAAK,iBAAiBoI,CAAQ;AAAA,IAC1C,CAAS,GAGDmE,EAAO,GAAG,SAAS,CAAA7K,MAAS;AACxB,MAAAwK,EAAUzL,EAAW,UAAU,GAE/BT,EAAK,sBAAsB0B,CAAK;AAAA,IAC5C,CAAS,GAGD6K,EAAO,GAAG,SAAS,MAAM;AACrB,MAAAL,EAAUzL,EAAW,IAAI,GACzBT,EAAK,YAAY;AAAA,IAC7B,CAAS,GAGDuM,EAAO,GAAG,QAAQ,CAAAzH,MAAQ;AAEtB,MAAA5V,EAAM,eAAe;AAGrB,YAAMud,IAAU,CAAAC,MAAU;AAEtB,QAAAxd,EAAM,OAAOyc,GAAOe,CAAM,IAAIA,IAASxd,EAAM,MAGzC6c,MAAWrL,GAAW,SAASxR,EAAM,sBACrCgd,EAAUzL,EAAW,mBAAmB,IAExCyL,EAAUzL,EAAW,IAAI,GAG7BT,EAAK,MAAM;AAAA,MAC3B,GAEkB0B,KAAQ,CAAAgL,MAAU;AAEpB,QAAAxd,EAAM,OAAO4V,GACb9E,EAAK,WAAW,GAEhBkM,EAAUzL,EAAW,UAAU,GAC/BT,EAAK,mBAAmB0M,CAAM;AAAA,MAC9C;AAGY,UAAIxd,EAAM,qBAAqB;AAC3B,QAAAud,EAAQ3H,CAAI;AACZ;AAAA,MACH;AAGD,MAAAoD,EAAOpD,GAAM2H,GAAS/K,EAAK;AAAA,IACvC,CAAS,GAGD6K,EAAO,UAAU9F,CAAM,GAGvBvX,EAAM,eAAeqd,GAGrBA,EAAO,KAAI;AAAA,EACnB,GAEUI,IAAY,MAAM;AACpB,IAAKzd,EAAM,gBAGXA,EAAM,aAAa;EAC3B,GAEU0d,IAAY,MAAM;AACpB,QAAI1d,EAAM,cAAc;AACpB,MAAAA,EAAM,aAAa;AACnB;AAAA,IACH;AACD,IAAAgd,EAAUzL,EAAW,IAAI,GACzBT,EAAK,YAAY;AAAA,EACzB,GAKUyH,IAAU,CAACoF,GAAWC,MAAc;AAEtC,QAAI5d,EAAM,mBAAmB;AACzB,MAAAA,EAAM,oBAAoB;AAC1B;AAAA,IACH;AASD,QANAgd,EAAUzL,EAAW,UAAU,GAG/BwL,IAAiC,MAG7B,EAAE/c,EAAM,gBAAgB,OAAO;AAC/B,MAAAqB,EAAI,GAAG,QAAQ,MAAM;AACjB,QAAAkX,EAAQoF,GAAWC,CAAS;AAAA,MAC5C,CAAa;AACD;AAAA,IACH;AAGD,IAAAD,EAAU,GAAG,QAAQ,CAAAb,MAAuB;AAExC,MAAA9c,EAAM,aAAa,MACnBA,EAAM,sBAAsB8c;AAAA,IACxC,CAAS,GAGDa,EAAU,GAAG,YAAY,CAAAvB,MAAc;AAEnC,MAAApc,EAAM,aAAaoc;AAAA,IAC/B,CAAS,GAEDuB,EAAU,GAAG,kBAAkB,CAAAb,MAAuB;AAElD,MAAA9c,EAAM,kBAAkB,MAGxBA,EAAM,aAAa,MACnBA,EAAM,sBAAsB8c,GAE5BE,EAAUzL,EAAW,mBAAmB,GACxCT,EAAK,oBAAoBgM,CAAmB;AAAA,IACxD,CAAS,GAEDa,EAAU,GAAG,SAAS,MAAM;AACxB,MAAA7M,EAAK,eAAe;AAAA,IAChC,CAAS,GAED6M,EAAU,GAAG,SAAS,CAAAnL,MAAS;AAC3B,MAAAxS,EAAM,kBAAkB,MACxBgd,EAAUzL,EAAW,gBAAgB,GACrCT,EAAK,iBAAiB0B,CAAK;AAAA,IACvC,CAAS,GAEDmL,EAAU,GAAG,SAAS,CAAAb,MAAuB;AACzC,MAAA9c,EAAM,kBAAkB,MAGxBA,EAAM,sBAAsB8c,GAE5BE,EAAUzL,EAAW,IAAI,GACzBT,EAAK,eAAe,GAGhBiM,KACAA;IAEhB,CAAS,GAEDY,EAAU,GAAG,YAAY,CAAAzE,MAAY;AACjC,MAAApI,EAAK,oBAAoBoI,CAAQ;AAAA,IAC7C,CAAS;AAGD,UAAMqE,IAAU,CAAA3H,MAAQ;AAEpB,MAAI5V,EAAM,YAGV2d,EAAU,QAAQ/H,GAAM,EAAE,GAAG0D,EAAU,CAAA;AAAA,IACnD,GAGc9G,IAAQ,QAAQ;AAGtB,IAAAoL,EAAU5d,EAAM,MAAMud,GAAS/K,CAAK,GAGpCxS,EAAM,kBAAkB2d;AAAA,EAChC,GAEUE,IAAoB,MAAM;AAC5B,IAAA7d,EAAM,oBAAoB,IAC1Bgd,EAAUzL,EAAW,iBAAiB;AAAA,EAC9C,GAEUuM,IAAkB,MACpB,IAAI,QAAQ,CAAA5L,MAAW;AACnB,QAAI,CAAClS,EAAM,iBAAiB;AACxB,MAAAA,EAAM,oBAAoB,IAE1Bgd,EAAUzL,EAAW,IAAI,GACzBT,EAAK,eAAe,GAEpBoB;AACA;AAAA,IACH;AAED,IAAA6K,IAAiC,MAAM;AACnC,MAAA7K;IAChB,GAEYlS,EAAM,gBAAgB;EAClC,CAAS,GAKC+d,IAAS,CAACC,GAAkBC,MAC9B,IAAI,QAAQ,CAAC/L,GAASC,MAAW;AAG7B,UAAM+L,IACFle,EAAM,wBAAwB,OAAOA,EAAM,sBAAsBA,EAAM;AAG3E,QAAIke,MAAqB,MAAM;AAC3B,MAAAhM;AACA;AAAA,IACH;AAGD,IAAA8L;AAAA,MACIE;AAAA,MACA,MAAM;AAEF,QAAAle,EAAM,sBAAsB,MAC5BA,EAAM,aAAa,MACnBkS;MACH;AAAA,MACD,CAAAM,OAAS;AAEL,YAAI,CAACyL,GAAa;AACd,UAAA/L;AACA;AAAA,QACH;AAGD,QAAA8K,EAAUzL,EAAW,uBAAuB,GAC5CT,EAAK,sBAAsB,GAC3BqB,EAAOK,EAAK;AAAA,MACf;AAAA,IACjB,GAGYwK,EAAUzL,EAAW,IAAI,GACzBT,EAAK,gBAAgB;AAAA,EACjC,CAAS,GAGCqN,IAAc,CAACtc,GAAK/B,GAAOse,MAAW;AACxC,UAAMpY,IAAOnE,EAAI,MAAM,GAAG,GACpB4K,IAAOzG,EAAK,CAAC,GACbgG,KAAOhG,EAAK;AAClB,QAAInF,IAAOyY;AAIX,IAHAtT,EAAK,QAAQ,CAAAnE,MAAQhB,IAAOA,EAAKgB,CAAG,CAAE,GAGlC,KAAK,UAAUhB,EAAKmL,EAAI,CAAC,MAAM,KAAK,UAAUlM,CAAK,MAGvDe,EAAKmL,EAAI,IAAIlM,GAGbgR,EAAK,mBAAmB;AAAA,MACpB,KAAKrE;AAAA,MACL,OAAO6M,EAAS7M,CAAI;AAAA,MACpB,QAAA2R;AAAA,IACZ,CAAS;AAAA,EACT,GAIU/c,IAAM;AAAA,IACR,IAAI,EAAE,KAAK,MAAM4K,EAAI;AAAA,IACrB,QAAQ,EAAE,KAAK,MAAM4Q,GAAQ,KAAK,CAAA/c,MAAU+c,IAAS/c,EAAQ;AAAA,IAC7D,UAAU,EAAE,KAAK,MAAME,EAAM,oBAAqB;AAAA,IAClD,YAAY,EAAE,KAAK,MAAMA,EAAM,WAAY;AAAA,IAC3C,QAAQ,EAAE,KAAK,MAAMA,EAAM,OAAQ;AAAA,IACnC,UAAU,EAAE,KAAK,MAAMA,EAAM,KAAK,KAAM;AAAA,IACxC,0BAA0B,EAAE,KAAK,MAAMuc,GAA4Bvc,EAAM,KAAK,IAAI,EAAG;AAAA,IACrF,eAAe,EAAE,KAAKid,EAAkB;AAAA,IACxC,UAAU,EAAE,KAAKC,EAAa;AAAA,IAC9B,UAAU,EAAE,KAAKC,EAAa;AAAA,IAC9B,MAAM,EAAE,KAAKC,EAAS;AAAA,IACtB,cAAc,EAAE,KAAK,MAAMpd,EAAM,KAAK,cAAe;AAAA,IAErD,QAAQ,EAAE,KAAK,MAAMA,EAAM,OAAQ;AAAA,IAEnC,aAlBgB,CAAA6B,MAAO6a,GAAgB7a,IAAMyX,EAASzX,CAAG,IAAIyX,CAAQ;AAAA,IAmBrE,aAAa,CAACzX,GAAK/B,GAAOse,MAAW;AACjC,UAAItP,GAASjN,CAAG,GAAG;AACf,cAAMhB,IAAOgB;AACb,sBAAO,KAAKhB,CAAI,EAAE,QAAQ,CAAAgB,MAAO;AAC7B,UAAAsc,EAAYtc,GAAKhB,EAAKgB,CAAG,GAAG/B,CAAK;AAAA,QACrD,CAAiB,GACM+B;AAAA,MACV;AACD,aAAAsc,EAAYtc,GAAK/B,GAAOse,CAAM,GACvBte;AAAA,IACV;AAAA,IAED,QAAQ,CAACD,GAAMP,MAAa+e,EAAQxe,CAAI,IAAIP;AAAA,IAE5C,WAAAoe;AAAA,IACA,WAAAD;AAAA,IACA,mBAAAI;AAAA,IACA,iBAAAC;AAAA,IAEA,MAAAlG;AAAA,IACA,SAAAW;AAAA,IACA,QAAAwF;AAAA,IAEA,GAAGpN,GAAI;AAAA,IAEP,QAAQ,MAAO3Q,EAAM,SAAS;AAAA,IAE9B,SAAS,MAAOA,EAAM,WAAW;AAAA,IACjC,UAAU,EAAE,KAAK,MAAMA,EAAM,SAAU;AAAA,IAEvC,SAAS,MAAOA,EAAM,WAAW;AAAA,IACjC,UAAU,EAAE,KAAK,MAAMA,EAAM,SAAU;AAAA,EAC/C,GAGUqe,IAAUvc,GAAaT,CAAG;AAEhC,SAAOgd;AACX,GAEMC,KAAsB,CAAChN,GAAOrQ,MAE5B+L,GAAQ/L,CAAK,IACN,IAINsM,GAAStM,CAAK,IAKZqQ,EAAM,UAAU,CAAAF,MAAQA,EAAK,OAAOnQ,CAAK,IAJrC,IAOTsd,KAAc,CAACjN,GAAOkN,MAAW;AACnC,QAAM5b,IAAQ0b,GAAoBhN,GAAOkN,CAAM;AAC/C,MAAI,EAAA5b,IAAQ;AAGZ,WAAO0O,EAAM1O,CAAK,KAAK;AAC3B,GAEM6b,KAAY,CAACjf,GAAKoY,GAAMpF,GAAO0G,GAAUvB,GAAOjJ,MAAY;AAC9D,QAAMyK,IAAUhB,GAAY,MAAM3Y,GAAK;AAAA,IACnC,QAAQ;AAAA,IACR,cAAc;AAAA,EACtB,CAAK;AAED,SAAA2Z,EAAQ,SAAS,CAAAd,MAAO;AAEpB,UAAM3J,IAAU2J,EAAI,yBAGd3C,IAAW0B,GAAuB1I,CAAO,EAAE,QAAQsG,GAAmBxV,CAAG;AAG/E,IAAAoY,EAAKY,EAAe,QAAQH,EAAI,QAAQ7C,GAAgB6C,EAAI,UAAU3C,CAAQ,GAAGhH,CAAO,CAAC;AAAA,EACjG,GAEIyK,EAAQ,UAAU,CAAAd,MAAO;AACrB,IAAA7F,EAAMgG,EAAe,SAASH,EAAI,QAAQA,EAAI,YAAYA,EAAI,sBAAuB,CAAA,CAAC;AAAA,EAC9F,GAEIc,EAAQ,YAAY,CAAAd,MAAO;AACvB,IAAA3J,EAAQ8J,EAAe,WAAWH,EAAI,QAAQ,MAAMA,EAAI,sBAAuB,CAAA,CAAC;AAAA,EACxF,GAEIc,EAAQ,YAAYR,GAAsBnG,CAAK,GAC/C2G,EAAQ,aAAaD,GACrBC,EAAQ,UAAUxB,GAGXwB;AACX,GAEMuF,KAAmB,CAAAlf,OACjBA,EAAI,QAAQ,IAAI,MAAM,MACtBA,IAAM,SAAS,WAAWA,IAEvBA,EACF,YAAa,EACb,QAAQ,SAAS,EAAE,EACnB,QAAQ,iBAAiB,IAAI,EAC7B,MAAM,GAAG,EAAE,CAAC,IAGfmf,KAAgB,CAAAnf,OACjBA,EAAI,QAAQ,GAAG,IAAI,MAAMA,EAAI,QAAQ,IAAI,IAAI,OAC9Ckf,GAAiB,SAAS,IAAI,MAAMA,GAAiBlf,CAAG,GAEtDof,KAAe,CAAAC,MAAS,IAAItD,MAAYxN,GAAW8Q,CAAK,IAAIA,EAAM,GAAGtD,CAAM,IAAIsD,GAE/EC,KAAa,CAAA1N,MAAQ,CAACqL,GAAOrL,EAAK,IAAI,GAEtC2N,KAAc,CAACje,GAAUd,MAAU;AACrC,eAAaA,EAAM,iBAAiB,GACpCA,EAAM,oBAAoB,WAAW,MAAM;AACvC,IAAAc,EAAS,oBAAoB,EAAE,OAAOsS,GAAepT,EAAM,KAAK,EAAC,CAAE;AAAA,EACtE,GAAE,CAAC;AACR,GAEMgf,KAAkB,CAAC7f,MAAOoc,MAC5B,IAAI,QAAQ,CAAArJ,MAAW;AACnB,MAAI,CAAC/S;AACD,WAAO+S,EAAQ,EAAI;AAGvB,QAAMsL,IAASre,EAAG,GAAGoc,CAAM;AAE3B,MAAIiC,KAAU;AACV,WAAOtL,EAAQ,EAAI;AAGvB,MAAI,OAAOsL,KAAW;AAClB,WAAOtL,EAAQsL,CAAM;AAGzB,EAAI,OAAOA,EAAO,QAAS,cACvBA,EAAO,KAAKtL,CAAO;AAE/B,CAAK,GAEC+M,KAAY,CAACjf,GAAOkf,MAAY;AAClC,EAAAlf,EAAM,MAAM,KAAK,CAACwL,GAAGC,MAAMyT,EAAQ/N,GAAc3F,CAAC,GAAG2F,GAAc1F,CAAC,CAAC,CAAC;AAC1E,GAGM0T,KAA0B,CAACnf,GAAOof,MAAgB,CAAC;AAAA,EACrD,OAAAne;AAAA,EACA,SAAAsc,IAAU,MAAM;AAAA,EAAE;AAAA,EAClB,SAAA8B,IAAU,MAAM;AAAA,EAAE;AAAA,EAClB,GAAG5f;AACP,IAAI,OAAO;AACP,QAAM2R,IAAO6B,GAAejT,EAAM,OAAOiB,CAAK;AAC9C,MAAI,CAACmQ,GAAM;AACP,IAAAiO,EAAQ;AAAA,MACJ,OAAO7G,EAAe,SAAS,GAAG,gBAAgB;AAAA,MAClD,MAAM;AAAA,IAClB,CAAS;AACD;AAAA,EACH;AACD,EAAA4G,EAAYhO,GAAMmM,GAAS8B,GAAS5f,KAAW,CAAE,CAAA;AACrD,GAEMY,KAAU,CAACS,GAAUG,GAAOjB,OAAW;AAAA;AAAA;AAAA;AAAA,EAIzC,WAAW,MAAM;AACb,IAAAoT,GAAepT,EAAM,KAAK,EAAE,QAAQ,CAAAoR,MAAQ;AACxC,MAAAA,EAAK,OAAM,GACXA,EAAK,UAAS,GACdA,EAAK,gBAAe;AAAA,IAChC,CAAS;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAKD,eAAe,CAAC,EAAE,OAAAtR,IAAQ,CAAA,QAAS;AAE/B,UAAMwf,IAAQxf,EAAM,IAAI,CAAA8V,OAAS;AAAA,MAC7B,QAAQA,EAAK,SAASA,EAAK,SAASA;AAAA,MACpC,SAASA,EAAK;AAAA,IACjB,EAAC;AAIF,QAAI2J,IAAcnM,GAAepT,EAAM,KAAK;AAE5C,IAAAuf,EAAY,QAAQ,CAAAnO,MAAQ;AAExB,MAAKkO,EAAM,KAAK,CAAA1J,MAAQA,EAAK,WAAWxE,EAAK,UAAUwE,EAAK,WAAWxE,EAAK,IAAI,KAC5EtQ,EAAS,eAAe,EAAE,OAAOsQ,GAAM,QAAQ,GAAK,CAAE;AAAA,IAEtE,CAAS,GAGDmO,IAAcnM,GAAepT,EAAM,KAAK,GACxCsf,EAAM,QAAQ,CAAC1J,GAAMhT,MAAU;AAE3B,MAAI2c,EAAY,KAAK,CAAAnO,MAAQA,EAAK,WAAWwE,EAAK,UAAUxE,EAAK,SAASwE,EAAK,MAAM,KAIrF9U,EAAS,YAAY;AAAA,QACjB,GAAG8U;AAAA,QACH,mBAAmBvF,GAAkB;AAAA,QACrC,OAAAzN;AAAA,MAChB,CAAa;AAAA,IACb,CAAS;AAAA,EACJ;AAAA,EAED,0BAA0B,CAAC,EAAE,IAAAqJ,GAAI,QAAA3K,GAAQ,QAAAke,EAAM,MAAO;AAElD,IAAIA,EAAO,WAGX,aAAaxf,EAAM,iBAAiB,GACpCA,EAAM,oBAAoB,WAAW,MAAM;AACvC,YAAMoR,IAAOmN,GAAYve,EAAM,OAAOiM,CAAE;AAGxC,UAAI,CAAChL,EAAM,UAAU,GAAG;AAEpB,QAAA+Q,GAAiB,yBAAyB,IAAO;AAAA,UAC7C,MAAAZ;AAAA,UACA,OAAAnQ;AAAA,UACA,QAAAK;AAAA,UACA,QAAAke;AAAA,QACpB,CAAiB,EAAE,KAAK,CAAAC,MAAuB;AAE3B,gBAAMC,IAAoBze,EAAM,yBAAyB;AAIzD,UAHIye,MACAD,IAAsBC,EAAkBtO,GAAMqO,CAAmB,IAEhEA,KAEL3e;AAAA,YACI;AAAA,YACA;AAAA,cACI,OAAOmL;AAAA,cACP,MAAAmF;AAAA,cACA,SAAS,CAAAwE,MAAQ;AACb,gBAAA9U,EAAS,sBAAsB,EAAE,IAAAmL,GAAI,MAAA2J,EAAM,CAAA;AAAA,cAC9C;AAAA,YACJ;AAAA,YACD;AAAA,UACxB;AAAA,QACA,CAAiB;AAED;AAAA,MACH;AAGD,MAAIxE,EAAK,WAAWI,GAAW,SAC3B1Q,EAAS,iBAAiB;AAAA,QACtB,IAAIsQ,EAAK;AAAA,QACT,OAAO;AAAA,QACP,qBAAqBA,EAAK;AAAA,MAC9C,CAAiB;AAIL,YAAMuO,IAAS,MAAM;AAEjB,mBAAW,MAAM;AACb,UAAA7e,EAAS,2BAA2B,EAAE,OAAOmL,EAAI,CAAA;AAAA,QACpD,GAAE,EAAE;AAAA,MACrB,GAEkB8R,IAAS,CAAA6B,MAAY;AACvB,QAAAxO,EAAK;AAAA,UACDoK,GAAqBxb,EAAM,QAAQ,OAAO,KAAKA,EAAM,QAAQ,OAAO,MAAM;AAAA,UAC1EiB,EAAM,kBAAkB;AAAA,QAC3B,EACI,KAAK2e,IAAWD,IAAS,MAAM;AAAA,SAAE,EACjC,MAAM,MAAM;AAAA,QAAA,CAAE;AAAA,MACnC,GAEkBhI,IAAQ,CAAAiI,MAAY;AACtB,QAAAxO,EAAK,gBAAe,EAAG,KAAKwO,IAAWD,IAAS,MAAM;AAAA,QAAA,CAAE;AAAA,MACxE;AAGY,UAAIvO,EAAK,WAAWG,EAAW;AAC3B,eAAOwM,EAAO/d,EAAM,QAAQ,aAAa;AAI7C,UAAIoR,EAAK,WAAWG,EAAW;AAC3B,eAAOoG,EAAM3X,EAAM,QAAQ,aAAa;AAG5C,MAAIA,EAAM,QAAQ,iBACd2f;IAEP,GAAE,CAAC;AAAA,EACP;AAAA,EAED,WAAW,CAAC,EAAE,OAAA1e,GAAO,OAAA2B,QAAY;AAC7B,UAAMwO,IAAO6B,GAAejT,EAAM,OAAOiB,CAAK;AAC9C,QAAI,CAACmQ;AAAM;AACX,UAAMyO,IAAe7f,EAAM,MAAM,QAAQoR,CAAI;AAE7C,IADAxO,IAAQ8R,GAAM9R,GAAO,GAAG5C,EAAM,MAAM,SAAS,CAAC,GAC1C6f,MAAiBjd,KACrB5C,EAAM,MAAM,OAAO4C,GAAO,GAAG5C,EAAM,MAAM,OAAO6f,GAAc,CAAC,EAAE,CAAC,CAAC;AAAA,EACtE;AAAA,EAED,MAAM,CAAC,EAAE,SAAAX,QAAc;AACnB,IAAAD,GAAUjf,GAAOkf,CAAO,GACxBpe,EAAS,kBAAkB;AAAA,MACvB,OAAOG,EAAM,kBAAkB;AAAA,IAC3C,CAAS;AAAA,EACJ;AAAA,EAED,WAAW,CAAC,EAAE,OAAAqQ,GAAO,OAAA1O,GAAO,mBAAAkd,GAAmB,SAAAvC,IAAU,MAAM;AAAA,KAAI,SAAA8B,IAAU,MAAM;AAAA,EAAA,QAAS;AACxF,QAAIQ,IAAejd;AAEnB,QAAIA,MAAU,MAAM,OAAOA,IAAU,KAAa;AAC9C,YAAMmd,IAAiB9e,EAAM,0BAA0B,GACjD+e,IAAa/e,EAAM,iBAAiB;AAC1C,MAAA4e,IAAeE,MAAmB,WAAW,IAAIC;AAAA,IACpD;AAED,UAAMC,IAAehf,EAAM,mBAAmB,GACxCif,IAAc,CAAA3I,MAChBkF,GAAOlF,CAAM,IAAI,CAAC0I,EAAa,SAAS1I,EAAO,KAAK,YAAW,CAAE,IAAI,CAACvK,GAAQuK,CAAM,GAGlF4I,IAFa7O,EAAM,OAAO4O,CAAW,EAEf;AAAA,MACxB,CAAA3I,MACI,IAAI,QAAQ,CAACrF,GAASC,MAAW;AAC7B,QAAArR,EAAS,YAAY;AAAA,UACjB,mBAAAgf;AAAA,UACA,QAAQvI,EAAO,UAAUA;AAAA,UACzB,SAASrF;AAAA,UACT,SAASC;AAAA,UACT,OAAO0N;AAAA,UACP,SAAStI,EAAO,WAAW,CAAE;AAAA,QACrD,CAAqB;AAAA,MACrB,CAAiB;AAAA,IACjB;AAEQ,YAAQ,IAAI4I,CAAQ,EACf,KAAK5C,CAAO,EACZ,MAAM8B,CAAO;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,UAAU,CAAC;AAAA,IACP,QAAA9H;AAAA,IACA,OAAA3U,IAAQ;AAAA,IACR,mBAAAkd;AAAA,IACA,SAAAvC,IAAU,MAAM;AAAA,IAAE;AAAA,IAClB,SAAA8B,IAAU,MAAM;AAAA,IAAE;AAAA,IAClB,SAAA5f,IAAU,CAAE;AAAA,EACpB,MAAU;AAEF,QAAIuN,GAAQuK,CAAM,GAAG;AACjB,MAAA8H,EAAQ;AAAA,QACJ,OAAO7G,EAAe,SAAS,GAAG,WAAW;AAAA,QAC7C,MAAM;AAAA,MACtB,CAAa;AACD;AAAA,IACH;AAGD,QAAIiE,GAAOlF,CAAM,KAAKvX,EAAM,QAAQ,aAAa,SAASuX,EAAO,KAAK,YAAa,CAAA;AAE/E;AAIJ,QAAI,CAAChD,GAAevU,CAAK,GAAG;AAGxB,UACIA,EAAM,QAAQ,iBACb,CAACA,EAAM,QAAQ,iBAAiB,CAACA,EAAM,QAAQ,cAClD;AACE,cAAMwS,IAAQgG,EAAe,WAAW,GAAG,WAAW;AAEtD,QAAA1X,EAAS,uBAAuB;AAAA,UAC5B,QAAAyW;AAAA,UACA,OAAA/E;AAAA,QACpB,CAAiB,GAED6M,EAAQ,EAAE,OAAA7M,GAAO,MAAM,KAAM,CAAA;AAE7B;AAAA,MACH;AAID,YAAMpB,IAAOgC,GAAepT,EAAM,KAAK,EAAE,CAAC;AAG1C,UACIoR,EAAK,WAAWG,EAAW,uBAC3BH,EAAK,WAAWG,EAAW,yBAC7B;AACE,cAAM0M,IAAchd,EAAM,kBAAkB;AAoB5C,YAnBAmQ,EAAK;AAAA,UACDoK,GAAqBxb,EAAM,QAAQ,OAAO,KAAKA,EAAM,QAAQ,OAAO,MAAM;AAAA,UAC1Eie;AAAA,QACH,EACI,KAAK,MAAM;AACR,UAAKA,KAGLnd,EAAS,YAAY;AAAA,YACjB,QAAAyW;AAAA,YACA,OAAA3U;AAAA,YACA,mBAAAkd;AAAA,YACA,SAAAvC;AAAA,YACA,SAAA8B;AAAA,YACA,SAAA5f;AAAA,UAC5B,CAAyB;AAAA,QACzB,CAAqB,EACA,MAAM,MAAM;AAAA,QAAA,CAAE,GAEfwe;AAAa;AAAA,MACpB;AAGD,MAAAnd,EAAS,eAAe,EAAE,OAAOsQ,EAAK,GAAI,CAAA;AAAA,IAC7C;AAGD,UAAMyL,IACFpd,EAAQ,SAAS,UACX+R,GAAW,QACX/R,EAAQ,SAAS,UACjB+R,GAAW,QACXA,GAAW,OAGfJ,IAAOwL;AAAA;AAAA,MAETC;AAAA;AAAA,MAGAA,MAAWrL,GAAW,QAAQ,OAAO+F;AAAA;AAAA,MAGrC9X,EAAQ;AAAA,IACpB;AAGQ,WAAO,KAAKA,EAAQ,YAAY,CAAA,CAAE,EAAE,QAAQ,CAAAoC,MAAO;AAC/C,MAAAuP,EAAK,YAAYvP,GAAKpC,EAAQ,SAASoC,CAAG,CAAC;AAAA,IACvD,CAAS,GAGD4Q,GAAa,mBAAmBrB,GAAM,EAAE,OAAAnQ,GAAO,UAAAH,EAAU,CAAA;AAGzD,UAAMsf,IAAqBnf,EAAM,0BAA0B;AAG3D,IAAKjB,EAAM,QAAQ,8BACf4C,IAAQwd,MAAuB,WAAW,KAAKpgB,EAAM,MAAM,SAI/D8U,GAAW9U,EAAM,OAAOoR,GAAMxO,CAAK,GAG/BmL,GAAWqS,CAAkB,KAAK7I,KAClC0H,GAAUjf,GAAOogB,CAAkB;AAIvC,UAAMnU,IAAKmF,EAAK;AAGhB,IAAAA,EAAK,GAAG,QAAQ,MAAM;AAClB,MAAAtQ,EAAS,iBAAiB,EAAE,IAAAmL,EAAE,CAAE;AAAA,IAC5C,CAAS,GAEDmF,EAAK,GAAG,aAAa,MAAM;AACvB,MAAAtQ,EAAS,uBAAuB,EAAE,IAAAmL,EAAE,CAAE;AAAA,IAClD,CAAS,GAEDmF,EAAK,GAAG,aAAa,MAAM;AACvB,MAAAtQ,EAAS,wBAAwB,EAAE,IAAAmL,EAAE,CAAE;AAAA,IACnD,CAAS,GAEDmF,EAAK,GAAG,iBAAiB,CAAA8H,MAAY;AACjC,MAAApY,EAAS,iCAAiC,EAAE,IAAAmL,GAAI,UAAAiN,EAAU,CAAA;AAAA,IACtE,CAAS,GAED9H,EAAK,GAAG,sBAAsB,CAAAoB,MAAS;AACnC,YAAM6N,IAAazB,GAAa5e,EAAM,QAAQ,kBAAkB,EAAEwS,CAAK;AAGvE,UAAIA,EAAM,QAAQ,OAAOA,EAAM,OAAO,KAAK;AACvC,QAAA1R,EAAS,0BAA0B;AAAA,UAC/B,IAAAmL;AAAA,UACA,OAAAuG;AAAA,UACA,QAAQ;AAAA,YACJ,MAAM6N;AAAA,YACN,KAAK,GAAG7N,EAAM,IAAI,KAAKA,EAAM,IAAI;AAAA,UACpC;AAAA,QACrB,CAAiB,GAGD6M,EAAQ,EAAE,OAAA7M,GAAO,MAAMrB,GAAcC,CAAI,EAAC,CAAE;AAC5C;AAAA,MACH;AAGD,MAAAtQ,EAAS,6BAA6B;AAAA,QAClC,IAAAmL;AAAA,QACA,OAAAuG;AAAA,QACA,QAAQ;AAAA,UACJ,MAAM6N;AAAA,UACN,KAAKrgB,EAAM,QAAQ;AAAA,QACtB;AAAA,MACjB,CAAa;AAAA,IACb,CAAS,GAEDoR,EAAK,GAAG,mBAAmB,CAAAoB,MAAS;AAChC,MAAA1R,EAAS,0BAA0B;AAAA,QAC/B,IAAAmL;AAAA,QACA,OAAOuG,EAAM;AAAA,QACb,QAAQA,EAAM;AAAA,MAC9B,CAAa,GACD6M,EAAQ,EAAE,OAAO7M,EAAM,QAAQ,MAAMrB,GAAcC,CAAI,EAAC,CAAE;AAAA,IACtE,CAAS,GAEDA,EAAK,GAAG,cAAc,MAAM;AACxB,MAAAtQ,EAAS,eAAe,EAAE,OAAOmL,EAAI,CAAA;AAAA,IACjD,CAAS,GAEDmF,EAAK,GAAG,aAAa,MAAM;AACvB,MAAAtQ,EAAS,sBAAsB;AAAA,QAC3B,OAAOmL;AAAA,QACP,MAAAmF;AAAA,QACA,MAAM;AAAA,UACF,QAAAmG;AAAA,UACA,SAAAgG;AAAA,QACH;AAAA,MACjB,CAAa;AAAA,IACb,CAAS,GAEDnM,EAAK,GAAG,QAAQ,MAAM;AAClB,YAAMkP,IAAY,CAAAC,MAAa;AAE3B,YAAI,CAACA,GAAW;AACZ,UAAAzf,EAAS,eAAe;AAAA,YACpB,OAAOmL;AAAA,UAC/B,CAAqB;AACD;AAAA,QACH;AAGD,QAAAmF,EAAK,GAAG,mBAAmB,CAAAoO,MAAU;AACjC,UAAA1e,EAAS,4BAA4B,EAAE,IAAAmL,GAAI,QAAAuT,EAAQ,CAAA;AAAA,QACvE,CAAiB,GAIDxN,GAAiB,yBAAyB,IAAO,EAAE,MAAAZ,GAAM,OAAAnQ,EAAO,CAAA,EAAE;AAAA,UAC9D,CAAAwe,MAAuB;AAEnB,kBAAMC,IAAoBze,EAAM,yBAAyB;AACzD,YAAIye,MACAD,IAAsBC,EAAkBtO,GAAMqO,CAAmB;AAErE,kBAAMe,IAAe,MAAM;AACvB,cAAA1f,EAAS,sBAAsB;AAAA,gBAC3B,OAAOmL;AAAA,gBACP,MAAAmF;AAAA,gBACA,MAAM;AAAA,kBACF,QAAAmG;AAAA,kBACA,SAAAgG;AAAA,gBACH;AAAA,cACjC,CAA6B,GAEDwB,GAAYje,GAAUd,CAAK;AAAA,YACvD;AAGwB,gBAAIyf,GAAqB;AAErB,cAAA3e;AAAA,gBACI;AAAA,gBACA;AAAA,kBACI,OAAOmL;AAAA,kBACP,MAAAmF;AAAA,kBACA,SAAS,CAAAwE,MAAQ;AACb,oBAAA9U,EAAS,sBAAsB,EAAE,IAAAmL,GAAI,MAAA2J,EAAM,CAAA,GAC3C4K;kBACH;AAAA,gBACJ;AAAA,gBACD;AAAA,cAChC;AAE4B;AAAA,YACH;AAED,YAAAA;UACH;AAAA,QACrB;AAAA,MACA;AAKY,MAAAxO,GAAiB,iBAAiBZ,GAAM,EAAE,OAAAnQ,GAAO,UAAAH,EAAQ,CAAE,EACtD,KAAK,MAAM;AACR,QAAAke,GAAgB/d,EAAM,qBAAqB,GAAGkQ,GAAcC,CAAI,CAAC,EAAE;AAAA,UAC/DkP;AAAA,QACxB;AAAA,MACA,CAAiB,EACA,MAAM,CAAAphB,MAAK;AACR,YAAI,CAACA,KAAK,CAACA,EAAE,SAAS,CAACA,EAAE;AAAQ,iBAAOohB,EAAU,EAAK;AACvD,QAAAxf,EAAS,0BAA0B;AAAA,UAC/B,IAAAmL;AAAA,UACA,OAAO/M,EAAE;AAAA,UACT,QAAQA,EAAE;AAAA,QAClC,CAAqB;AAAA,MACrB,CAAiB;AAAA,IACjB,CAAS,GAEDkS,EAAK,GAAG,iBAAiB,MAAM;AAC3B,MAAAtQ,EAAS,6BAA6B,EAAE,IAAAmL,EAAE,CAAE;AAAA,IACxD,CAAS,GAEDmF,EAAK,GAAG,oBAAoB,CAAA8H,MAAY;AACpC,MAAApY,EAAS,oCAAoC,EAAE,IAAAmL,GAAI,UAAAiN,EAAU,CAAA;AAAA,IACzE,CAAS,GAED9H,EAAK,GAAG,iBAAiB,CAAAoB,MAAS;AAC9B,MAAA1R,EAAS,mCAAmC;AAAA,QACxC,IAAAmL;AAAA,QACA,OAAAuG;AAAA,QACA,QAAQ;AAAA,UACJ,MAAMoM,GAAa5e,EAAM,QAAQ,wBAAwB,EAAEwS,CAAK;AAAA,UAChE,KAAKxS,EAAM,QAAQ;AAAA,QACtB;AAAA,MACjB,CAAa;AAAA,IACb,CAAS,GAEDoR,EAAK,GAAG,wBAAwB,CAAAoB,MAAS;AACrC,MAAA1R,EAAS,0CAA0C;AAAA,QAC/C,IAAAmL;AAAA,QACA,OAAAuG;AAAA,QACA,QAAQ;AAAA,UACJ,MAAMoM,GAAa5e,EAAM,QAAQ,8BAA8B,EAAEwS,CAAK;AAAA,UACtE,KAAKxS,EAAM,QAAQ;AAAA,QACtB;AAAA,MACjB,CAAa;AAAA,IACb,CAAS,GAEDoR,EAAK,GAAG,oBAAoB,CAAA0L,MAAuB;AAC/C,MAAAhc,EAAS,gCAAgC;AAAA,QACrC,IAAAmL;AAAA,QACA,OAAO;AAAA,QACP,qBAAA6Q;AAAA,MAChB,CAAa,GACDhc,EAAS,oBAAoB,EAAE,IAAAmL,GAAI,OAAO6Q,EAAqB,CAAA;AAAA,IAC3E,CAAS,GAED1L,EAAK,GAAG,iBAAiB,MAAM;AAC3B,MAAAtQ,EAAS,6BAA6B,EAAE,IAAAmL,EAAE,CAAE;AAAA,IACxD,CAAS,GAEDmF,EAAK,GAAG,kBAAkB,MAAM;AAC5B,MAAAtQ,EAAS,8BAA8B,EAAE,IAAAmL,EAAE,CAAE,GAC7CnL,EAAS,oBAAoB,EAAE,IAAAmL,GAAI,OAAO,KAAM,CAAA;AAAA,IAC5D,CAAS,GAGDnL,EAAS,gBAAgB,EAAE,IAAAmL,GAAI,OAAArJ,GAAO,mBAAAkd,EAAmB,CAAA,GAEzDf,GAAYje,GAAUd,CAAK;AAG3B,UAAM,EAAE,KAAAR,GAAK,MAAAoY,GAAM,SAAA6I,GAAS,OAAAC,EAAO,IAAG1gB,EAAM,QAAQ,UAAU;AAE9D,IAAAoR,EAAK;AAAA,MACDmG;AAAA;AAAA,MAGAC;AAAA,QACIqF,MAAWrL,GAAW;AAAA;AAAA,UAEhBjE,GAASgK,CAAM,KAAKoH,GAAcpH,CAAM,KACpCmJ,IACI5H,GAAoBtZ,GAAKkhB,CAAK,IAElCjC;AAAA;AAAA;AAAA,UAEN5B,MAAWrL,GAAW,QACpBsH,GAAoBtZ,GAAKihB,CAAO,IAChC3H,GAAoBtZ,GAAKoY,CAAI;AAAA;AAAA;AAAA,MACtC;AAAA;AAAA,MAGD,CAAChC,GAAM2H,GAAS/K,MAAU;AAEtB,QAAAR,GAAiB,aAAa4D,GAAM,EAAE,OAAA3U,EAAK,CAAE,EACxC,KAAKsc,CAAO,EACZ,MAAM/K,CAAK;AAAA,MACnB;AAAA,IACb;AAAA,EACK;AAAA,EAED,wBAAwB,CAAC,EAAE,MAAApB,GAAM,SAAAmM,GAAS,SAAA8B,IAAU,MAAM;AAAA,EAAA,QAAS;AAE/D,UAAM3f,IAAM;AAAA,MACR,OAAO8Y,EAAe,SAAS,GAAG,gBAAgB;AAAA,MAClD,MAAM;AAAA,IAClB;AAGQ,QAAIpH,EAAK;AAAU,aAAOiO,EAAQ3f,CAAG;AAGrC,IAAAsS,GAAiB,kBAAkBZ,EAAK,MAAM,EAAE,OAAAnQ,GAAO,MAAAmQ,EAAM,CAAA,EAAE,KAAK,CAAAoM,MAAU;AAC1E,MAAAxL,GAAiB,2BAA2BwL,GAAQ,EAAE,OAAAvc,GAAO,MAAAmQ,GAAM,EAAE,KAAK,CAAAoM,MAAU;AAEhF,YAAIpM,EAAK;AAAU,iBAAOiO,EAAQ3f,CAAG;AAGrC,QAAA6d,EAAQC,CAAM;AAAA,MAC9B,CAAa;AAAA,IACb,CAAS;AAAA,EACJ;AAAA,EAED,oBAAoB,CAAC,EAAE,MAAApM,GAAM,MAAAvQ,QAAW;AACpC,UAAM,EAAE,SAAA0c,GAAS,QAAAhG,EAAQ,IAAG1W,GAGtBuf,IAAqBnf,EAAM,0BAA0B;AAiB3D,QAhBI8M,GAAWqS,CAAkB,KAAK7I,KAClC0H,GAAUjf,GAAOogB,CAAkB,GAIvCtf,EAAS,iBAAiB;AAAA,MACtB,IAAIsQ,EAAK;AAAA,MACT,OAAO;AAAA,MACP,qBAAqBA,EAAK,WAAWI,GAAW,QAAQ,OAAO+F;AAAA,IAC3E,CAAS,GAIDgG,EAAQpM,GAAcC,CAAI,CAAC,GAGvBA,EAAK,WAAWI,GAAW,OAAO;AAClC,MAAA1Q,EAAS,uBAAuB,EAAE,IAAIsQ,EAAK,GAAI,CAAA;AAC/C;AAAA,IACH;AAGD,QAAIA,EAAK,WAAWI,GAAW,OAAO;AAClC,MAAA1Q,EAAS,gCAAgC;AAAA,QACrC,IAAIsQ,EAAK;AAAA,QACT,OAAO;AAAA,QACP,qBAAqBmG;AAAA,MACrC,CAAa,GAEDzW,EAAS,oBAAoB;AAAA,QACzB,IAAIsQ,EAAK;AAAA,QACT,OAAOA,EAAK,YAAYmG;AAAA,MACxC,CAAa;AACD;AAAA,IACH;AAGD,IAAItW,EAAM,UAAU,KAAKjB,EAAM,QAAQ,iBACnCc,EAAS,2BAA2B,EAAE,OAAOsQ,EAAK,GAAI,CAAA;AAAA,EAE7D;AAAA,EAED,iBAAiB+N,GAAwBnf,GAAO,CAAAoR,MAAQ;AAEpD,IAAAA,EAAK,UAAS;AAAA,EACtB,CAAK;AAAA,EAED,sBAAsB+N,GAAwBnf,GAAO,CAACoR,GAAMmM,GAAS8B,MAAY;AAC7E,IAAAve;AAAA,MACI;AAAA,MACA;AAAA,QACI,OAAOsQ,EAAK;AAAA,QACZ,MAAAA;AAAA,QACA,SAAS,CAAAwE,MAAQ;AACb,UAAA9U,EAAS,sBAAsB,EAAE,IAAIsQ,EAAK,IAAI,MAAAwE,EAAI,CAAE,GACpD2H,EAAQ;AAAA,YACJ,MAAMnM;AAAA,YACN,QAAQwE;AAAA,UAChC,CAAqB;AAAA,QACJ;AAAA,QACD,SAAAyJ;AAAA,MACH;AAAA,MACD;AAAA,IACZ;AAAA,EACA,CAAK;AAAA,EAED,yBAAyBF,GAAwBnf,GAAO,CAACoR,GAAMmM,GAAS8B,MAAY;AAShF,QAAI;AAAA,KALAjO,EAAK,WAAWG,EAAW;AAAA,IAE3BH,EAAK,WAAWG,EAAW,mBAGI;AAC/B,YAAMoP,IAAa,MACf7f,EAAS,2BAA2B,EAAE,OAAOsQ,GAAM,SAAAmM,GAAS,SAAA8B,EAAO,CAAE,GAEnE9G,IAAU,MAAO,SAAS,SAASoI,EAAY,IAAG,WAAWA,GAAY,EAAE;AAGjF,MACIvP,EAAK,WAAWG,EAAW,uBAC3BH,EAAK,WAAWG,EAAW,0BAE3BH,EAAK;AAAA,QACDoK,GAAqBxb,EAAM,QAAQ,OAAO,KAAKA,EAAM,QAAQ,OAAO,MAAM;AAAA,QAC1EiB,EAAM,kBAAkB;AAAA,MAC3B,EACI,KAAKsX,CAAO,EACZ,MAAM,MAAM;AAAA,MAAA,CAAE,IACZnH,EAAK,WAAWG,EAAW,cAClCH,EAAK,gBAAe,EAAG,KAAKmH,CAAO;AAGvC;AAAA,IACH;AAGD,IAAInH,EAAK,WAAWG,EAAW,sBAE/BH,EAAK,kBAAiB,GAEtBtQ,EAAS,+BAA+B,EAAE,IAAIsQ,EAAK,GAAI,CAAA,GAEvDtQ,EAAS,gBAAgB,EAAE,OAAOsQ,GAAM,SAAAmM,GAAS,SAAA8B,EAAO,GAAI,EAAI;AAAA,EACxE,CAAK;AAAA,EAED,cAAcF,GAAwBnf,GAAO,CAACoR,GAAMmM,GAAS8B,MAAY;AACrE,UAAMuB,IAAqB3f,EAAM,0BAA0B;AAI3D,QAH4BA,EAAM,uBAAuBsQ,EAAW,UAAU,EAAE,WAGpDqP,GAAoB;AAE5C,MAAA5gB,EAAM,gBAAgB,KAAK;AAAA,QACvB,IAAIoR,EAAK;AAAA,QACT,SAAAmM;AAAA,QACA,SAAA8B;AAAA,MAChB,CAAa;AAGD;AAAA,IACH;AAGD,QAAIjO,EAAK,WAAWG,EAAW;AAAY;AAE3C,UAAMsP,IAAc,MAAM;AAEtB,YAAMC,IAAa9gB,EAAM,gBAAgB,MAAK;AAG9C,UAAI,CAAC8gB;AAAY;AAGjB,YAAM,EAAE,IAAA7U,GAAI,SAAAsR,GAAS,SAAA8B,EAAO,IAAKyB,GAC3BC,IAAgB9N,GAAejT,EAAM,OAAOiM,CAAE;AAGpD,UAAI,CAAC8U,KAAiBA,EAAc,UAAU;AAC1C,QAAAF;AACA;AAAA,MACH;AAGD,MAAA/f,EAAS,gBAAgB,EAAE,OAAOmL,GAAI,SAAAsR,GAAS,SAAA8B,EAAO,GAAI,EAAI;AAAA,IAC1E;AAGQ,IAAAjO,EAAK,OAAO,oBAAoB,MAAM;AAClC,MAAAmM,EAAQpM,GAAcC,CAAI,CAAC,GAC3ByP;AAIA,YAAMG,IAAShhB,EAAM,QAAQ;AAE7B,UADsBA,EAAM,QAAQ,iBACfoR,EAAK,WAAWI,GAAW,SAASzD,GAAWiT,EAAO,MAAM,GAAG;AAChF,cAAMC,IAAO,MAAM;AAAA;AACnB,QAAA7P,EAAK,SAASI,GAAW,OACzBxR,EAAM,QAAQ,OAAO,OAAOoR,EAAK,QAAQ6P,GAAMA,CAAI;AAAA,MACtD;AAMD,MAFIhgB,EAAM,uBAAuBsQ,EAAW,mBAAmB,EAAE,WAC7DvR,EAAM,MAAM,UAEZc,EAAS,kCAAkC;AAAA,IAE3D,CAAS,GAGDsQ,EAAK,OAAO,iBAAiB,CAAAoB,MAAS;AAClC,MAAA6M,EAAQ,EAAE,OAAA7M,GAAO,MAAMrB,GAAcC,CAAI,EAAC,CAAE,GAC5CyP;IACZ,CAAS;AAGD,UAAMphB,IAAUO,EAAM;AACtB,IAAAoR,EAAK;AAAA,MACD2K;AAAA,QACIT,GAAwB7b,EAAQ,OAAO,KAAKA,EAAQ,OAAO,SAASA,EAAQ,MAAM;AAAA,UAC9E,iBAAiB2R,EAAK;AAAA,UACtB,aAAa3R,EAAQ,OAAO;AAAA,UAC5B,cAAcA,EAAQ;AAAA,UACtB,YAAYA,EAAQ;AAAA,UACpB,WAAWA,EAAQ;AAAA,UACnB,kBAAkBA,EAAQ;AAAA,QAC9C,CAAiB;AAAA,QACD;AAAA,UACI,4BAA4BwB,EAAM,mCAAmC;AAAA,QACxE;AAAA,MACJ;AAAA;AAAA,MAED,CAAC2U,GAAM2H,GAAS/K,MAAU;AAEtB,QAAAR,GAAiB,kBAAkB4D,GAAM,EAAE,OAAA3U,GAAO,MAAAmQ,EAAI,CAAE,EACnD,KAAK,CAAAwE,MAAQ;AACV,UAAA9U,EAAS,sBAAsB,EAAE,IAAIsQ,EAAK,IAAI,MAAAwE,EAAI,CAAE,GAEpD2H,EAAQ3H,CAAI;AAAA,QACpC,CAAqB,EACA,MAAMpD,CAAK;AAAA,MACnB;AAAA,IACb;AAAA,EACA,CAAK;AAAA,EAED,uBAAuB2M,GAAwBnf,GAAO,CAAAoR,MAAQ;AAC1D,IAAAtQ,EAAS,2BAA2B,EAAE,OAAOsQ,EAAM,CAAA;AAAA,EAC3D,CAAK;AAAA,EAED,qBAAqB+N,GAAwBnf,GAAO,CAAAoR,MAAQ;AACxD,IAAA4N,GAAgB/d,EAAM,wBAAwB,GAAGkQ,GAAcC,CAAI,CAAC,EAAE,KAAK,CAAA8P,MAAgB;AACvF,MAAKA,KAGLpgB,EAAS,eAAe,EAAE,OAAOsQ,EAAM,CAAA;AAAA,IACnD,CAAS;AAAA,EACT,CAAK;AAAA,EAED,cAAc+N,GAAwBnf,GAAO,CAAAoR,MAAQ;AACjD,IAAAA,EAAK,QAAO;AAAA,EACpB,CAAK;AAAA,EAED,aAAa+N,GAAwBnf,GAAO,CAACoR,GAAMmM,GAAS8B,GAAS5f,MAAY;AAC7E,UAAM0hB,IAAiB,MAAM;AAEzB,YAAMlV,IAAKmF,EAAK;AAGhB,MAAAmN,GAAYve,EAAM,OAAOiM,CAAE,EAAE,QAAO,GAGpCnL,EAAS,mBAAmB,EAAE,OAAO,MAAM,IAAAmL,GAAI,MAAAmF,EAAI,CAAE,GAGrD2N,GAAYje,GAAUd,CAAK,GAG3Bud,EAAQpM,GAAcC,CAAI,CAAC;AAAA,IACvC,GAIc4P,IAAShhB,EAAM,QAAQ;AAC7B,IACIoR,EAAK,WAAWI,GAAW,SAC3BwP,KACAjT,GAAWiT,EAAO,MAAM,KACxBvhB,EAAQ,WAAW,MAEnBqB,EAAS,yBAAyB,EAAE,IAAIsQ,EAAK,GAAI,CAAA,GAEjD4P,EAAO;AAAA,MACH5P,EAAK;AAAA,MACL,MAAM+P,EAAgB;AAAA,MACtB,CAAA7M,MAAU;AACN,QAAAxT,EAAS,+BAA+B;AAAA,UACpC,IAAIsQ,EAAK;AAAA,UACT,OAAOoH,EAAe,SAAS,GAAGlE,GAAQ,IAAI;AAAA,UAC9C,QAAQ;AAAA,YACJ,MAAMsK,GAAa5e,EAAM,QAAQ,oBAAoB,EAAEsU,CAAM;AAAA,YAC7D,KAAKtU,EAAM,QAAQ;AAAA,UACtB;AAAA,QACzB,CAAqB;AAAA,MACJ;AAAA,IACjB,OAIiBP,EAAQ,UAAU2R,EAAK,WAAWI,GAAW,SAASJ,EAAK,aAAa;AAAA;AAAA;AAAA,IAIxEpR,EAAM,QAAQ,gBAAgBoR,EAAK,KAAK,OAAOpR,EAAM,QAAQ,aAC7DA,EAAM,QAAQ,gBAAgBA,EAAM,QAAQ,eAE7CoR,EAAK;AAAA,MACDoK,GAAqBxb,EAAM,QAAQ,OAAO,KAAKA,EAAM,QAAQ,OAAO,MAAM;AAAA,MAC1EiB,EAAM,kBAAkB;AAAA,IAC5C,GAIYkgB;EAEZ,CAAK;AAAA,EAED,iBAAiBhC,GAAwBnf,GAAO,CAAAoR,MAAQ;AACpD,IAAAA,EAAK,UAAS;AAAA,EACtB,CAAK;AAAA,EAED,uBAAuB+N,GAAwBnf,GAAO,CAAAoR,MAAQ;AAE1D,QAAIA,EAAK,UAAU;AACf,MAAAtQ,EAAS,0BAA0B,EAAE,IAAIsQ,EAAK,GAAI,CAAA;AAClD;AAAA,IACH;AAGD,IAAAA,EAAK,kBAAkB,KAAK,MAAM;AAE9B,MADqBpR,EAAM,QAAQ,iBAE/Bc,EAAS,eAAe,EAAE,OAAOsQ,EAAK,GAAI,CAAA;AAAA,IAE1D,CAAS;AAAA,EACT,CAAK;AAAA,EAED,gCAAgC+N,GAAwBnf,GAAO,CAAAoR,MAAQ;AAEnE,QAAI,CAACpR,EAAM,QAAQ,eAAe;AAC9B,MAAAc,EAAS,0BAA0B,EAAE,OAAOsQ,EAAM,CAAA;AAClD;AAAA,IACH;AAID,UAAMgQ,IAAe,CAAAC,MAAgB;AACjC,MAAKA,KACLvgB,EAAS,0BAA0B,EAAE,OAAOsQ,EAAM,CAAA;AAAA,IAC9D,GAEcjS,IAAK8B,EAAM,wBAAwB;AACzC,QAAI,CAAC9B;AACD,aAAOiiB,EAAa,EAAI;AAG5B,UAAME,IAAsBniB,EAAGgS,GAAcC,CAAI,CAAC;AAClD,QAAIkQ,KAAuB;AAEvB,aAAOF,EAAa,EAAI;AAG5B,QAAI,OAAOE,KAAwB;AAC/B,aAAOF,EAAaE,CAAmB;AAG3C,IAAI,OAAOA,EAAoB,QAAS,cACpCA,EAAoB,KAAKF,CAAY;AAAA,EAEjD,CAAK;AAAA,EAED,wBAAwBjC,GAAwBnf,GAAO,CAAAoR,MAAQ;AAC3D,IAAAA,EAAK;AAAA,MACDoK,GAAqBxb,EAAM,QAAQ,OAAO,KAAKA,EAAM,QAAQ,OAAO,MAAM;AAAA,MAC1EiB,EAAM,kBAAkB;AAAA,IAC3B,EACI,KAAK,MAAM;AAER,OADqBjB,EAAM,QAAQ,iBAAiB8e,GAAW1N,CAAI,MAE/DtQ,EAAS,eAAe,EAAE,OAAOsQ,EAAK,GAAI,CAAA;AAAA,IAE9D,CAAa,EACA,MAAM,MAAM;AAAA,IAAA,CAAE;AAAA,EAC3B,CAAK;AAAA,EAED,aAAa,CAAC,EAAE,SAAA3R,QAAc;AAE1B,UAAM8hB,IAAa,OAAO,KAAK9hB,CAAO,GAGhC+hB,IAAwBC,GAAmB,OAAO,CAAA5f,MAAO0f,EAAW,SAAS1f,CAAG,CAAC;AAYvF,IAT0B;AAAA;AAAA,MAEtB,GAAG2f;AAAA;AAAA,MAGH,GAAG,OAAO,KAAK/hB,CAAO,EAAE,OAAO,CAAAoC,MAAO,CAAC2f,EAAsB,SAAS3f,CAAG,CAAC;AAAA,IACtF,EAG0B,QAAQ,CAAAA,MAAO;AAC7B,MAAAf,EAAS,OAAOiP,GAAWlO,GAAK,GAAG,EAAE,YAAa,CAAA,IAAI;AAAA,QAClD,OAAOpC,EAAQoC,CAAG;AAAA,MAClC,CAAa;AAAA,IACb,CAAS;AAAA,EACJ;AACL,IAEM4f,KAAqB;AAAA,EACvB;AAAA;AACJ,GAEMC,KAAiB,CAAA7hB,MAAQA,GAEzB8hB,KAAkB,CAAAC,MACb,SAAS,cAAcA,CAAO,GAGnCC,KAAO,CAAC7f,GAAMlC,MAAU;AAC1B,MAAIgiB,IAAW9f,EAAK,WAAW,CAAC;AAChC,EAAK8f,IAGMhiB,MAAUgiB,EAAS,cAC1BA,EAAS,YAAYhiB,MAHrBgiB,IAAW,SAAS,eAAehiB,CAAK,GACxCkC,EAAK,YAAY8f,CAAQ;AAIjC,GAEMC,KAAmB,CAACC,GAASC,GAASC,GAAQC,MAAmB;AACnE,QAAMC,KAAoBD,IAAiB,MAAO,MAAM,KAAK,KAAM;AACnE,SAAO;AAAA,IACH,GAAGH,IAAUE,IAAS,KAAK,IAAIE,CAAc;AAAA,IAC7C,GAAGH,IAAUC,IAAS,KAAK,IAAIE,CAAc;AAAA,EACrD;AACA,GAEMC,KAAc,CAACC,GAAGC,GAAGL,GAAQM,GAAYC,GAAUC,MAAa;AAClE,QAAMnd,IAAQwc,GAAiBO,GAAGC,GAAGL,GAAQO,CAAQ,GAC/CE,IAAMZ,GAAiBO,GAAGC,GAAGL,GAAQM,CAAU;AACrD,SAAO,CAAC,KAAKjd,EAAM,GAAGA,EAAM,GAAG,KAAK2c,GAAQA,GAAQ,GAAGQ,GAAU,GAAGC,EAAI,GAAGA,EAAI,CAAC,EAAE,KAAK,GAAG;AAC9F,GAEMC,KAAgB,CAACN,GAAGC,GAAGL,GAAQW,GAAMC,MAAO;AAC9C,MAAIJ,IAAW;AACf,SAAII,IAAKD,KAAQC,IAAKD,KAAQ,QAC1BH,IAAW,IAEXG,IAAOC,KAAMD,IAAOC,KAAM,QAC1BJ,IAAW,IAERL;AAAA,IACHC;AAAA,IACAC;AAAA,IACAL;AAAA,IACA,KAAK,IAAI,QAAQW,CAAI,IAAI;AAAA,IACzB,KAAK,IAAI,QAAQC,CAAE,IAAI;AAAA,IACvBJ;AAAA,EACR;AACA,GAEMtZ,KAAS,CAAC,EAAE,MAAAqD,GAAM,OAAA3G,QAAY;AAEhC,EAAAA,EAAM,OAAO,IACbA,EAAM,WAAW,GACjBA,EAAM,UAAU;AAGhB,QAAMid,IAAM1gB,GAAc,KAAK;AAC/B,EAAAoK,EAAK,IAAI,OAAOpK,GAAc,QAAQ;AAAA,IAClC,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,EAC1B,CAAK,GACD0gB,EAAI,YAAYtW,EAAK,IAAI,IAAI,GAE7BA,EAAK,IAAI,MAAMsW,GAEftW,EAAK,YAAYsW,CAAG;AACxB,GAEM5Z,KAAQ,CAAC,EAAE,MAAAsD,GAAM,OAAA3G,QAAY;AAC/B,MAAIA,EAAM,YAAY;AAClB;AAGJ,EAAIA,EAAM,UACN2G,EAAK,QAAQ,QAAQ,QAAQ3G,EAAM;AAIvC,QAAMkd,IAAkB,SAASjhB,GAAK0K,EAAK,IAAI,MAAM,cAAc,GAAG,EAAE,GAGlEyK,IAAOzK,EAAK,KAAK,QAAQ,QAAQ;AAGvC,MAAIwW,IAAW,GACXC,IAAS;AAGb,EAAIpd,EAAM,QACNmd,IAAW,GACXC,IAAS,QAETD,IAAW,GACXC,IAASpd,EAAM;AAInB,QAAMqd,IAAcP,GAAc1L,GAAMA,GAAMA,IAAO8L,GAAiBC,GAAUC,CAAM;AAGtF,EAAAnhB,GAAK0K,EAAK,IAAI,MAAM,KAAK0W,CAAW,GAGpCphB,GAAK0K,EAAK,IAAI,MAAM,kBAAkB3G,EAAM,QAAQA,EAAM,WAAW,IAAI,IAAI,CAAC;AAClF,GAEMsd,KAAoBna,GAAW;AAAA,EACjC,KAAK;AAAA,EACL,MAAM;AAAA,EACN,kBAAkB;AAAA,EAClB,YAAY;AAAA,EACZ,QAAAG;AAAA,EACA,OAAAD;AAAA,EACA,QAAQ;AAAA,IACJ,MAAM,CAAC,YAAY,QAAQ,OAAO;AAAA,IAClC,QAAQ,CAAC,SAAS;AAAA,IAClB,YAAY;AAAA,MACR,SAAS,EAAE,MAAM,SAAS,UAAU,IAAK;AAAA,MACzC,UAAU;AAAA,QACN,MAAM;AAAA,QACN,WAAW;AAAA,QACX,SAAS;AAAA,QACT,MAAM;AAAA,MACT;AAAA,IACJ;AAAA,EACJ;AACL,CAAC,GAEKka,KAAW,CAAC,EAAE,MAAA5W,GAAM,OAAA3G,QAAY;AAClC,EAAA2G,EAAK,QAAQ,aAAa3G,EAAM,QAAQ,MAAM,SAASA,EAAM,KAAK,WAElEA,EAAM,aAAa;AACvB,GAEMwd,KAAU,CAAC,EAAE,MAAA7W,GAAM,OAAA3G,QAAY;AACjC,QAAM,EAAE,YAAAyd,EAAY,IAAGzd,GACjB0d,IAAgB/W,EAAK,MAAM,cAAc,KAAK3G,EAAM,YAAY;AAEtE,EAAI0d,KAAiB,CAACD,KAClBzd,EAAM,aAAa,IACnB/D,GAAK0K,EAAK,SAAS,YAAY,UAAU,KAClC,CAAC+W,KAAiBD,MACzBzd,EAAM,aAAa,IACnB2G,EAAK,QAAQ,gBAAgB,UAAU;AAE/C,GAEMgX,KAAmBxa,GAAW;AAAA,EAChC,KAAK;AAAA,EACL,YAAY;AAAA,IACR,MAAM;AAAA,EACT;AAAA,EACD,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,MAAM,CAAC,OAAO;AAAA,IACd,QAAQ,CAAC,cAAc,cAAc,UAAU,UAAU,SAAS;AAAA,IAClE,YAAY;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,SAAS,EAAE,MAAM,SAAS,UAAU,IAAK;AAAA,IAC5C;AAAA,IACD,WAAW;AAAA,EACd;AAAA,EACD,QAAQoa;AAAA,EACR,OAAOC;AACX,CAAC,GAEKI,KAAoB,CAACC,GAAO/R,IAAmB,KAAK/D,IAAO,KAAMpO,IAAU,OAAO;AACpF,QAAM;AAAA,IACF,YAAAmkB,IAAa;AAAA,IACb,gBAAAC,IAAiB;AAAA,IACjB,gBAAAC,IAAiB;AAAA,IACjB,gBAAAC,IAAiB;AAAA,EACpB,IAAGtkB;AAGJ,EAAAkkB,IAAQ,KAAK,MAAM,KAAK,IAAIA,CAAK,CAAC;AAElC,QAAMK,IAAKnW,GACLoW,IAAKpW,IAAOA,GACZqW,IAAKrW,IAAOA,IAAOA;AAGzB,SAAI8V,IAAQK,IACD,GAAGL,CAAK,IAAIC,CAAU,KAI7BD,IAAQM,IACD,GAAG,KAAK,MAAMN,IAAQK,CAAE,CAAC,IAAIH,CAAc,KAIlDF,IAAQO,IACD,GAAGC,GAAuBR,IAAQM,GAAI,GAAGrS,CAAgB,CAAC,IAAIkS,CAAc,KAIhF,GAAGK,GAAuBR,IAAQO,GAAI,GAAGtS,CAAgB,CAAC,IAAImS,CAAc;AACvF,GAEMI,KAAyB,CAACrkB,GAAOskB,GAAcpU,MAC1ClQ,EACF,QAAQskB,CAAY,EACpB,MAAM,GAAG,EACT,OAAO,CAAAnU,MAAQA,MAAS,GAAG,EAC3B,KAAKD,CAAS,GAGjBqU,KAAW,CAAC,EAAE,MAAA5X,GAAM,OAAA3G,QAAY;AAElC,QAAMwe,IAAW3C,GAAgB,MAAM;AACvC,EAAA2C,EAAS,YAAY,4BAIrBviB,GAAKuiB,GAAU,eAAe,MAAM,GACpC7X,EAAK,YAAY6X,CAAQ,GACzB7X,EAAK,IAAI,WAAW6X;AAGpB,QAAMC,IAAW5C,GAAgB,MAAM;AACvC,EAAA4C,EAAS,YAAY,2BACrB9X,EAAK,YAAY8X,CAAQ,GACzB9X,EAAK,IAAI,WAAW8X,GAGpB1C,GAAK0C,GAAU9X,EAAK,MAAM,iCAAiC,CAAC,GAC5DoV,GAAKyC,GAAU5C,GAAejV,EAAK,MAAM,iBAAiB3G,EAAM,EAAE,CAAC,CAAC;AACxE,GAEM0e,KAAa,CAAC,EAAE,MAAA/X,GAAM,OAAA3G,QAAY;AACpC,EAAA+b;AAAA,IACIpV,EAAK,IAAI;AAAA,IACTiX;AAAA,MACIjX,EAAK,MAAM,iBAAiB3G,EAAM,EAAE;AAAA,MACpC;AAAA,MACA2G,EAAK,MAAM,oBAAoB;AAAA,MAC/BA,EAAK,MAAM,wBAAwBA,EAAK,KAAK;AAAA,IAChD;AAAA,EACT,GACIoV,GAAKpV,EAAK,IAAI,UAAUiV,GAAejV,EAAK,MAAM,iBAAiB3G,EAAM,EAAE,CAAC,CAAC;AACjF,GAEM2e,KAAwB,CAAC,EAAE,MAAAhY,GAAM,OAAA3G,QAAY;AAE/C,MAAI6H,GAAMlB,EAAK,MAAM,iBAAiB3G,EAAM,EAAE,CAAC,GAAG;AAC9C,IAAA0e,GAAW,EAAE,MAAA/X,GAAM,OAAA3G,EAAK,CAAE;AAC1B;AAAA,EACH;AAED,EAAA+b,GAAKpV,EAAK,IAAI,UAAUA,EAAK,MAAM,mCAAmC,CAAC;AAC3E,GAEMiY,KAAWzb,GAAW;AAAA,EACxB,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,OAAOsD,GAAY;AAAA,IACf,eAAeiY;AAAA,IACf,sBAAsBA;AAAA,IACtB,2BAA2BC;AAAA,IAC3B,wBAAwBA;AAAA,EAChC,CAAK;AAAA,EACD,eAAe,CAAAhY,MAAQ;AACnB,IAAAgG,GAAa,eAAe,EAAE,GAAGhG,GAAM,MAAMA,EAAI,CAAE;AAAA,EACtD;AAAA,EACD,QAAQ4X;AAAA,EACR,QAAQ;AAAA,IACJ,QAAQ,CAAC,cAAc,YAAY;AAAA,IACnC,YAAY;AAAA,MACR,YAAY;AAAA,MACZ,YAAY;AAAA,IACf;AAAA,EACJ;AACL,CAAC,GAEKM,KAAe,CAAA7kB,MAAS,KAAK,MAAMA,IAAQ,GAAG,GAE9C8kB,KAAW,CAAC,EAAE,MAAAnY,QAAW;AAE3B,QAAMoY,IAAOlD,GAAgB,MAAM;AACnC,EAAAkD,EAAK,YAAY,8BACjBpY,EAAK,YAAYoY,CAAI,GACrBpY,EAAK,IAAI,OAAOoY;AAGhB,QAAMC,IAAMnD,GAAgB,MAAM;AAClC,EAAAmD,EAAI,YAAY,6BAChBrY,EAAK,YAAYqY,CAAG,GACpBrY,EAAK,IAAI,MAAMqY,GAEfC,GAAuB,EAAE,MAAAtY,GAAM,QAAQ,EAAE,UAAU,KAAM,EAAA,CAAE;AAC/D,GAEMsY,KAAyB,CAAC,EAAE,MAAAtY,GAAM,QAAAnL,QAAa;AACjD,QAAM0jB,IACF1jB,EAAO,aAAa,OACdmL,EAAK,MAAM,wBAAwB,IACnC,GAAGA,EAAK,MAAM,wBAAwB,CAAC,IAAIkY,GAAarjB,EAAO,QAAQ,CAAC;AAClF,EAAAugB,GAAKpV,EAAK,IAAI,MAAMuY,CAAK,GACzBnD,GAAKpV,EAAK,IAAI,KAAKA,EAAK,MAAM,yBAAyB,CAAC;AAC5D,GAEMwY,KAA4B,CAAC,EAAE,MAAAxY,GAAM,QAAAnL,QAAa;AACpD,QAAM0jB,IACF1jB,EAAO,aAAa,OACdmL,EAAK,MAAM,2BAA2B,IACtC,GAAGA,EAAK,MAAM,2BAA2B,CAAC,IAAIkY,GAAarjB,EAAO,QAAQ,CAAC;AACrF,EAAAugB,GAAKpV,EAAK,IAAI,MAAMuY,CAAK,GACzBnD,GAAKpV,EAAK,IAAI,KAAKA,EAAK,MAAM,yBAAyB,CAAC;AAC5D,GAEMyY,KAA2B,CAAC,EAAE,MAAAzY,QAAW;AAC3C,EAAAoV,GAAKpV,EAAK,IAAI,MAAMA,EAAK,MAAM,2BAA2B,CAAC,GAC3DoV,GAAKpV,EAAK,IAAI,KAAKA,EAAK,MAAM,yBAAyB,CAAC;AAC5D,GAEM0Y,KAAyB,CAAC,EAAE,MAAA1Y,QAAW;AACzC,EAAAoV,GAAKpV,EAAK,IAAI,MAAMA,EAAK,MAAM,mCAAmC,CAAC,GACnEoV,GAAKpV,EAAK,IAAI,KAAKA,EAAK,MAAM,wBAAwB,CAAC;AAC3D,GAEM2Y,KAA4B,CAAC,EAAE,MAAA3Y,QAAW;AAC5C,EAAAoV,GAAKpV,EAAK,IAAI,MAAMA,EAAK,MAAM,oCAAoC,CAAC,GACpEoV,GAAKpV,EAAK,IAAI,KAAKA,EAAK,MAAM,uBAAuB,CAAC;AAC1D,GAEM4Y,KAAQ,CAAC,EAAE,MAAA5Y,QAAW;AACxB,EAAAoV,GAAKpV,EAAK,IAAI,MAAM,EAAE,GACtBoV,GAAKpV,EAAK,IAAI,KAAK,EAAE;AACzB,GAEM+F,KAAQ,CAAC,EAAE,MAAA/F,GAAM,QAAAnL,QAAa;AAChC,EAAAugB,GAAKpV,EAAK,IAAI,MAAMnL,EAAO,OAAO,IAAI,GACtCugB,GAAKpV,EAAK,IAAI,KAAKnL,EAAO,OAAO,GAAG;AACxC,GAEMgkB,KAAarc,GAAW;AAAA,EAC1B,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,OAAOsD,GAAY;AAAA,IACf,eAAe8Y;AAAA,IACf,4BAA4BA;AAAA,IAC5B,6BAA6BH;AAAA,IAC7B,2BAA2BC;AAAA,IAC3B,8BAA8BC;AAAA,IAC9B,kCAAkCH;AAAA,IAClC,+BAA+BF;AAAA,IAC/B,2BAA2BvS;AAAA,IAC3B,wBAAwBA;AAAA,IACxB,iCAAiCA;AAAA,IACjC,wCAAwCA;AAAA,IACxC,6BAA6BA;AAAA,EACrC,CAAK;AAAA,EACD,eAAe,CAAA/F,MAAQ;AACnB,IAAAgG,GAAa,eAAe,EAAE,GAAGhG,GAAM,MAAMA,EAAI,CAAE;AAAA,EACtD;AAAA,EACD,QAAQmY;AAAA,EACR,QAAQ;AAAA,IACJ,QAAQ,CAAC,cAAc,cAAc,SAAS;AAAA,IAC9C,YAAY;AAAA,MACR,SAAS,EAAE,MAAM,SAAS,UAAU,IAAK;AAAA,MACzC,YAAY;AAAA,MACZ,YAAY;AAAA,IACf;AAAA,EACJ;AACL,CAAC,GAMKW,KAAU;AAAA,EACZ,eAAe;AAAA,IACX,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,OAAO;AAAA;AAAA,EACV;AAAA,EACD,eAAe;AAAA,IACX,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO;AAAA;AAAA,EACV;AAAA,EACD,YAAY;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO;AAAA;AAAA,EACV;AAAA,EACD,aAAa;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO;AAAA;AAAA,EACV;AAAA,EACD,qBAAqB;AAAA,IACjB,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,OAAO;AAAA;AAAA,EACV;AAAA,EACD,qBAAqB;AAAA,IACjB,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO;AAAA;AAAA,EACV;AAAA,EACD,sBAAsB;AAAA,IAClB,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO;AAAA;AAAA,EACV;AACL,GAGMC,KAAa,CAAA;AACnB7jB,EAAM4jB,IAAS,CAAA1jB,MAAO;AAClB,EAAA2jB,GAAW,KAAK3jB,CAAG;AACvB,CAAC;AAED,MAAM4jB,KAA0B,CAAAhZ,MAAQ;AACpC,MAAIiZ,GAA2BjZ,CAAI,MAAM;AAAS,WAAO;AACzD,QAAMkZ,IAAalZ,EAAK,IAAI,iBAAiB,KAAK;AAClD,SAAOkZ,EAAW,SAAS,OAAOA,EAAW,QAAQA,EAAW;AACpE,GAEMC,KAAuB,CAAAnZ,MACNA,EAAK,IAAI,oBAAoB,KAAK,QACnC,OAIhBoZ,KAAoC,CAAApZ,MACtC,KAAK,MAAMA,EAAK,IAAI,iBAAiB,KAAK,QAAQ,SAAS,CAAC,GAC1DqZ,KAAsC,CAAArZ,MACxC,KAAK,MAAMA,EAAK,IAAI,iBAAiB,KAAK,QAAQ,OAAO,CAAC,GAExDsZ,KAA4B,CAAAtZ,MAAQA,EAAK,MAAM,mCAAmC,GAClFuZ,KAA+B,CAAAvZ,MAAQA,EAAK,MAAM,uCAAuC,GACzFiZ,KAA6B,CAAAjZ,MAAQA,EAAK,MAAM,uCAAuC,GAEvFwZ,KAAe;AAAA,EACjB,qBAAqB,EAAE,SAAS,EAAG;AAAA,EACnC,qBAAqB,EAAE,SAAS,EAAG;AAAA,EACnC,kBAAkB,EAAE,SAAS,EAAG;AAAA,EAChC,mBAAmB,EAAE,SAAS,EAAG;AAAA,EACjC,2BAA2B,EAAE,SAAS,EAAG;AAAA,EACzC,2BAA2B,EAAE,SAAS,EAAG;AAAA,EACzC,4BAA4B,EAAE,SAAS,EAAG;AAAA,EAC1C,uBAAuB,EAAE,SAAS,GAAG,OAAOF,GAA2B;AAAA,EACvE,0BAA0B,EAAE,SAAS,GAAG,OAAOC,GAA8B;AAAA,EAC7E,6BAA6B,EAAE,SAAS,GAAG,QAAQ,MAAM,QAAQ,KAAM;AAAA,EACvE,MAAM,EAAE,YAAY,GAAG,YAAY,GAAG,SAAS,EAAG;AAAA,EAClD,QAAQ,EAAE,YAAY,GAAG,YAAY,GAAG,SAAS,EAAG;AACxD,GAEME,KAAY;AAAA,EACd,kBAAkB,EAAE,SAAS,EAAG;AAAA,EAChC,mBAAmB,EAAE,SAAS,EAAG;AAAA,EACjC,MAAM,EAAE,YAAYT,GAAyB;AAAA,EAC7C,QAAQ,EAAE,YAAYA,GAAyB;AACnD,GAEMU,KAAkB;AAAA,EACpB,2BAA2B,EAAE,SAAS,EAAG;AAAA,EACzC,0BAA0B,EAAE,SAAS,EAAG;AAAA,EACxC,QAAQ,EAAE,SAAS,EAAG;AAC1B,GAEMC,KAAW;AAAA,EACb,wBAAwB;AAAA,IACpB,kBAAkB,EAAE,SAAS,EAAG;AAAA,IAChC,MAAM,EAAE,YAAYX,GAAyB;AAAA,IAC7C,QAAQ,EAAE,YAAYA,IAAyB,SAAS,EAAG;AAAA,EAC9D;AAAA,EACD,qBAAqB;AAAA,IACjB,qBAAqB,EAAE,SAAS,EAAG;AAAA,IACnC,uBAAuB,EAAE,SAAS,EAAG;AAAA,IACrC,QAAQ,EAAE,SAAS,EAAG;AAAA,EACzB;AAAA,EACD,2BAA2B;AAAA,IACvB,qBAAqB,EAAE,SAAS,EAAG;AAAA,IACnC,kBAAkB,EAAE,SAAS,EAAG;AAAA,IAChC,MAAM,EAAE,YAAYA,GAAyB;AAAA,IAC7C,QAAQ,EAAE,SAAS,EAAG;AAAA,EACzB;AAAA,EACD,uBAAuB;AAAA,IACnB,0BAA0B,EAAE,SAAS,GAAG,OAAOC,GAA4B;AAAA,IAC3E,MAAM,EAAE,YAAYD,GAAyB;AAAA,IAC7C,QAAQ,EAAE,SAAS,EAAG;AAAA,EACzB;AAAA,EACD,6BAA6B;AAAA,IACzB,0BAA0B,EAAE,SAAS,GAAG,OAAOC,GAA4B;AAAA,IAC3E,kBAAkB,EAAE,SAAS,EAAG;AAAA,IAChC,MAAM,EAAE,YAAYD,GAAyB;AAAA,IAC7C,QAAQ,EAAE,SAAS,GAAG,YAAYA,GAAyB;AAAA,EAC9D;AAAA,EACD,eAAeS;AAAA,EACf,qBAAqB;AAAA,IACjB,kBAAkB,EAAE,SAAS,EAAG;AAAA,IAChC,MAAM,EAAE,YAAYT,GAAyB;AAAA,IAC7C,QAAQ,EAAE,YAAYA,GAAyB;AAAA,EAClD;AAAA,EACD,2BAA2BU;AAAA,EAC3B,6BAA6BA;AAAA,EAC7B,kCAAkCA;AAAA,EAClC,8BAA8B;AAAA,IAC1B,4BAA4B,EAAE,SAAS,EAAG;AAAA,IAC1C,MAAM,EAAE,SAAS,EAAG;AAAA,IACpB,QAAQ,EAAE,SAAS,EAAG;AAAA,EACzB;AAAA,EACD,iCAAiC;AAAA,IAC7B,kBAAkB,EAAE,SAAS,EAAG;AAAA,IAChC,2BAA2B,EAAE,SAAS,EAAG;AAAA,IACzC,QAAQ,EAAE,SAAS,EAAG;AAAA,IACtB,MAAM,EAAE,YAAYV,GAAyB;AAAA,EAChD;AAAA,EACD,wCAAwC;AAAA,IACpC,4BAA4B,EAAE,SAAS,EAAG;AAAA,IAC1C,QAAQ,EAAE,SAAS,EAAG;AAAA,IACtB,MAAM,EAAE,SAAS,EAAG;AAAA,EACvB;AAAA,EACD,2BAA2B;AAAA,IACvB,kBAAkB,EAAE,SAAS,EAAG;AAAA,IAChC,mBAAmB,EAAE,SAAS,EAAG;AAAA,IACjC,MAAM,EAAE,YAAYA,GAAyB;AAAA,IAC7C,QAAQ,EAAE,SAAS,EAAG;AAAA,EACzB;AAAA,EACD,4BAA4BS;AAChC,GAGMG,KAAkCpd,GAAW;AAAA,EAC/C,QAAQ,CAAC,EAAE,MAAAwD,QAAW;AAClB,IAAAA,EAAK,QAAQ,YAAYA,EAAK,MAAM,eAAe;AAAA,EACtD;AAAA,EACD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,QAAQ;AAAA,IACJ,QAAQ,CAAC,UAAU,UAAU,SAAS;AAAA,IACtC,YAAY;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,SAAS,EAAE,MAAM,SAAS,UAAU,IAAK;AAAA,IAC5C;AAAA,EACJ;AACL,CAAC,GAKK6Z,KAAW,CAAC,EAAE,MAAA7Z,GAAM,OAAA3G,QAAY;AAElC,QAAMygB,IAAe,OAAO,KAAKhB,EAAO,EAAE,OAAO,CAAClmB,GAAMmnB,OACpDnnB,EAAKmnB,CAAI,IAAI,EAAE,GAAGjB,GAAQiB,CAAI,EAAC,GACxBnnB,IACR,CAAE,CAAA,GAEC,EAAE,IAAA4M,EAAI,IAAGnG,GAGT2gB,IAAcha,EAAK,MAAM,kBAAkB,GAG3Cia,IAAcja,EAAK,MAAM,kBAAkB,GAG3Cka,IAAela,EAAK,MAAM,mBAAmB,GAG7Cma,IAAgBna,EAAK,MAAM,oBAAoB,GAG/CsH,IAAUtH,EAAK,MAAM,UAAU,GAG/Boa,IAAwBpa,EAAK,MAAM,oCAAoC;AAG7E,MAAIqa;AACJ,EAAI/S,IACI4S,KAAgB,CAACF,IAEjBK,IAAe,CAAAjlB,MAAO,CAAC,uBAAuB,KAAKA,CAAG,IAC/C,CAAC8kB,KAAgBF,IAExBK,IAAe,CAAAjlB,MAAO,CAAC,sDAAsD,KAAKA,CAAG,IAC9E,CAAC8kB,KAAgB,CAACF,MAEzBK,IAAe,CAAAjlB,MAAO,CAAC,UAAU,KAAKA,CAAG,KAI7CilB,IAAe,CAAAjlB,MAAO,CAAC,UAAU,KAAKA,CAAG;AAG7C,QAAMklB,IAAiBD,IAAetB,GAAW,OAAOsB,CAAY,IAAItB,GAAW;AASnF,MANIoB,KAAiBH,MACjBF,EAAa,qBAAwB,QAAQ,gCAC7CA,EAAa,qBAAwB,OAAO,oBAI5CxS,KAAW,CAAC0S,GAAa;AACzB,UAAMO,IAAMZ,GAAS;AACrB,IAAAY,EAAI,KAAK,aAAalB,IACtBkB,EAAI,KAAK,aAAanB,IACtBmB,EAAI,OAAO,aAAanB,IACxBmB,EAAI,8BAA8B,EAAE,SAAS,GAAG,QAAQ,GAAG,QAAQ;EACtE;AAgBD,MAbIjT,KAAW,CAAC4S,MACZ;AAAA,IACI;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACZ,EAAU,QAAQ,CAAA9kB,MAAO;AACb,IAAAukB,GAASvkB,CAAG,EAAE,OAAO,aAAagkB;AAAA,EAC9C,CAAS,GACDO,GAAS,gCAAmC,OAAO,aAAaR,KAIhEiB,KAAyBJ,GAAa;AACtC,IAAAF,EAAa,qBAAwB,QAAQ;AAC7C,UAAMS,IAAMZ,GAAS;AACrB,IAAAY,EAAI,KAAK,aAAavB,IACtBuB,EAAI,OAAO,aAAanB,IACxBmB,EAAI,8BAA8B,EAAE,SAAS,GAAG,QAAQ,GAAG,QAAQ;EACtE;AAGD,EAAKN,MACDH,EAAa,WAAc,WAAW,KAI1C5kB,EAAM4kB,GAAc,CAAC1kB,GAAKH,MAAe;AAErC,UAAMulB,IAAaxa,EAAK,gBAAgBgX,IAAkB;AAAA,MACtD,OAAOhX,EAAK,MAAM/K,EAAW,KAAK;AAAA,MAClC,MAAM+K,EAAK,MAAM/K,EAAW,IAAI;AAAA,MAChC,SAAS;AAAA,IACrB,CAAS;AAGD,IAAIqlB,EAAe,SAASllB,CAAG,KAC3B4K,EAAK,gBAAgBwa,CAAU,GAI/BvlB,EAAW,aACXulB,EAAW,QAAQ,aAAa,YAAY,UAAU,GACtDA,EAAW,QAAQ,aAAa,UAAU,QAAQ,IAItDA,EAAW,QAAQ,QAAQ,QAAQxa,EAAK,MAAM,aAAa/K,EAAW,KAAK,EAAE,GAG7EulB,EAAW,QAAQ,UAAU,IAAIvlB,EAAW,SAAS,GAGrDulB,EAAW,GAAG,SAAS,CAAA/nB,MAAK;AAExB,MADAA,EAAE,gBAAe,GACb,CAAAwC,EAAW,YACf+K,EAAK,SAAS/K,EAAW,QAAQ,EAAE,OAAOuK,EAAE,CAAE;AAAA,IAC1D,CAAS,GAGDQ,EAAK,IAAI,SAAS5K,CAAG,EAAE,IAAIolB;AAAA,EACnC,CAAK,GAGDxa,EAAK,IAAI,8BAA8BA,EAAK;AAAA,IACxCA,EAAK,gBAAgB4Z,EAA+B;AAAA,EAC5D,GACI5Z,EAAK,IAAI,4BAA4B,QAAQ,QAAQ,QAAQA,EAAK;AAAA,IAC9D;AAAA,EACR,GAGIA,EAAK,IAAI,OAAOA,EAAK,gBAAgBA,EAAK,gBAAgBiY,IAAU,EAAE,IAAAzY,EAAE,CAAE,CAAC,GAG3EQ,EAAK,IAAI,SAASA,EAAK,gBAAgBA,EAAK,gBAAgB6Y,IAAY,EAAE,IAAArZ,EAAE,CAAE,CAAC;AAG/E,QAAMib,IAAoBza,EAAK;AAAA,IAC3BA,EAAK,gBAAgB2W,IAAmB;AAAA,MACpC,SAAS;AAAA,MACT,OAAO3W,EAAK,MAAM,mCAAmC;AAAA,IACjE,CAAS;AAAA,EACT;AACI,EAAAya,EAAkB,QAAQ,UAAU,IAAI,0BAA0B,GAClEza,EAAK,IAAI,wBAAwBya;AAEjC,QAAMC,IAAwB1a,EAAK;AAAA,IAC/BA,EAAK,gBAAgB2W,IAAmB;AAAA,MACpC,SAAS;AAAA,MACT,OAAO3W,EAAK,MAAM,uCAAuC;AAAA,IACrE,CAAS;AAAA,EACT;AACI,EAAA0a,EAAsB,QAAQ,UAAU,IAAI,6BAA6B,GACzE1a,EAAK,IAAI,2BAA2B0a,GAGpC1a,EAAK,IAAI,eAAe;AAC5B,GAEM2a,KAAU,CAAC,EAAE,MAAA3a,GAAM,SAAApM,GAAS,OAAAyF,EAAK,MAAO;AAE1C,EAAAuhB,GAAM,EAAE,MAAA5a,GAAM,SAAApM,GAAS,OAAAyF,EAAO,CAAA;AAG9B,MAAIxE,IAASjB,EACR,OAAQ,EACR,OAAO,CAAAiB,MAAU,QAAQ,KAAKA,EAAO,IAAI,CAAC,EAC1C,QAAS,EACT,KAAK,CAAAA,MAAU8kB,GAAS9kB,EAAO,IAAI,CAAC;AAGzC,MAAIA,GAAQ;AAER,IAAAmL,EAAK,IAAI,eAAe;AAExB,UAAM6a,IAAgBlB,GAAS9kB,EAAO,IAAI;AAC1C,IAAAK,EAAMskB,IAAc,CAACpmB,GAAM0nB,MAAkB;AAEzC,YAAMC,IAAU/a,EAAK,IAAI5M,CAAI;AAG7B,MAAA8B,EAAM4lB,GAAe,CAAC1lB,GAAKyN,MAAiB;AACxC,cAAMxP,IACFwnB,EAAcznB,CAAI,KAAK,OAAOynB,EAAcznB,CAAI,EAAEgC,CAAG,IAAM,MACrDylB,EAAcznB,CAAI,EAAEgC,CAAG,IACvByN;AACV,QAAA7C,EAAK,IAAI,aAAa,KAAK,EAAE,SAAA+a,GAAS,KAAA3lB,GAAK,OAAA/B,EAAK,CAAE;AAAA,MAClE,CAAa;AAAA,IACb,CAAS;AAAA,EACJ;AAGD,EAAA2M,EAAK,IAAI,aAAa,QAAQ,CAAC,EAAE,SAAA+a,GAAS,KAAA3lB,GAAK,OAAA/B,QAAY;AACvD,IAAA0nB,EAAQ3lB,CAAG,IAAI,OAAO/B,KAAU,aAAaA,EAAM2M,CAAI,IAAI3M;AAAA,EACnE,CAAK;AACL,GAEMunB,KAAQ9a,GAAY;AAAA,EACtB,4CAA4C,CAAC,EAAE,MAAAE,GAAM,QAAAnL,QAAa;AAC9D,IAAAmL,EAAK,IAAI,0BAA0B,QAAQnL,EAAO;AAAA,EACrD;AAAA,EACD,sCAAsC,CAAC,EAAE,MAAAmL,GAAM,QAAAnL,QAAa;AACxD,IAAAmL,EAAK,IAAI,oBAAoB,QAAQnL,EAAO;AAAA,EAC/C;AAAA,EACD,yCAAyC,CAAC,EAAE,MAAAmL,GAAM,QAAAnL,QAAa;AAC3D,IAAAmL,EAAK,IAAI,uBAAuB,QAAQnL,EAAO;AAAA,EAClD;AAAA,EACD,6BAA6B,CAAC,EAAE,MAAAmL,QAAW;AACvC,IAAAA,EAAK,IAAI,yBAAyB,OAAO,IACzCA,EAAK,IAAI,yBAAyB,WAAW;AAAA,EAChD;AAAA,EACD,qBAAqB,CAAC,EAAE,MAAAA,QAAW;AAC/B,IAAAA,EAAK,IAAI,sBAAsB,OAAO,IACtCA,EAAK,IAAI,sBAAsB,WAAW;AAAA,EAC7C;AAAA,EACD,uBAAuB,CAAC,EAAE,MAAAA,QAAW;AACjC,IAAAA,EAAK,IAAI,yBAAyB,OAAO,IACzCA,EAAK,IAAI,yBAAyB,WAAW;AAAA,EAChD;AAAA,EACD,+BAA+B,CAAC,EAAE,MAAAA,GAAM,QAAAnL,QAAa;AACjD,IAAAmL,EAAK,IAAI,sBAAsB,OAAO,IACtCA,EAAK,IAAI,sBAAsB,WAAWnL,EAAO;AAAA,EACpD;AAAA,EACD,kCAAkC,CAAC,EAAE,MAAAmL,GAAM,QAAAnL,QAAa;AACpD,IAAAmL,EAAK,IAAI,yBAAyB,OAAO,IACzCA,EAAK,IAAI,yBAAyB,WAAWnL,EAAO;AAAA,EACvD;AACL,CAAC,GAEKsU,KAAO3M,GAAW;AAAA,EACpB,QAAQqd;AAAA,EACR,OAAOc;AAAA,EACP,eAAe,CAAA3a,MAAQ;AACnB,IAAAgG,GAAa,eAAe,EAAE,GAAGhG,GAAM,MAAMA,EAAI,CAAE;AAAA,EACtD;AAAA,EACD,MAAM;AACV,CAAC,GAKKgb,KAAW,CAAC,EAAE,MAAAhb,GAAM,OAAA3G,QAAY;AAElC,EAAA2G,EAAK,IAAI,WAAWkV,GAAgB,QAAQ,GAC5ClV,EAAK,YAAYA,EAAK,IAAI,QAAQ,GAGlCA,EAAK,IAAI,OAAOA,EAAK,gBAAgBA,EAAK,gBAAgBmJ,IAAM,EAAE,IAAI9P,EAAM,GAAE,CAAE,CAAC,GAGjF2G,EAAK,IAAI,OAAO;AACpB,GAKMib,KAAc,CAAC,EAAE,MAAAjb,GAAM,OAAA3G,QAAY;AAErC,EAAA+b,GAAKpV,EAAK,IAAI,UAAUiV,GAAejV,EAAK,MAAM,iBAAiB3G,EAAM,EAAE,CAAC,CAAC;AACjF,GAEM6hB,KAAc1e,GAAW;AAAA,EAC3B,QAAQwe;AAAA,EACR,YAAY;AAAA,EACZ,OAAOlb,GAAY;AAAA,IACf,eAAemb;AAAA,EACvB,CAAK;AAAA,EACD,eAAe,CAAAjb,MAAQ;AACnB,IAAAgG,GAAa,eAAe,EAAE,GAAGhG,GAAM,MAAMA,EAAI,CAAE;AAAA,EACtD;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACV,CAAC,GAEKmb,KAAqB,EAAE,MAAM,UAAU,SAAS,KAAK,MAAM,KAE3DC,KAAW,CAAC,EAAE,MAAApb,GAAM,OAAA3G,QAAY;AAClC;AAAA,IACI;AAAA,MACI,MAAM;AAAA,IACT;AAAA,IACD;AAAA,MACI,MAAM;AAAA,MACN,OAAO;AAAA,QACH,YAAY;AAAA,QACZ,QAAQ;AAAA,MACX;AAAA,MACD,QAAQ;AAAA,QACJ,YAAY;AAAA,UACR,QAAQ8hB;AAAA,QACX;AAAA,QACD,QAAQ,CAAC,cAAc,QAAQ;AAAA,MAClC;AAAA,IACJ;AAAA,IACD;AAAA,MACI,MAAM;AAAA,MACN,OAAO;AAAA,QACH,YAAY;AAAA,MACf;AAAA,MACD,QAAQ;AAAA,QACJ,YAAY;AAAA,UACR,YAAYA;AAAA,QACf;AAAA,QACD,QAAQ,CAAC,YAAY;AAAA,MACxB;AAAA,IACJ;AAAA,EACT,EAAM,QAAQ,CAAAE,MAAW;AACjB,IAAAC,GAActb,GAAMqb,GAAShiB,EAAM,IAAI;AAAA,EAC/C,CAAK,GAED2G,EAAK,QAAQ,UAAU,IAAI,aAAa3G,EAAM,IAAI,EAAE,GAEpD2G,EAAK,IAAI,WAAW;AACxB,GAEMsb,KAAgB,CAACtb,GAAMqb,GAASxlB,MAAc;AAChD,QAAM0lB,IAAkB/e,GAAW;AAAA,IAC/B,MAAM,SAAS6e,EAAQ,IAAI,cAAcxlB,CAAS;AAAA,IAClD,QAAQwlB,EAAQ;AAAA,IAChB,kBAAkB;AAAA,EAC1B,CAAK,GAEK/kB,IAAO0J,EAAK,gBAAgBub,GAAiBF,EAAQ,KAAK;AAEhE,EAAArb,EAAK,IAAIqb,EAAQ,IAAI,IAAIrb,EAAK,gBAAgB1J,CAAI;AACtD,GAEMklB,KAAU,CAAC,EAAE,MAAAxb,GAAM,OAAA3G,QAAY;AAQjC,OANI2G,EAAK,IAAI,aAAa,QAAQ3G,EAAM,aAAa2G,EAAK,IAAI,cAC1DA,EAAK,IAAI,WAAWY,GAAUvH,EAAM,QAAQ,IAAIA,EAAM,WAAW,IACjE2G,EAAK,QAAQ,QAAQ,WAAWA,EAAK,IAAI,WAIzC,CAAC3G,EAAM;AAAQ;AAGnB,QAAMoiB,IAAUzb,EAAK,IAAI,IAAI,KAAK,SAC5B0b,IAAa1b,EAAK,IAAI,OAAO,KAAK,SAGlC9D,IAAS,KAAK,IAAIuf,EAAQ,SAASC,EAAW,QAAQriB,EAAM,MAAM;AAGxE,EAAA2G,EAAK,IAAI,OAAO,aAAayb,EAAQ,QAIrCzb,EAAK,IAAI,OAAO,UAAU9D,IAASuf,EAAQ,SAASC,EAAW,UAAU,KAGzE1b,EAAK,IAAI,OAAO,aAAa9D,IAASwf,EAAW;AACrD,GAEMC,KAAQnf,GAAW;AAAA,EACrB,MAAM;AAAA,EACN,MAAM,CAAC,EAAE,MAAAwD,GAAM,OAAA3G,QAAaA,EAAM,gBAAgB2G,EAAK,IAAI,OAAO;AAAA,EAClE,OAAOwb;AAAA,EACP,QAAQJ;AAAA,EACR,YAAY;AAAA,EACZ,QAAQ;AAAA,IACJ,MAAM,CAAC,UAAU,iBAAiB,UAAU;AAAA,EAC/C;AACL,CAAC,GAEKQ,KAAmB,CAAA/W,MAAS;AAC9B,QAAMgX,IAAUhX,EAAM,IAAI,CAAAF,MAAQA,EAAK,EAAE;AACzC,MAAImX;AACJ,SAAO;AAAA,IACH,UAAU,CAAA3lB,MAAS;AACf,MAAA2lB,IAAY3lB;AAAA,IACf;AAAA,IACD,UAAU,MAAM2lB;AAAA,IAChB,cAAc,CAAAnX,MAAQkX,EAAQ,QAAQlX,EAAK,EAAE;AAAA,EACrD;AACA,GAEMoX,KAAwB;AAAA,EAC1B,MAAM;AAAA,EACN,WAAW;AAAA,EACX,SAAS;AAAA,EACT,MAAM;AACV,GAEMC,KAAoB,UAEpBC,KAAW;AAAA,EACb,qBAAqB;AAAA,EACrB,+BAA+B;AAAA,EAC/B,wBAAwB;AAAA,EACxB,2BAA2B;AAAA,EAC3B,eAAe;AAAA,EACf,6BAA6B;AAAA,EAC7B,uBAAuB;AAAA,EACvB,2BAA2B;AAAA,EAC3B,6BAA6B;AAAA,EAC7B,kCAAkC;AAAA,EAClC,8BAA8B;AAAA,EAC9B,iCAAiC;AAAA,EACjC,wCAAwC;AAAA,EACxC,2BAA2B;AAAA,EAC3B,4BAA4B;AAChC,GAKMC,KAAW,CAAC,EAAE,MAAAlc,GAAM,OAAA3G,QAAY;AAqBlC,MAnBA2G,EAAK,IAAI,cAAc,CAAAvN,MAAKuN,EAAK,SAAS,qBAAqB,EAAE,IAAI3G,EAAM,GAAI,CAAA,GAG/E2G,EAAK,QAAQ,KAAK,kBAAkB3G,EAAM,EAAE,IAC5C2G,EAAK,QAAQ,iBAAiB,SAASA,EAAK,IAAI,WAAW,GAG3DA,EAAK,IAAI,YAAYA,EAAK,gBAAgBA,EAAK,gBAAgBkb,IAAa,EAAE,IAAI7hB,EAAM,GAAE,CAAE,CAAC,GAG7F2G,EAAK,IAAI,QAAQA,EAAK,gBAAgBA,EAAK,gBAAgB2b,IAAO,EAAE,MAAM,aAAY,CAAE,CAAC,GAGzF3b,EAAK,IAAI,MAAM,SAAS,MAGxB3G,EAAM,mBAAmB,IAGrB,CAAC2G,EAAK,MAAM,mBAAmB;AAAG;AAGtC,EAAAA,EAAK,QAAQ,QAAQ,YAAY;AAEjC,QAAMmc,IAAO,CAAA1pB,MAAK;AACd,QAAI,CAACA,EAAE;AAAW;AAElB,QAAI2pB,IAA0B;AAE9B,UAAMhM,IAAS;AAAA,MACX,GAAG3d,EAAE;AAAA,MACL,GAAGA,EAAE;AAAA,IACjB;AAEQ,IAAA4G,EAAM,aAAa;AAAA,MACf,GAAG2G,EAAK;AAAA,MACR,GAAGA,EAAK;AAAA,IACpB,GAEQ3G,EAAM,aAAa;AAAA,MACf,GAAG5G,EAAE;AAAA,MACL,GAAGA,EAAE;AAAA,IACjB;AAEQ,UAAM4pB,IAAYT,GAAiB5b,EAAK,MAAM,kBAAkB,CAAC;AAEjE,IAAAA,EAAK,SAAS,iBAAiB,EAAE,IAAI3G,EAAM,IAAI,WAAAgjB,EAAS,CAAE;AAE1D,UAAMC,IAAO,CAAA7pB,MAAK;AACd,UAAI,CAACA,EAAE;AAAW;AAElB,MAAAA,EAAE,gBAAe,GACjBA,EAAE,eAAc,GAEhB4G,EAAM,aAAa;AAAA,QACf,GAAG5G,EAAE,QAAQ2d,EAAO;AAAA,QACpB,GAAG3d,EAAE,QAAQ2d,EAAO;AAAA,MACpC,GAIgB/W,EAAM,WAAW,IAAIA,EAAM,WAAW,IAAIA,EAAM,WAAW,IAAIA,EAAM,WAAW,IACzE,MAAM,CAAC+iB,MACdA,IAA0B,IAC1Bpc,EAAK,QAAQ,oBAAoB,SAASA,EAAK,IAAI,WAAW,IAGlEA,EAAK,SAAS,iBAAiB,EAAE,IAAI3G,EAAM,IAAI,WAAAgjB,EAAS,CAAE;AAAA,IACtE,GAEcE,IAAO,CAAA9pB,MAAK;AACd,MAAKA,EAAE,cAEP,SAAS,oBAAoB,eAAe6pB,CAAI,GAChD,SAAS,oBAAoB,aAAaC,CAAI,GAE9CljB,EAAM,aAAa;AAAA,QACf,GAAG5G,EAAE,QAAQ2d,EAAO;AAAA,QACpB,GAAG3d,EAAE,QAAQ2d,EAAO;AAAA,MACpC,GAEYpQ,EAAK,SAAS,iBAAiB,EAAE,IAAI3G,EAAM,IAAI,WAAAgjB,EAAS,CAAE,GAGtDD,KACA,WAAW,MAAMpc,EAAK,QAAQ,iBAAiB,SAASA,EAAK,IAAI,WAAW,GAAG,CAAC;AAAA,IAEhG;AAEQ,aAAS,iBAAiB,eAAesc,CAAI,GAC7C,SAAS,iBAAiB,aAAaC,CAAI;AAAA,EACnD;AAEI,EAAAvc,EAAK,QAAQ,iBAAiB,eAAemc,CAAI;AACrD,GAEMK,KAAU1c,GAAY;AAAA,EACxB,yBAAyB,CAAC,EAAE,MAAAE,GAAM,QAAAnL,QAAa;AAC3C,IAAAmL,EAAK,SAASnL,EAAO;AAAA,EACxB;AACL,CAAC,GAEK4nB,KAAU3c;AAAA,EACZ;AAAA,IACI,eAAe,CAAC,EAAE,MAAAE,GAAM,OAAA3G,QAAY;AAChC,MAAAA,EAAM,aAAa;AAAA,QACf,GAAG2G,EAAK;AAAA,QACR,GAAGA,EAAK;AAAA,MACxB;AAAA,IACS;AAAA,IACD,eAAe,CAAC,EAAE,MAAAA,QAAW;AACzB,MAAAA,EAAK,QAAQ,QAAQ,YAAY;AAAA,IACpC;AAAA,IACD,eAAe,CAAC,EAAE,MAAAA,GAAM,OAAA3G,QAAY;AAChC,MAAAA,EAAM,aAAa,MACnBA,EAAM,aAAa,MACnB2G,EAAK,QAAQ,QAAQ,YAAY;AAAA,IACpC;AAAA,EACJ;AAAA,EACD,CAAC,EAAE,MAAAA,GAAM,SAAApM,GAAS,OAAAyF,GAAO,gBAAAgF,EAAc,MAAO;AAC1C,IAAI2B,EAAK,QAAQ,QAAQ,cAAc,UAC/BA,EAAK,UAAU,MACfA,EAAK,QAAQ,QAAQ,YAAY;AAKzC,QAAInL,IAASjB,EACR,OAAQ,EACR,OAAO,CAAAiB,MAAU,QAAQ,KAAKA,EAAO,IAAI,CAAC,EAC1C,QAAS,EACT,KAAK,CAAAA,MAAUonB,GAASpnB,EAAO,IAAI,CAAC;AAGzC,IAAIA,KAAUA,EAAO,SAASwE,EAAM,iBAEhCA,EAAM,eAAexE,EAAO,MAG5BmL,EAAK,QAAQ,QAAQ,oBAAoBic,GAAS5iB,EAAM,YAAY,KAAK;AAI7E,UAAMqN,IACF1G,EAAK,MAAM,6BAA6B,KAAKA,EAAK,MAAM,wBAAwB;AACpF,IAAK0G,IAKOrI,MACR2B,EAAK,SAASA,EAAK,KAAK,QAAQ,QAAQ0G,MALxC8V,GAAQ,EAAE,MAAAxc,GAAM,SAAApM,GAAS,OAAAyF,EAAO,CAAA,GAC5B,CAAC2G,EAAK,UAAUA,EAAK,IAAI,UAAU,KAAK,QAAQ,SAAS,MACzDA,EAAK,SAASA,EAAK,IAAI,UAAU,KAAK,QAAQ,UAOlD3B,MACA2B,EAAK,IAAI,MAAM,SAAS,OAG5BA,EAAK,IAAI,MAAM,SAASA,EAAK;AAAA,EAChC;AACL,GAEM2E,KAAOnI,GAAW;AAAA,EACpB,QAAQ0f;AAAA,EACR,OAAOO;AAAA,EACP,SAAS,CAAC,EAAE,MAAAzc,GAAM,OAAA3G,QAAY;AAC1B,IAAA2G,EAAK,QAAQ,oBAAoB,SAASA,EAAK,IAAI,WAAW,GAC9DA,EAAK,SAAS,gBAAgB,EAAE,OAAO3G,EAAM,GAAE,CAAE;AAAA,EACpD;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACH;AAAA,IACD,QAAQ,CAAC,cAAc,cAAc,UAAU,UAAU,WAAW,QAAQ;AAAA,IAC5E,YAAY;AAAA,MACR,QAAQ2iB;AAAA,MACR,QAAQA;AAAA,MACR,YAAYD;AAAA,MACZ,YAAYA;AAAA,MACZ,SAAS,EAAE,MAAM,SAAS,UAAU,IAAK;AAAA,IAC5C;AAAA,EACJ;AACL,CAAC;AAED,IAAIW,KAAiB,CAACC,GAAiBC,MAG5B,KAAK,IAAI,GAAG,KAAK,OAAOD,IAAkB,KAAKC,CAAS,CAAC;AAGpE,MAAMC,KAAyB,CAACvmB,GAAMwmB,GAAUC,MAAmB;AAC/D,MAAI,CAACA;AAAgB;AAErB,QAAMJ,IAAkBrmB,EAAK,KAAK,QAAQ,OAEpC0mB,IAAIF,EAAS;AACnB,MAAIvd,IAAO;AAGX,MAAIyd,MAAM,KAAKD,EAAe,MAAMD,EAAS,CAAC,EAAE,KAAK,QAAQ;AAAK,WAAO;AAIzE,QAAMG,IADOH,EAAS,CAAC,EACD,KAAK,SACrBI,IAAuBD,EAAS,aAAaA,EAAS,aACtDL,IAAYK,EAAS,QAAQC,GAC7BC,IAAcT,GAAeC,GAAiBC,CAAS;AAG7D,MAAIO,MAAgB,GAAG;AACnB,aAAShnB,IAAQ,GAAGA,IAAQ6mB,GAAG7mB,KAAS;AACpC,YAAMD,IAAQ4mB,EAAS3mB,CAAK,GACtBinB,IAAWlnB,EAAM,KAAK,MAAM,MAAMA,EAAM,KAAK,QAAQ,SAAS;AACpE,UAAI6mB,EAAe,MAAMK;AACrB,eAAOjnB;AAAA,IAEd;AACD,WAAO6mB;AAAA,EACV;AAGD,QAAMK,IAAqBJ,EAAS,YAAYA,EAAS,cACnDK,IAAaL,EAAS,SAASI;AACrC,WAASlnB,IAAQ,GAAGA,IAAQ6mB,GAAG7mB,KAAS;AACpC,UAAMonB,IAASpnB,IAAQgnB,GACjBK,IAAS,KAAK,MAAMrnB,IAAQgnB,CAAW,GAEvCM,IAAUF,IAASX,GACnBc,IAAUF,IAASF,GAEnBK,IAAUD,IAAUT,EAAS,WAC7BW,IAAYH,IAAUb,GACtBiB,IAAaH,IAAUJ,IAAaL,EAAS;AAEnD,QAAIF,EAAe,MAAMc,KAAcd,EAAe,MAAMY,GAAS;AACjE,UAAIZ,EAAe,OAAOa;AACtB,eAAOznB;AACJ,MAAIA,MAAU6mB,IAAI,IACrBzd,IAAOpJ,IAEPoJ,IAAO;AAAA,IAEd;AAAA,EACJ;AAED,SAAIA,MAAS,OACFA,IAGJyd;AACX,GAEMc,KAAqB;AAAA,EACvB,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,IAAI,YAAY;AACZ,WAAO,KAAK;AAAA,EACf;AAAA,EACD,IAAI,UAAUC,GAAK;AACf,KAAI,KAAK,WAAW,KAAKA,MAAQ,OAAG,KAAK,SAASA;AAAA,EACrD;AAAA,EACD,IAAI,WAAW;AACX,WAAO,KAAK;AAAA,EACf;AAAA,EACD,IAAI,SAASA,GAAK;AACd,KAAI,KAAK,UAAU,KAAKA,MAAQ,OAAG,KAAK,QAAQA;AAAA,EACnD;AAAA,EACD,eAAe,SAAS7hB,GAAQD,GAAO;AACnC,KAAI,KAAK,WAAW,KAAKC,MAAW,OAAG,KAAK,SAASA,KACjD,KAAK,UAAU,KAAKD,MAAU,OAAG,KAAK,QAAQA;AAAA,EACrD;AACL,GAEM+hB,KAAW,CAAC,EAAE,MAAAhe,QAAW;AAE3B,EAAA1K,GAAK0K,EAAK,SAAS,QAAQ,MAAM,GAEjCA,EAAK,IAAI,oBAAoB,KAAK,IAAG;AACzC,GAOMie,KAAc,CAAC,EAAE,MAAAje,GAAM,QAAAnL,QAAa;AACtC,QAAM,EAAE,IAAA2K,GAAI,OAAArJ,GAAO,mBAAAkd,EAAiB,IAAKxe;AAEzC,EAAAmL,EAAK,IAAI,WAAW7J;AAEpB,QAAM+nB,IAAM,KAAK;AACjB,MAAIC,IAAYD,GACZ5iB,IAAU;AAEd,MAAI+X,MAAsBzP,GAAkB,MAAM;AAC9C,IAAAtI,IAAU;AACV,UAAM8iB,IAAWpe,EAAK,MAAM,0BAA0B,GAChDqe,IAAOH,IAAMle,EAAK,IAAI;AAC5B,IAAAme,IAAYE,IAAOD,IAAWF,KAAOE,IAAWC,KAAQH;AAAA,EAC3D;AAED,EAAAle,EAAK,IAAI,oBAAoBme,GAE7Bne,EAAK;AAAA,IACDA,EAAK;AAAA;AAAA,MAED2E;AAAA;AAAA,MAGA;AAAA,QACI,WAAAwZ;AAAA,QACA,IAAA3e;AAAA,QACA,SAAAlE;AAAA,QACA,mBAAA+X;AAAA,MACH;AAAA,IACJ;AAAA,IACDld;AAAA,EACR;AACA,GAEMmoB,KAAW,CAAC3Z,GAAMkR,GAAGC,GAAGyI,IAAK,GAAGC,IAAK,MAAM;AAE7C,EAAI7Z,EAAK,cACLA,EAAK,aAAa,MAClBA,EAAK,aAAa,MAClBA,EAAK,aAAaA,EAAK,WAAW,IAAIA,EAAK,WAAW,GACtDA,EAAK,aAAaA,EAAK,WAAW,IAAIA,EAAK,WAAW,GACtDA,EAAK,SAAS,OACdA,EAAK,SAAS,UAEdA,EAAK,aAAakR,GAClBlR,EAAK,aAAamR,GAEd,KAAK,QAAQnR,EAAK,cAEdA,EAAK,YAAY,KACjB8Z,GAAc9Z,GAAMkR,GAAGC,GAAGyI,GAAIC,CAAE,GAIpC7Z,EAAK,SAAS,GACdA,EAAK,SAAS,GACdA,EAAK,UAAU;AAG3B,GAEM8Z,KAAgB,CAAC9Z,GAAMkR,GAAGC,GAAGyI,GAAIC,MAAO;AAC1C,EAAI7Z,EAAK,sBAAsBf,GAAkB,QAC7Ce,EAAK,aAAa,MAClBA,EAAK,aAAakR,GAClBlR,EAAK,aAAa,MAClBA,EAAK,aAAamR,KACXnR,EAAK,sBAAsBf,GAAkB,QACpDe,EAAK,aAAa,MAClBA,EAAK,aAAakR,IAAI0I,IAAK,IAE3B5Z,EAAK,aAAa,MAClBA,EAAK,aAAamR,IAAI0I,IAAK,IAE3B7Z,EAAK,SAAS,KACdA,EAAK,SAAS,OACPA,EAAK,sBAAsBf,GAAkB,UACpDe,EAAK,aAAa,MAClBA,EAAK,aAAamR,IAAI,MACfnR,EAAK,sBAAsBf,GAAkB,QACpDe,EAAK,aAAa,MAClBA,EAAK,aAAakR,IAAI,IACtBlR,EAAK,aAAa;AAE1B,GAOM+Z,KAAiB,CAAC,EAAE,MAAA1e,GAAM,QAAAnL,QAAa;AACzC,QAAM,EAAE,IAAA2K,EAAI,IAAG3K,GAGTyB,IAAO0J,EAAK,WAAW,KAAK,CAAA9J,MAASA,EAAM,OAAOsJ,CAAE;AAG1D,EAAKlJ,MAKLA,EAAK,SAAS,KACdA,EAAK,SAAS,KACdA,EAAK,UAAU,GAGfA,EAAK,mBAAmB;AAC5B,GAEMqoB,KAAgB,CAAAzoB,MAClBA,EAAM,KAAK,QAAQ,SACnBA,EAAM,KAAK,QAAQ,eAAe,MAClCA,EAAM,KAAK,QAAQ,YAAY,KAC7B0oB,KAAe,CAAA1oB,MACjBA,EAAM,KAAK,QAAQ,QACnBA,EAAM,KAAK,QAAQ,aAAa,MAChCA,EAAM,KAAK,QAAQ,cAAc,KAE/B2oB,KAAW,CAAC,EAAE,MAAA7e,GAAM,QAAAnL,QAAa;AACnC,QAAM,EAAE,IAAA2K,GAAI,WAAA6c,EAAW,IAAGxnB,GAGpB8P,IAAO3E,EAAK,MAAM,YAAY,EAAE,IAAAR,EAAE,CAAE,GAGpClJ,IAAO0J,EAAK,WAAW,KAAK,CAAA9J,MAASA,EAAM,OAAOsJ,CAAE,GAEpDsf,IAAW9e,EAAK,WAAW,QAC3B+e,IAAW1C,EAAU,aAAa1X,CAAI;AAG5C,MAAI,CAACrO;AAAM;AAEX,QAAM0oB,IAAe;AAAA,IACjB,GAAG1oB,EAAK,WAAW,IAAIA,EAAK,WAAW,IAAIA,EAAK,WAAW;AAAA,IAC3D,GAAGA,EAAK,WAAW,IAAIA,EAAK,WAAW,IAAIA,EAAK,WAAW;AAAA,EACnE,GAGU2oB,IAAaN,GAAcroB,CAAI,GAC/B4oB,IAAYN,GAAatoB,CAAI;AAGnC,MAAI6oB,IAAO,KAAK,MAAMnf,EAAK,KAAK,MAAM,QAAQkf,CAAS;AACvD,EAAIC,IAAOL,MAAUK,IAAOL;AAG5B,QAAMjU,IAAO,KAAK,MAAMiU,IAAWK,IAAO,CAAC;AAE3C,EAAArB,GAAmB,YAAYmB,IAAapU,GAC5CiT,GAAmB,WAAWoB,IAAYC;AAG1C,MAAIC,IAAW;AAAA,IACX,GAAG,KAAK,MAAMJ,EAAa,IAAIC,CAAU;AAAA,IACzC,GAAG,KAAK,MAAMD,EAAa,IAAIE,CAAS;AAAA,IACxC,cAAc,WAAwB;AAClC,aACIF,EAAa,IAAIlB,GAAmB,aACpCkB,EAAa,IAAI,KACjBA,EAAa,IAAIlB,GAAmB,YACpCkB,EAAa,IAAI,IAEVD,IACJ,KAAK,IAAII,IAAO,KAAK;AAAA,IAC/B;AAAA,IACD,aAAa,WAAuB;AAChC,YAAMta,IAAQ7E,EAAK,MAAM,kBAAkB,GACrCqf,IAAkBrf,EAAK,WAAW,OAAO,CAAA9J,MAASA,EAAM,KAAK,QAAQ,MAAM,GAC3E4mB,IAAWjY,EAAM;AAAA,QAAI,CAAAF,MACvB0a,EAAgB,KAAK,CAAAhoB,MAAaA,EAAU,OAAOsN,EAAK,EAAE;AAAA,MAC1E,GACkByO,IAAe0J,EAAS,UAAU,CAAA5mB,MAASA,MAAUI,CAAI,GACzD2oB,IAAaN,GAAcroB,CAAI,GAC/B0mB,IAAIF,EAAS;AACnB,UAAIwC,IAAMtC,GACNuC,IAAc,GACdC,IAAc,GACdC,IAAW;AACf,eAAS3V,IAAI,GAAGA,IAAIkT,GAAGlT;AAInB,YAHAyV,IAAcZ,GAAc7B,EAAShT,CAAC,CAAC,GACvC2V,IAAWD,GACXA,IAAcC,IAAWF,GACrBP,EAAa,IAAIQ,GAAa;AAC9B,cAAIpM,IAAetJ,GAAG;AAClB,gBAAIkV,EAAa,IAAIS,IAAWR,GAAY;AACxC,cAAAK,IAAMxV;AACN;AAAA,YACH;AACD;AAAA,UACH;AACD,UAAAwV,IAAMxV;AACN;AAAA,QACH;AAEL,aAAOwV;AAAA,IACV;AAAA,EACT;AAGI,QAAMnpB,IAAQgpB,IAAO,IAAIC,EAAS,iBAAiBA,EAAS;AAC5D,EAAApf,EAAK,SAAS,aAAa,EAAE,OAAO1J,GAAM,OAAAH,EAAK,CAAE;AAGjD,QAAMid,IAAeiJ,EAAU;AAE/B,MAAIjJ,MAAiB,UAAaA,MAAiBjd,GAAO;AAGtD,QAFAkmB,EAAU,SAASlmB,CAAK,GAEpBid,MAAiB;AAAW;AAEhC,IAAApT,EAAK,SAAS,qBAAqB;AAAA,MAC/B,OAAOA,EAAK,MAAM,kBAAkB;AAAA,MACpC,QAAQ+e;AAAA,MACR,QAAQ5oB;AAAA,IACpB,CAAS;AAAA,EACJ;AACL,GAKMupB,KAAU5f,GAAY;AAAA,EACxB,cAAcme;AAAA,EACd,iBAAiBS;AAAA,EACjB,eAAeG;AACnB,CAAC,GAQKc,KAAU,CAAC,EAAE,MAAA3f,GAAM,OAAA3G,GAAO,SAAAzF,GAAS,gBAAAyK,EAAc,MAAO;AAE1D,EAAAqhB,GAAQ,EAAE,MAAA1f,GAAM,OAAA3G,GAAO,SAAAzF,EAAS,CAAA;AAEhC,QAAM,EAAE,iBAAAgsB,EAAiB,IAAGvmB,GAGtBsjB,IAAkB3c,EAAK,KAAK,QAAQ,OAGpCqf,IAAkBrf,EAAK,WAAW,OAAO,CAAA9J,MAASA,EAAM,KAAK,QAAQ,MAAM,GAG3E4mB,IAAW9c,EACZ,MAAM,kBAAkB,EACxB,IAAI,CAAA2E,MAAQ0a,EAAgB,KAAK,CAAAnpB,MAASA,EAAM,OAAOyO,EAAK,EAAE,CAAC,EAC/D,OAAO,CAAAA,MAAQA,CAAI,GAGlBkb,IAAYD,IACZ/C,GAAuB7c,GAAM8c,GAAU8C,CAAe,IACtD,MAGAE,IAAW9f,EAAK,IAAI,YAAY;AAGtC,EAAAA,EAAK,IAAI,WAAW;AAEpB,MAAI+f,IAAkB,GAClBC,IAAoB,GACpBC,IAAiB;AAErB,MAAInD,EAAS,WAAW;AAAG;AAE3B,QAAMoD,IAAYpD,EAAS,CAAC,EAAE,KAAK,SAC7BO,IAAqB6C,EAAU,YAAYA,EAAU,cACrDhD,IAAuBgD,EAAU,aAAaA,EAAU,aACxDtD,IAAYsD,EAAU,QAAQhD,GAC9BI,IAAa4C,EAAU,SAAS7C,GAChCF,IAAcT,GAAeC,GAAiBC,CAAS;AAG7D,MAAIO,MAAgB,GAAG;AACnB,QAAIO,IAAU,GACVyC,IAAa;AAEjB,IAAArD,EAAS,QAAQ,CAAC5mB,GAAOC,MAAU;AAC/B,UAAI0pB,GAAW;AACX,YAAIxB,IAAOloB,IAAQ0pB;AACnB,QAAIxB,MAAS,KACT8B,IAAa,CAAC9C,IAAqB,OAC5BgB,MAAS,KAChB8B,IAAa,CAAC9C,IAAqB,OAC5BgB,MAAS,IAChB8B,IAAa9C,IAAqB,OAC3BgB,MAAS,IAChB8B,IAAa9C,IAAqB,OAElC8C,IAAa;AAAA,MAEpB;AAED,MAAI9hB,MACAnI,EAAM,aAAa,MACnBA,EAAM,aAAa,OAGlBA,EAAM,oBACPooB,GAASpoB,GAAO,GAAGwnB,IAAUyC,CAAU;AAK3C,UAAIC,KAFalqB,EAAM,KAAK,QAAQ,SAASmnB,MAEZnnB,EAAM,mBAAmBA,EAAM,UAAU;AAE1E,MAAAwnB,KAAW0C;AAAA,IACvB,CAAS;AAAA,EACJ,OAEI;AACD,QAAIC,IAAQ,GACRC,IAAQ;AAEZ,IAAAxD,EAAS,QAAQ,CAAC5mB,GAAOC,MAAU;AAC/B,MAAIA,MAAU0pB,MACVE,IAAkB,IAGlB5pB,MAAU2pB,MACVG,KAAkB,IAGlB/pB,EAAM,oBAAoBA,EAAM,UAAU,QAC1C8pB,KAAqB;AAGzB,YAAMO,IAAcpqB,IAAQ8pB,IAAiBF,IAAkBC,GAEzDzC,IAASgD,IAAcpD,GACvBK,IAAS,KAAK,MAAM+C,IAAcpD,CAAW,GAE7CM,IAAUF,IAASX,GACnBc,IAAUF,IAASF,GAEnBkD,IAAU,KAAK,KAAK/C,IAAU4C,CAAK,GACnCI,KAAU,KAAK,KAAK/C,IAAU4C,CAAK;AAKzC,MAHAD,IAAQ5C,GACR6C,IAAQ5C,GAEJ,CAAAxnB,EAAM,qBAENmI,MACAnI,EAAM,aAAa,MACnBA,EAAM,aAAa,OAGvBooB,GAASpoB,GAAOunB,GAASC,GAAS8C,GAASC,EAAO;AAAA,IAC9D,CAAS;AAAA,EACJ;AACL,GAOMC,KAAuB,CAACxqB,GAAOtC,MACjCA,EAAQ,OAAO,CAAAiB,MAEPA,EAAO,QAAQA,EAAO,KAAK,KACpBqB,EAAM,OAAOrB,EAAO,KAAK,KAI7B,EACV,GAEC8rB,KAAOnkB,GAAW;AAAA,EACpB,QAAQwhB;AAAA,EACR,OAAO2B;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,cAAc,CAAC,EAAE,MAAA3f,QAAW;AACxB,IAAAA,EAAK,WACA,OAAO,CAAA1J,MAAQA,EAAK,oBAAoBA,EAAK,YAAY,KAAKA,EAAK,OAAO,EAC1E,QAAQ,CAAAA,MAAQ;AACb,MAAAA,EAAK,SAAQ,GACb0J,EAAK,gBAAgB1J,CAAI;AAAA,IACzC,CAAa;AAAA,EACR;AAAA,EACD,4BAA4BoqB;AAAA,EAC5B,QAAQ;AAAA,IACJ,MAAM,CAAC,iBAAiB;AAAA,EAC3B;AACL,CAAC,GAEKE,KAAW,CAAC,EAAE,MAAA5gB,GAAM,OAAA3G,QAAY;AAClC,EAAA2G,EAAK,IAAI,OAAOA,EAAK,gBAAgBA,EAAK,gBAAgB2gB,EAAI,CAAC,GAC/DtnB,EAAM,kBAAkB,MACxBA,EAAM,cAAc;AACxB,GAEMwnB,KAAuB,CAAC,EAAE,MAAA7gB,GAAM,OAAA3G,GAAO,QAAAxE,EAAM,MAAO;AACtD,EAAKmL,EAAK,MAAM,kCAAkC,MAClD3G,EAAM,kBAAkB;AAAA,IACpB,MAAMxE,EAAO,SAAS,YAAYmL,EAAK,IAAI,KAAK,KAAK,QAAQ;AAAA,IAC7D,KACInL,EAAO,SAAS,YACfmL,EAAK,KAAK,MAAM,MAAMA,EAAK,KAAK,QAAQ,YAAYA,EAAK,KAAK,QAAQ;AAAA,EACnF;AACA,GAEM8gB,KAAuB,CAAC,EAAE,OAAAznB,QAAY;AACxC,EAAAA,EAAM,kBAAkB;AAC5B,GAEM0nB,KAAUjhB,GAAY;AAAA,EACxB,UAAU+gB;AAAA,EACV,cAAcC;AAClB,CAAC,GAEKE,KAAU,CAAC,EAAE,MAAAhhB,GAAM,OAAA3G,GAAO,SAAAzF,EAAO,MAAO;AAiB1C,MAfAmtB,GAAQ,EAAE,MAAA/gB,GAAM,OAAA3G,GAAO,SAAAzF,EAAS,CAAA,GAGhCoM,EAAK,IAAI,KAAK,kBAAkB3G,EAAM,iBAGlCA,EAAM,eAAe,CAACA,EAAM,aAC5BA,EAAM,cAAc,IAGpB2G,EAAK,QAAQ,QAAQ,QAAQ,IAC7BA,EAAK,SAAS,OAId3G,EAAM,UAAU;AAChB,UAAM4nB,IAAY,KAAK,MAAM5nB,EAAM,QAAQ;AAC3C,IAAI4nB,MAAcjhB,EAAK,WACnB3G,EAAM,cAAc,IACpB2G,EAAK,QAAQ,QAAQ,QAAQ,YAC7BA,EAAK,SAASihB;AAAA,EAErB;AACL,GAEMC,KAAe1kB,GAAW;AAAA,EAC5B,QAAQokB;AAAA,EACR,OAAOI;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,MAAM,CAAC,YAAY,iBAAiB;AAAA,IACpC,QAAQ,CAAC,UAAU,YAAY;AAAA,IAC/B,YAAY;AAAA,MACR,YAAY;AAAA,IACf;AAAA,EACJ;AACL,CAAC,GAEKG,KAAa,CAACprB,GAAS3C,GAAMG,GAAO6tB,IAAe,OAAO;AAC5D,EAAI7tB,IACA+B,GAAKS,GAAS3C,GAAMguB,CAAY,IAEhCrrB,EAAQ,gBAAgB3C,CAAI;AAEpC,GAEMiuB,KAAiB,CAAAluB,MAAS;AAE5B,MAAI,GAACA,KAASA,EAAM,UAAU,KAI9B;AAAA,QAAI;AAEA,MAAAA,EAAM,QAAQ;AAAA,IACtB,QAAkB;AAAA,IAAE;AAGhB,QAAIA,EAAM,OAAO;AAEb,YAAMmuB,IAAOpM,GAAgB,MAAM,GAC7BqM,IAAapuB,EAAM,YACnBoK,IAAMpK,EAAM;AAClB,MAAAmuB,EAAK,YAAYnuB,CAAK,GACtBmuB,EAAK,MAAK,GAGN/jB,IACAgkB,EAAW,aAAapuB,GAAOoK,CAAG,IAElCgkB,EAAW,YAAYpuB,CAAK;AAAA,IAEnC;AAAA;AACL,GAEMquB,KAAW,CAAC,EAAE,MAAAxhB,GAAM,OAAA3G,QAAY;AAElC,EAAA2G,EAAK,QAAQ,KAAK,qBAAqB3G,EAAM,EAAE,IAG/C/D,GAAK0K,EAAK,SAAS,QAAQA,EAAK,MAAM,UAAU,CAAC,GAGjD1K,GAAK0K,EAAK,SAAS,iBAAiB,uBAAuB3G,EAAM,EAAE,EAAE,GAGrE/D,GAAK0K,EAAK,SAAS,mBAAmB,wBAAwB3G,EAAM,EAAE,EAAE,GAGxEooB,GAAqB,EAAE,MAAAzhB,GAAM,QAAQ,EAAE,OAAOA,EAAK,MAAM,yBAAyB,EAAG,EAAA,CAAE,GACvF0hB,GAAoB,EAAE,MAAA1hB,GAAM,QAAQ,EAAE,OAAOA,EAAK,MAAM,oBAAoB,EAAG,EAAA,CAAE,GACjF2hB,GAAsB,EAAE,MAAA3hB,GAAM,QAAQ,EAAE,OAAOA,EAAK,MAAM,4BAA4B,EAAG,EAAA,CAAE,GAC3F4hB,GAAe,EAAE,MAAA5hB,EAAI,CAAE,GACvB6hB,GAAe,EAAE,MAAA7hB,GAAM,QAAQ,EAAE,OAAOA,EAAK,MAAM,cAAc,EAAG,EAAA,CAAE,GACtE8hB,GAAiB,EAAE,MAAA9hB,GAAM,QAAQ,EAAE,OAAOA,EAAK,MAAM,oBAAoB,EAAG,EAAA,CAAE,GAG9EA,EAAK,IAAI,eAAe,CAAAvN,MAAK;AACzB,QAAI,CAACuN,EAAK,QAAQ;AACd;AAIJ,UAAM6S,IAAQ,MAAM,KAAK7S,EAAK,QAAQ,KAAK,EAAE,IAAI,CAAAmJ,OAC7CA,EAAK,gBAAgBA,EAAK,oBACnBA,EACV;AAGD,eAAW,MAAM;AAEb,MAAA9P,EAAM,OAAOwZ,CAAK,GAGlBwO,GAAerhB,EAAK,OAAO;AAAA,IAC9B,GAAE,GAAG;AAAA,EACd,GAEIA,EAAK,QAAQ,iBAAiB,UAAUA,EAAK,IAAI,YAAY;AACjE,GAEMyhB,KAAuB,CAAC,EAAE,MAAAzhB,GAAM,QAAAnL,QAAa;AAC/C,EAAKmL,EAAK,MAAM,iCAAiC,KACjDmhB,GAAWnhB,EAAK,SAAS,UAAU,CAAC,CAACnL,EAAO,OAAOA,EAAO,QAAQA,EAAO,MAAM,KAAK,GAAG,IAAI,EAAE;AACjG,GAEM6sB,KAAsB,CAAC,EAAE,MAAA1hB,GAAM,QAAAnL,QAAa;AAC9C,EAAAssB,GAAWnhB,EAAK,SAAS,YAAYnL,EAAO,KAAK;AACrD,GAEM8sB,KAAwB,CAAC,EAAE,MAAA3hB,GAAM,QAAAnL,QAAa;AAChD,EAAAssB,GAAWnhB,EAAK,SAAS,mBAAmBnL,EAAO,KAAK;AAC5D,GAEM+sB,KAAiB,CAAC,EAAE,MAAA5hB,QAAW;AACjC,QAAM8W,IAAa9W,EAAK,MAAM,cAAc,GACtC+hB,IAAkB/hB,EAAK,MAAM,kBAAkB,GAC/CgiB,IAAelL,KAAc,CAACiL;AACpC,EAAAZ,GAAWnhB,EAAK,SAAS,YAAYgiB,CAAY;AACrD,GAEMH,KAAiB,CAAC,EAAE,MAAA7hB,GAAM,QAAAnL,QAAa;AAEzC,EAAKA,EAAO,QAIHmL,EAAK,MAAM,iBAAiB,MAAM,KACvCmhB,GAAWnhB,EAAK,SAAS,YAAY,EAAI,IAJzCmhB,GAAWnhB,EAAK,SAAS,YAAY,EAAK;AAMlD,GAEM8hB,KAAmB,CAAC,EAAE,MAAA9hB,GAAM,QAAAnL,QAAa;AAC3C,EAAAssB,GAAWnhB,EAAK,SAAS,WAAW,CAAC,CAACnL,EAAO,OAAOA,EAAO,UAAU,KAAO,KAAKA,EAAO,KAAK;AACjG,GAEMotB,KAAuB,CAAC,EAAE,MAAAjiB,QAAW;AACvC,QAAM,EAAE,SAAAjK,EAAS,IAAGiK;AAEpB,EAAIA,EAAK,MAAM,iBAAiB,IAAI,KAChCmhB,GAAWprB,GAAS,YAAY,EAAK,GACrCorB,GAAWprB,GAAS,QAAQ,EAAK,MAGjCorB,GAAWprB,GAAS,QAAQ,IAAMiK,EAAK,MAAM,UAAU,CAAC,GAG5BA,EAAK,MAAM,oBAAoB,KAEvDjK,EAAQ,kBAAkB,EAAE,GAI5BiK,EAAK,MAAM,cAAc,KACzBmhB,GAAWprB,GAAS,YAAY,EAAI;AAGhD,GAEMmsB,KAA4B,CAAC,EAAE,MAAAliB,QAAW;AAE5C,EAD4BA,EAAK,MAAM,oBAAoB,KAE3DA,EAAK,QAAQ,kBAAkBA,EAAK,MAAM,yBAAyB,CAAC;AACxE,GAEMmiB,KAAU3lB,GAAW;AAAA,EACvB,KAAK;AAAA,EACL,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,YAAY;AAAA,IACR,MAAM;AAAA,EACT;AAAA,EACD,QAAQglB;AAAA,EACR,SAAS,CAAC,EAAE,MAAAxhB,QAAW;AACnB,IAAAA,EAAK,QAAQ,oBAAoB,UAAUA,EAAK,IAAI,YAAY;AAAA,EACnE;AAAA,EACD,OAAOF,GAAY;AAAA,IACf,eAAemiB;AAAA,IACf,iBAAiBA;AAAA,IACjB,wBAAwBC;AAAA,IAExB,kBAAkBN;AAAA,IAClB,sBAAsBA;AAAA,IACtB,gCAAgCD;AAAA,IAChC,wBAAwBD;AAAA,IACxB,6BAA6BD;AAAA,IAC7B,wBAAwBK;AAAA,IACxB,kBAAkBD;AAAA,EAC1B,CAAK;AACL,CAAC,GAEKO,KAAM;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AACX,GAEMC,KAAW,CAAC,EAAE,MAAAriB,GAAM,OAAA3G,QAAY;AAElC,QAAM+Y,IAAQ8C,GAAgB,OAAO;AACrC,EAAA5f,GAAK8c,GAAO,OAAO,qBAAqB/Y,EAAM,EAAE,EAAE,GAGlD/D,GAAK8c,GAAO,MAAM,wBAAwB/Y,EAAM,EAAE,EAAE,GAGpD/D,GAAK8c,GAAO,eAAe,MAAM,GAGjCpS,EAAK,IAAI,gBAAgB,CAAAvN,MAAK;AAE1B,KADwBA,EAAE,YAAY2vB,GAAI,SAAS3vB,EAAE,YAAY2vB,GAAI,WAGrE3vB,EAAE,eAAc,GAGhBuN,EAAK,IAAI,MAAM;EACvB,GAEIA,EAAK,IAAI,cAAc,CAAAvN,MAAK;AAIxB,IAHqBA,EAAE,WAAW2f,KAASA,EAAM,SAAS3f,EAAE,MAAM,KAMlEuN,EAAK,IAAI,MAAM;EACvB,GAGIoS,EAAM,iBAAiB,WAAWpS,EAAK,IAAI,aAAa,GACxDA,EAAK,QAAQ,iBAAiB,SAASA,EAAK,IAAI,WAAW,GAG3DsiB,GAAiBlQ,GAAO/Y,EAAM,OAAO,GAGrC2G,EAAK,YAAYoS,CAAK,GACtBpS,EAAK,IAAI,QAAQoS;AACrB,GAEMkQ,KAAmB,CAAClQ,GAAO/e,MAAU;AACvC,EAAA+e,EAAM,YAAY/e;AAClB,QAAMkvB,IAAYnQ,EAAM,cAAc,yBAAyB;AAC/D,SAAImQ,KACAjtB,GAAKitB,GAAW,YAAY,GAAG,GAE5BlvB;AACX,GAEMmvB,KAAYhmB,GAAW;AAAA,EACzB,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,QAAQ6lB;AAAA,EACR,SAAS,CAAC,EAAE,MAAAriB,QAAW;AACnB,IAAAA,EAAK,IAAI,MAAM,iBAAiB,WAAWA,EAAK,IAAI,aAAa,GACjEA,EAAK,QAAQ,oBAAoB,SAASA,EAAK,IAAI,WAAW;AAAA,EACjE;AAAA,EACD,OAAOF,GAAY;AAAA,IACf,oBAAoB,CAAC,EAAE,MAAAE,GAAM,QAAAnL,QAAa;AACtC,MAAAytB,GAAiBtiB,EAAK,IAAI,OAAOnL,EAAO,KAAK;AAAA,IAChD;AAAA,EACT,CAAK;AAAA,EACD,QAAQ;AAAA,IACJ,QAAQ,CAAC,WAAW,cAAc,YAAY;AAAA,IAC9C,YAAY;AAAA,MACR,SAAS,EAAE,MAAM,SAAS,UAAU,IAAK;AAAA,MACzC,YAAY;AAAA,MACZ,YAAY;AAAA,IACf;AAAA,EACJ;AACL,CAAC,GAEKmU,KAAOxM,GAAW;AAAA,EACpB,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,QAAQ;AAAA,IACJ,QAAQ,CAAC,cAAc,cAAc,UAAU,UAAU,SAAS;AAAA,IAClE,YAAY;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,SAAS,EAAE,MAAM,SAAS,UAAU,IAAK;AAAA,IAC5C;AAAA,EACJ;AACL,CAAC,GAEKimB,KAAU,CAAC,EAAE,MAAAziB,QAAW;AAC1B,QAAMuV,IAAUvV,EAAK,KAAK,QAAQ,QAAQ,KACpCwV,IAAUxV,EAAK,KAAK,QAAQ,SAAS;AAE3C,EAAAA,EAAK,IAAI,OAAOA,EAAK;AAAA,IACjBA,EAAK,gBAAgBgJ,IAAM;AAAA,MACvB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,YAAYuM;AAAA,MACZ,YAAYC;AAAA,IACxB,CAAS;AAAA,EACT;AACA,GAEMkN,KAAW,CAAC,EAAE,MAAA1iB,GAAM,QAAAnL,QAAa;AACnC,MAAI,CAACmL,EAAK,IAAI,MAAM;AAChB,IAAAyiB,GAAQ,EAAE,MAAAziB,EAAI,CAAE;AAChB;AAAA,EACH;AAED,EAAAA,EAAK,IAAI,KAAK,aAAanL,EAAO,SAAS,WAC3CmL,EAAK,IAAI,KAAK,aAAanL,EAAO,SAAS,UAC3CmL,EAAK,IAAI,KAAK,SAAS,GACvBA,EAAK,IAAI,KAAK,SAAS,GACvBA,EAAK,IAAI,KAAK,UAAU;AAC5B,GAEM2iB,KAAW,CAAC,EAAE,MAAA3iB,QAAW;AAC3B,EAAKA,EAAK,IAAI,SAGdA,EAAK,IAAI,KAAK,UAAU;AAC5B,GAEM4iB,KAAc,CAAC,EAAE,MAAA5iB,QAAW;AAC9B,EAAKA,EAAK,IAAI,SAGdA,EAAK,IAAI,KAAK,SAAS,KACvBA,EAAK,IAAI,KAAK,SAAS,KACvBA,EAAK,IAAI,KAAK,UAAU;AAC5B,GAEM6iB,KAAU,CAAC,EAAE,MAAA7iB,GAAM,OAAA3G,GAAO,SAAAzF,EAAO,MAAO;AAC1C,EAAAkvB,GAAQ,EAAE,MAAA9iB,GAAM,OAAA3G,GAAO,SAAAzF,EAAS,CAAA;AAEhC,QAAM,EAAE,MAAAoV,EAAI,IAAKhJ,EAAK;AAEtB,EAAIpM,EAAQ,WAAW,KAAKoV,KAAQA,EAAK,YAAY,MACjDhJ,EAAK,gBAAgBgJ,CAAI,GACzBhJ,EAAK,IAAI,OAAO;AAExB,GAEM8iB,KAAUhjB,GAAY;AAAA,EACxB,UAAU4iB;AAAA,EACV,UAAUE;AAAA,EACV,cAAcD;AAClB,CAAC,GAEKI,KAAOvmB,GAAW;AAAA,EACpB,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,MAAM;AAAA,EACN,OAAOqmB;AACX,CAAC,GAEKG,KAAgB,CAACjtB,GAAS8c,MAAU;AACtC,MAAI;AAEA,UAAM9L,IAAe,IAAI;AACzB,IAAA8L,EAAM,QAAQ,CAAA1J,MAAQ;AAClB,MAAIA,aAAgB,OAChBpC,EAAa,MAAM,IAAIoC,CAAI,IAE3BpC,EAAa,MAAM;AAAA,QACf,IAAI,KAAK,CAACoC,CAAI,GAAGA,EAAK,MAAM;AAAA,UACxB,MAAMA,EAAK;AAAA,QACnC,CAAqB;AAAA,MACrB;AAAA,IAEA,CAAS,GAGDpT,EAAQ,QAAQgR,EAAa;AAAA,EAChC,QAAa;AACV,WAAO;AAAA,EACV;AACD,SAAO;AACX,GAEMkc,KAAW,CAAC,EAAE,MAAAjjB,EAAM,MAAMA,EAAK,IAAI,SAAS,CAAA,GAE5CkjB,KAAW,CAACljB,GAAMR,MAAOQ,EAAK,IAAI,OAAOR,CAAE,GAE3C2jB,KAA8B,CAAAnjB,MAAQ;AACxC,EAAAA,EAAK,MAAM,kBAAkB,EAAE,QAAQ,CAAA2E,MAAQ;AAC3C,IAAK3E,EAAK,IAAI,OAAO2E,EAAK,EAAE,KAC5B3E,EAAK,QAAQ,YAAYA,EAAK,IAAI,OAAO2E,EAAK,EAAE,CAAC;AAAA,EACzD,CAAK;AACL,GAEMye,KAAkB,CAAC,EAAE,MAAApjB,EAAM,MAAKmjB,GAA4BnjB,CAAI,GAEhEqjB,KAAa,CAAC,EAAE,MAAArjB,GAAM,QAAAnL,QAAa;AAGrC,QAAMyuB,IAAqB,EAFVtjB,EAAK,MAAM,YAAYnL,EAAO,EAAE,EACpB,WAAWkQ,GAAW,UACR/E,EAAK,MAAM,0BAA0B,GAC1EujB,IAAgBrO,GAAgB,OAAO;AAC7C,EAAAqO,EAAc,OAAOD,IAAqB,SAAS,UACnDC,EAAc,OAAOvjB,EAAK,MAAM,UAAU,GAC1CujB,EAAc,WAAWvjB,EAAK,MAAM,cAAc,GAClDA,EAAK,IAAI,OAAOnL,EAAO,EAAE,IAAI0uB,GAC7BJ,GAA4BnjB,CAAI;AACpC,GAEMwjB,KAAgB,CAAC,EAAE,MAAAxjB,GAAM,QAAAnL,QAAa;AACxC,QAAM4uB,IAAQP,GAASljB,GAAMnL,EAAO,EAAE;AAOtC,MANI,CAAC4uB,MAGD5uB,EAAO,wBAAwB,SAAM4uB,EAAM,QAAQ5uB,EAAO,sBAG1D,CAACmL,EAAK,MAAM,0BAA0B;AAAG;AAE7C,QAAM0jB,IAAW1jB,EAAK,MAAM,YAAYnL,EAAO,EAAE;AACjD,EAAAmuB,GAAcS,GAAO,CAACC,EAAS,IAAI,CAAC;AACxC,GAEMC,KAAmB,CAAC,EAAE,MAAA3jB,GAAM,QAAAnL,QAAa;AAE3C,EAAKmL,EAAK,MAAM,0BAA0B,KAC1C,WAAW,MAAM;AACb,UAAMyjB,IAAQP,GAASljB,GAAMnL,EAAO,EAAE;AACtC,IAAK4uB,KACLT,GAAcS,GAAO,CAAC5uB,EAAO,IAAI,CAAC;AAAA,EACrC,GAAE,CAAC;AACR,GAEM+uB,KAAiB,CAAC,EAAE,MAAA5jB,QAAW;AACjC,EAAAA,EAAK,QAAQ,WAAWA,EAAK,MAAM,cAAc;AACrD,GAEM6jB,KAAgB,CAAC,EAAE,MAAA7jB,GAAM,QAAAnL,QAAa;AACxC,QAAM4uB,IAAQP,GAASljB,GAAMnL,EAAO,EAAE;AACtC,EAAK4uB,MACDA,EAAM,cAAYA,EAAM,WAAW,YAAYA,CAAK,GACxD,OAAOzjB,EAAK,IAAI,OAAOnL,EAAO,EAAE;AACpC,GAIMivB,KAAiB,CAAC,EAAE,MAAA9jB,GAAM,QAAAnL,QAAa;AACzC,QAAM4uB,IAAQP,GAASljB,GAAMnL,EAAO,EAAE;AACtC,EAAK4uB,MACD5uB,EAAO,UAAU,OAEjB4uB,EAAM,gBAAgB,OAAO,IAGzBA,EAAM,QAAQ,WACdA,EAAM,QAAQ5uB,EAAO,QAG7BsuB,GAA4BnjB,CAAI;AACpC,GAEM+jB,KAAUjkB,GAAY;AAAA,EACxB,kBAAkB8jB;AAAA,EAClB,cAAcP;AAAA,EACd,eAAeG;AAAA,EACf,iBAAiBK;AAAA,EACjB,kBAAkBC;AAAA,EAClB,oBAAoBH;AAAA,EACpB,mBAAmBP;AAAA,EACnB,gBAAgBA;AACpB,CAAC,GAEKhvB,KAAOoI,GAAW;AAAA,EACpB,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQymB;AAAA,EACR,OAAOc;AAAA,EACP,YAAY;AAChB,CAAC,GAEKC,KAAc,CAAAjuB,MAAY,iBAAiBA,IAAUA,EAAQ,YAAW,IAAK,UAE7EkuB,KAAS,CAAC,OAAO,QAAQ,OAAO,OAAO,OAAO,QAAQ,OAAO,MAAM,GACnEC,KAAS,CAAC,OAAO,OAAO,QAAQ,KAAK,GACrC3J,KAAM;AAAA,EACR,KAAK;AAAA,EACL,MAAM;AACV,GAEM4J,KAAsB,CAACjb,IAAY,QACrCA,IAAYA,EAAU,eAClB+a,GAAO,SAAS/a,CAAS,IAErB,YAAYA,MAAc,QAAQ,SAASA,MAAc,QAAQ,YAAYA,KAGjFgb,GAAO,SAAShb,CAAS,IAClB,UAAUA,IAGdqR,GAAIrR,CAAS,KAAK,KAGvBkb,KAA2B,CAAArd,MAC7B,IAAI,QAAQ,CAACtB,GAASC,MAAW;AAE7B,QAAM2e,IAAQC,GAASvd,CAAY;AACnC,MAAIsd,EAAM,UAAU,CAACE,GAASxd,CAAY;AACtC,WAAOtB,EAAQ4e,CAAK;AAGxB,EAAAG,GAASzd,CAAY,EAAE,KAAKtB,CAAO;AAC3C,CAAK,GAKC8e,KAAW,CAAAxd,MACTA,EAAa,QAAcA,EAAa,MAAM,SAAS,IACpD,IAMLyd,KAAW,CAAAzd,MACb,IAAI,QAAQ,CAACtB,GAASC,MAAW;AAE7B,QAAM+e,KAAiB1d,EAAa,QAAQ,MAAM,KAAKA,EAAa,KAAK,IAAI,CAAE,GAG1E,OAAO,CAAApC,MAAQ+f,GAAiB/f,CAAI,CAAC,EAGrC,IAAI,CAAAA,MAAQggB,GAAiBhgB,CAAI,CAAC;AAGvC,MAAI,CAAC8f,EAAc,QAAQ;AAGvB,IAAAhf,EAAQsB,EAAa,QAAQ,MAAM,KAAKA,EAAa,KAAK,IAAI,CAAA,CAAE;AAChE;AAAA,EACH;AAGD,UAAQ,IAAI0d,CAAa,EACpB,KAAK,CAAAG,MAAsB;AAExB,UAAM/R,IAAQ,CAAA;AACd,IAAA+R,EAAmB,QAAQ,CAAAC,MAAS;AAChC,MAAAhS,EAAM,KAAK,MAAMA,GAAOgS,CAAK;AAAA,IACjD,CAAiB,GAGDpf;AAAA,MACIoN,EACK,OAAO,CAAA1J,MAAQA,CAAI,EACnB,IAAI,CAAAA,OACIA,EAAK,kBAAeA,EAAK,gBAAgBA,EAAK,qBAC5CA,EACV;AAAA,IACzB;AAAA,EACA,CAAa,EACA,MAAM,QAAQ,KAAK;AAChC,CAAK,GAECub,KAAmB,CAAA/f,MAAQ;AAC7B,MAAImgB,GAAQngB,CAAI,GAAG;AACf,UAAMogB,IAAQC,GAAWrgB,CAAI;AAC7B,QAAIogB;AACA,aAAOA,EAAM,UAAUA,EAAM;AAAA,EAEpC;AACD,SAAOpgB,EAAK,SAAS;AACzB,GAEMggB,KAAmB,CAAAhgB,MACrB,IAAI,QAAQ,CAACc,GAASC,MAAW;AAC7B,MAAIuf,GAAiBtgB,CAAI,GAAG;AACxB,IAAAugB,GAAoBF,GAAWrgB,CAAI,CAAC,EAC/B,KAAKc,CAAO,EACZ,MAAMC,CAAM;AACjB;AAAA,EACH;AAED,EAAAD,EAAQ,CAACd,EAAK,UAAS,CAAE,CAAC;AAClC,CAAK,GAECugB,KAAsB,CAAAH,MACxB,IAAI,QAAQ,CAACtf,GAASC,MAAW;AAC7B,QAAMmN,IAAQ,CAAA;AAGd,MAAIsS,IAAa,GACbC,IAAc;AAElB,QAAMC,IAAgB,MAAM;AACxB,IAAID,MAAgB,KAAKD,MAAe,KACpC1f,EAAQoN,CAAK;AAAA,EAE7B,GAGcyS,IAAc,CAAAC,MAAY;AAC5B,IAAAJ;AAEA,UAAMK,IAAkBD,EAAS,gBAG3BE,IAAY,MAAM;AACpB,MAAAD,EAAgB,YAAY,CAAAE,MAAW;AACnC,YAAIA,EAAQ,WAAW,GAAG;AACtB,UAAAP,KACAE;AACA;AAAA,QACH;AAED,QAAAK,EAAQ,QAAQ,CAAAX,MAAS;AAErB,UAAIA,EAAM,cACNO,EAAYP,CAAK,KAGjBK,KAEAL,EAAM,KAAK,CAAA5b,MAAQ;AACf,kBAAMwc,IAAgBC,GAAuBzc,CAAI;AACjD,YAAI4b,EAAM,aAAUY,EAAc,gBAAgBZ,EAAM,WACxDlS,EAAM,KAAK8S,CAAa,GACxBP,KACAC;UAChC,CAA6B;AAAA,QAE7B,CAAqB,GAGDI;MACH,GAAE/f,CAAM;AAAA,IACzB;AAGY,IAAA+f;EACZ;AAGQ,EAAAH,EAAYP,CAAK;AACzB,CAAK,GAECa,KAAyB,CAAAzc,MAAQ;AACnC,MAAIA,EAAK,KAAK;AAAQ,WAAOA;AAC7B,QAAML,IAAOK,EAAK,kBACZ/V,IAAO+V,EAAK,MACZhV,IAAOgwB,GAAoB3b,GAAyBW,EAAK,IAAI,CAAC;AACpE,SAAKhV,EAAK,WACVgV,IAAOA,EAAK,MAAM,GAAGA,EAAK,MAAMhV,CAAI,GACpCgV,EAAK,OAAO/V,GACZ+V,EAAK,mBAAmBL,IACjBK;AACX,GAEM8b,KAAmB,CAAAtgB,MAAQmgB,GAAQngB,CAAI,MAAMqgB,GAAWrgB,CAAI,KAAK,CAAE,GAAE,aAErEmgB,KAAU,CAAAngB,MAAQ,sBAAsBA,GAExCqgB,KAAa,CAAArgB,MAAQA,EAAK,oBAK1B2f,KAAW,CAAAvd,MAAgB;AAC7B,MAAIsd,IAAQ,CAAA;AACZ,MAAI;AAGA,QADAA,IAAQwB,GAA6B9e,CAAY,GAC7Csd,EAAM;AACN,aAAOA;AAEX,IAAAA,IAAQyB,GAA4B/e,CAAY;AAAA,EACnD,QAAW;AAAA,EAEX;AACD,SAAOsd;AACX,GAEMyB,KAA8B,CAAA/e,MAAgB;AAChD,MAAI3S,IAAO2S,EAAa,QAAQ,KAAK;AACrC,SAAI,OAAO3S,KAAS,YAAYA,EAAK,SAC1B,CAACA,CAAI,IAET;AACX,GAEMyxB,KAA+B,CAAA9e,MAAgB;AACjD,MAAI3S,IAAO2S,EAAa,QAAQ,WAAW;AAC3C,MAAI,OAAO3S,KAAS,YAAYA,EAAK,QAAQ;AACzC,UAAMmW,IAAUnW,EAAK,MAAM,mBAAmB;AAC9C,QAAImW;AACA,aAAO,CAACA,EAAQ,CAAC,CAAC;AAAA,EAEzB;AACD,SAAO;AACX,GAEMwb,KAAqB,CAAA,GAErBC,KAAgB,QAAM;AAAA,EACxB,UAAU,EAAE;AAAA,EACZ,SAAS,EAAE;AAAA,EACX,WAAW,EAAE,WAAW,EAAE;AAAA,EAC1B,UAAU,EAAE,WAAW,EAAE;AAC7B,IAEMC,KAAwB,CAAClwB,GAASmwB,GAAgBC,MAAkB;AACtE,QAAMC,IAAWC,GAAqBH,CAAc,GAE9CI,IAAS;AAAA,IACX,SAAAvwB;AAAA,IACA,eAAAowB;AAAA,IACA,OAAO;AAAA,IACP,QAAQ,MAAM;AAAA,IAAE;AAAA,IAChB,SAAS,MAAM;AAAA,IAAE;AAAA,IACjB,QAAQ,MAAM;AAAA,IAAE;AAAA,IAChB,QAAQ,MAAM;AAAA,IAAE;AAAA,IAChB,QAAQ,MAAM;AAAA,IAAE;AAAA,IAChB,WAAW,MAAM;AAAA,IAAE;AAAA,EAC3B;AAEI,SAAAG,EAAO,UAAUF,EAAS,YAAYE,CAAM,GAErCA;AACX,GAEMD,KAAuB,CAAAtwB,MAAW;AAEpC,QAAMqwB,IAAWL,GAAmB,KAAK,CAAAphB,MAAQA,EAAK,YAAY5O,CAAO;AACzE,MAAIqwB;AACA,WAAOA;AAIX,QAAMG,IAAcC,GAAwBzwB,CAAO;AACnD,SAAAgwB,GAAmB,KAAKQ,CAAW,GAC5BA;AACX,GAEMC,KAA0B,CAAAzwB,MAAW;AACvC,QAAM0wB,IAAU,CAAA,GAEV1mB,IAAS;AAAA,IACX,WAAA2mB;AAAA,IACA,UAAAC;AAAA,IACA,WAAAC;AAAA,IACA,MAAArK;AAAA,EACR,GAEUsK,IAAW,CAAA;AAEjB,EAAA3xB,EAAM6K,GAAQ,CAACpN,GAAOm0B,MAAkB;AACpC,IAAAD,EAASl0B,CAAK,IAAIm0B,EAAc/wB,GAAS0wB,CAAO,GAChD1wB,EAAQ,iBAAiBpD,GAAOk0B,EAASl0B,CAAK,GAAG,EAAK;AAAA,EAC9D,CAAK;AAED,QAAMyzB,IAAW;AAAA,IACb,SAAArwB;AAAA,IACA,aAAa,CAAAuwB,OAETG,EAAQ,KAAKH,CAAM,GAGZ,MAAM;AAET,MAAAG,EAAQ,OAAOA,EAAQ,QAAQH,CAAM,GAAG,CAAC,GAGrCG,EAAQ,WAAW,MACnBV,GAAmB,OAAOA,GAAmB,QAAQK,CAAQ,GAAG,CAAC,GAEjElxB,EAAM6K,GAAQ,CAAApN,MAAS;AACnB,QAAAoD,EAAQ,oBAAoBpD,GAAOk0B,EAASl0B,CAAK,GAAG,EAAK;AAAA,MACjF,CAAqB;AAAA,IAErB;AAAA,EAEA;AAEI,SAAOyzB;AACX,GAEMW,KAAmB,CAAC/mB,GAAMgnB,OACtB,sBAAsBhnB,MACxBA,IAAO,WAEJA,EAAK,iBAAiBgnB,EAAM,GAAGA,EAAM,CAAC,IAG3CC,KAAgB,CAAC,GAAG9uB,MAAW;AAEjC,QAAM6H,IAAOgkB,GAAY7rB,CAAM,GAIzB+uB,IAAoBH,GAAiB/mB,GAAM;AAAA,IAC7C,GAAG,EAAE,QAAQ,OAAO;AAAA,IACpB,GAAG,EAAE,QAAQ,OAAO;AAAA,EAC5B,CAAK;AAGD,SAAOknB,MAAsB/uB,KAAUA,EAAO,SAAS+uB,CAAiB;AAC5E;AAEA,IAAIC,KAAgB;AAEpB,MAAMC,KAAgB,CAACrgB,GAAcsgB,MAAW;AAE5C,MAAI;AACA,IAAAtgB,EAAa,aAAasgB;AAAA,EAClC,QAAgB;AAAA,EAAE;AAClB,GAEMX,KAAY,CAAC1mB,GAAMymB,MAAY,CAAAh0B,MAAK;AACtC,EAAAA,EAAE,eAAc,GAEhB00B,KAAgB10B,EAAE,QAElBg0B,EAAQ,QAAQ,CAAAH,MAAU;AACtB,UAAM,EAAE,SAAAvwB,GAAS,SAAAuxB,EAAS,IAAGhB;AAE7B,IAAIW,GAAcx0B,GAAGsD,CAAO,MACxBuwB,EAAO,QAAQ,SAGfgB,EAAQtB,GAAcvzB,CAAC,CAAC;AAAA,EAEpC,CAAK;AACL,GAEMk0B,KAAW,CAAC3mB,GAAMymB,MAAY,CAAAh0B,MAAK;AACrC,EAAAA,EAAE,eAAc;AAEhB,QAAMsU,IAAetU,EAAE;AAEvB,EAAA2xB,GAAyBrd,CAAY,EAAE,KAAK,CAAAlC,MAAS;AACjD,QAAI0iB,IAAiB;AAErB,IAAAd,EAAQ,KAAK,CAAAH,MAAU;AACnB,YAAM,EAAE,eAAAH,GAAe,SAAApwB,GAAS,SAAAuxB,GAAS,QAAAE,GAAQ,QAAAC,GAAQ,WAAAC,EAAW,IAAGpB;AAGvE,MAAAc,GAAcrgB,GAAc,MAAM;AAGlC,YAAM4gB,IAAiBD,EAAU7iB,CAAK;AAGtC,UAAI,CAAC8iB,GAAgB;AACjB,QAAAP,GAAcrgB,GAAc,MAAM;AAClC;AAAA,MACH;AAGD,UAAIkgB,GAAcx0B,GAAGsD,CAAO,GAAG;AAI3B,YAHAwxB,IAAiB,IAGbjB,EAAO,UAAU,MAAM;AACvB,UAAAA,EAAO,QAAQ,SACfgB,EAAQtB,GAAcvzB,CAAC,CAAC;AACxB;AAAA,QACH;AAMD,YAHA6zB,EAAO,QAAQ,QAGXH,KAAiB,CAACwB,GAAgB;AAClC,UAAAP,GAAcrgB,GAAc,MAAM;AAClC;AAAA,QACH;AAGD,QAAA0gB,EAAOzB,GAAcvzB,CAAC,CAAC;AAAA,MACvC;AAEgB,QAAI0zB,KAAiB,CAACoB,KAClBH,GAAcrgB,GAAc,MAAM,GAIlCuf,EAAO,UACPA,EAAO,QAAQ,MACfkB,EAAOxB,GAAcvzB,CAAC,CAAC;AAAA,IAG3C,CAAS;AAAA,EACT,CAAK;AACL,GAEM8pB,KAAO,CAACvc,GAAMymB,MAAY,CAAAh0B,MAAK;AACjC,EAAAA,EAAE,eAAc;AAEhB,QAAMsU,IAAetU,EAAE;AAEvB,EAAA2xB,GAAyBrd,CAAY,EAAE,KAAK,CAAAlC,MAAS;AACjD,IAAA4hB,EAAQ,QAAQ,CAAAH,MAAU;AACtB,YAAM,EAAE,eAAAH,GAAe,SAAApwB,GAAS,QAAA6xB,GAAQ,QAAAJ,GAAQ,WAAAE,EAAW,IAAGpB;AAK9D,UAHAA,EAAO,QAAQ,MAGX,EAAAH,KAAiB,CAACc,GAAcx0B,GAAGsD,CAAO,IAG9C;AAAA,YAAI,CAAC2xB,EAAU7iB,CAAK;AAAG,iBAAO2iB,EAAOxB,GAAcvzB,CAAC,CAAC;AAGrD,QAAAm1B,EAAO5B,GAAcvzB,CAAC,GAAGoS,CAAK;AAAA;AAAA,IAC1C,CAAS;AAAA,EACT,CAAK;AACL,GAEM+hB,KAAY,CAAC5mB,GAAMymB,MAAY,CAAAh0B,MAAK;AACtC,EAAI00B,OAAkB10B,EAAE,UAIxBg0B,EAAQ,QAAQ,CAAAH,MAAU;AACtB,UAAM,EAAE,QAAAkB,EAAQ,IAAGlB;AAEnB,IAAAA,EAAO,QAAQ,MAEfkB,EAAOxB,GAAcvzB,CAAC,CAAC;AAAA,EAC/B,CAAK;AACL,GAEMo1B,KAAe,CAACC,GAAOC,GAAe/0B,MAAY;AAEpD,EAAA80B,EAAM,UAAU,IAAI,kBAAkB;AAGtC,QAAM,EAAE,oBAAAE,GAAoB,uBAAAC,GAAuB,aAAAC,IAAc,CAAArjB,MAASA,EAAO,IAAG7R,GAG9EszB,IAASL;AAAA,IACX6B;AAAA,IACAE,IAAqB,SAAS,kBAAkBF;AAAA,IAChDG;AAAA,EACR;AAGI,MAAIE,IAAY,IACZC,IAAe;AAGnB,EAAA9B,EAAO,YAAY,CAAAzhB,MAGRkjB,EAAcG,EAAYrjB,CAAK,CAAC,GAG3CyhB,EAAO,SAAS,CAAC3uB,GAAUkN,MAAU;AACjC,UAAMwjB,IAAgBH,EAAYrjB,CAAK;AAEvC,QAAI,CAACkjB,EAAcM,CAAa,GAAG;AAC/B,MAAAzzB,EAAI,UAAU+C,CAAQ;AACtB;AAAA,IACH;AAED,IAAAywB,IAAe,aAEfxzB,EAAI,OAAOyzB,GAAe1wB,CAAQ;AAAA,EAC1C,GAEI2uB,EAAO,SAAS,CAAA3uB,MAAY;AACxB,IAAA/C,EAAI,OAAO+C,CAAQ;AAAA,EAC3B,GAEI2uB,EAAO,UAAU,CAAA3uB,MAAY;AACzB,IAAAywB,IAAe,aAEfxzB,EAAI,YAAY+C,CAAQ;AAAA,EAChC,GAEI2uB,EAAO,SAAS,CAAA3uB,MAAY;AACxB,IAAAywB,IAAe,aAEfxzB,EAAI,UAAU+C,CAAQ;AAAA,EAC9B;AAEI,QAAM/C,IAAM;AAAA,IACR,mBAAmB,MAAM;AACrB,MAAIuzB,MAAcC,MACdN,EAAM,QAAQ,cAAcM,GAC5BD,IAAYC;AAAA,IAEnB;AAAA,IACD,QAAQ,MAAM;AAAA,IAAE;AAAA,IAChB,aAAa,MAAM;AAAA,IAAE;AAAA,IACrB,QAAQ,MAAM;AAAA,IAAE;AAAA,IAChB,WAAW,MAAM;AAAA,IAAE;AAAA,IACnB,SAAS,MAAM;AAEX,MAAA9B,EAAO,QAAO;AAAA,IACjB;AAAA,EACT;AAEI,SAAO1xB;AACX;AAEA,IAAI0zB,KAAY;AAChB,MAAMC,KAAc,CAAA,GAEdC,KAAc,OAAK;AAErB,QAAMC,IAAW,SAAS;AAC1B,MAAIA,KAAY,kBAAkB,KAAKA,EAAS,QAAQ,GAAG;AAEvD,QAAIC,IAAU,IACV3yB,IAAU0yB;AACd,WAAO1yB,MAAY,SAAS,QAAM;AAC9B,UAAIA,EAAQ,UAAU,SAAS,gBAAgB,GAAG;AAC9C,QAAA2yB,IAAU;AACV;AAAA,MACH;AACD,MAAA3yB,IAAUA,EAAQ;AAAA,IACrB;AAED,QAAI,CAAC2yB;AAAS;AAAA,EACjB;AAED,EAAAtE,GAAyB,EAAE,aAAa,EAAE,KAAK,CAAAvR,MAAS;AAEpD,IAAKA,EAAM,UAKX0V,GAAY,QAAQ,CAAAnkB,MAAYA,EAASyO,CAAK,CAAC;AAAA,EACvD,CAAK;AACL,GAEM8V,KAAS,CAAAxzB,MAAM;AAEjB,EAAIozB,GAAY,SAASpzB,CAAE,MAK3BozB,GAAY,KAAKpzB,CAAE,GAGf,CAAAmzB,OAIJA,KAAY,IACZ,SAAS,iBAAiB,SAASE,EAAW;AAClD,GAEMI,KAAW,CAAAxkB,MAAY;AACzB,EAAAN,GAAYykB,IAAaA,GAAY,QAAQnkB,CAAQ,CAAC,GAGlDmkB,GAAY,WAAW,MACvB,SAAS,oBAAoB,SAASC,EAAW,GACjDF,KAAY;AAEpB,GAEMO,KAAe,MAAM;AACvB,QAAM1zB,IAAK,CAAA0d,MAAS;AAChB,IAAAje,EAAI,OAAOie,CAAK;AAAA,EACxB,GAEUje,IAAM;AAAA,IACR,SAAS,MAAM;AACX,MAAAg0B,GAASzzB,CAAE;AAAA,IACd;AAAA,IACD,QAAQ,MAAM;AAAA,IAAE;AAAA,EACxB;AAEI,SAAAwzB,GAAOxzB,CAAE,GAEFP;AACX,GAKMk0B,KAAW,CAAC,EAAE,MAAA9oB,GAAM,OAAA3G,QAAY;AAClC,EAAA2G,EAAK,QAAQ,KAAK,uBAAuB3G,EAAM,EAAE,IACjD/D,GAAK0K,EAAK,SAAS,QAAQ,QAAQ,GACnC1K,GAAK0K,EAAK,SAAS,aAAa,QAAQ,GACxC1K,GAAK0K,EAAK,SAAS,iBAAiB,WAAW;AACnD;AAEA,IAAI+oB,KAA8B,MAC9BC,KAA2B;AAE/B,MAAMC,KAAY,CAAA,GAEZC,KAAS,CAAClpB,GAAMmpB,MAAY;AAC9B,EAAAnpB,EAAK,QAAQ,cAAcmpB;AAC/B,GAEMC,KAAU,CAAAppB,MAAQ;AACpB,EAAAA,EAAK,QAAQ,cAAc;AAC/B,GAEMqpB,KAAe,CAACrpB,GAAMiJ,GAAUmJ,MAAU;AAC5C,QAAM7G,IAAQvL,EAAK,MAAM,iBAAiB;AAC1C,EAAAkpB;AAAA,IACIlpB;AAAA,IACA,GAAGoS,CAAK,IAAInJ,CAAQ,KAAKsC,CAAK,IAC1BA,MAAU,IACJvL,EAAK,MAAM,+BAA+B,IAC1CA,EAAK,MAAM,6BAA6B,CAC1D;AAAA,EACA,GAGI,aAAagpB,EAAwB,GACrCA,KAA2B,WAAW,MAAM;AACxC,IAAAI,GAAQppB,CAAI;AAAA,EACf,GAAE,IAAI;AACX,GAEMspB,KAAkB,CAAAtpB,MAAQA,EAAK,QAAQ,WAAW,SAAS,SAAS,aAAa,GAEjFupB,KAAY,CAAC,EAAE,MAAAvpB,GAAM,QAAAnL,QAAa;AACpC,MAAI,CAACy0B,GAAgBtpB,CAAI;AACrB;AAGJ,EAAAA,EAAK,QAAQ,cAAc;AAC3B,QAAM2E,IAAO3E,EAAK,MAAM,YAAYnL,EAAO,EAAE;AAC7C,EAAAo0B,GAAU,KAAKtkB,EAAK,QAAQ,GAE5B,aAAaokB,EAA2B,GACxCA,KAA8B,WAAW,MAAM;AAC3C,IAAAM,GAAarpB,GAAMipB,GAAU,KAAK,IAAI,GAAGjpB,EAAK,MAAM,sBAAsB,CAAC,GAC3EipB,GAAU,SAAS;AAAA,EACtB,GAAE,GAAG;AACV,GAEMO,KAAc,CAAC,EAAE,MAAAxpB,GAAM,QAAAnL,QAAa;AACtC,MAAI,CAACy0B,GAAgBtpB,CAAI;AACrB;AAGJ,QAAM2E,IAAO9P,EAAO;AACpB,EAAAw0B,GAAarpB,GAAM2E,EAAK,UAAU3E,EAAK,MAAM,wBAAwB,CAAC;AAC1E,GAEMypB,KAAgB,CAAC,EAAE,MAAAzpB,GAAM,QAAAnL,QAAa;AAIxC,QAAMoU,IADOjJ,EAAK,MAAM,YAAYnL,EAAO,EAAE,EACvB,UAChBud,IAAQpS,EAAK,MAAM,oCAAoC;AAE7D,EAAAkpB,GAAOlpB,GAAM,GAAGiJ,CAAQ,IAAImJ,CAAK,EAAE;AACvC,GAEMsX,KAAoB,CAAC,EAAE,MAAA1pB,GAAM,QAAAnL,QAAa;AAE5C,QAAMoU,IADOjJ,EAAK,MAAM,YAAYnL,EAAO,EAAE,EACvB,UAChBud,IAAQpS,EAAK,MAAM,mCAAmC;AAE5D,EAAAkpB,GAAOlpB,GAAM,GAAGiJ,CAAQ,IAAImJ,CAAK,EAAE;AACvC,GAEMuX,KAAY,CAAC,EAAE,MAAA3pB,GAAM,QAAAnL,QAAa;AAEpC,QAAMoU,IADOjJ,EAAK,MAAM,YAAYnL,EAAO,EAAE,EACvB;AAItB,EAAAq0B,GAAOlpB,GAAM,GAAGnL,EAAO,OAAO,IAAI,IAAIoU,CAAQ,IAAIpU,EAAO,OAAO,GAAG,EAAE;AACzE,GAEM+0B,KAAYptB,GAAW;AAAA,EACzB,QAAQssB;AAAA,EACR,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,OAAOhpB,GAAY;AAAA,IACf,eAAeypB;AAAA,IACf,iBAAiBC;AAAA,IACjB,8BAA8BC;AAAA,IAE9B,2BAA2BC;AAAA,IAC3B,4BAA4BA;AAAA,IAE5B,6BAA6BC;AAAA,IAC7B,2BAA2BA;AAAA,IAC3B,wBAAwBA;AAAA,IACxB,iCAAiCA;AAAA,EACzC,CAAK;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACV,CAAC,GAEKE,KAAW,CAACroB,GAAQ+B,IAAY,QAClC/B,EAAO,QAAQ,IAAI,OAAO,GAAG+B,CAAS,KAAK,GAAG,GAAG,CAAA8U,MAAOA,EAAI,OAAO,CAAC,EAAE,YAAW,CAAE,GAEjFyR,KAAW,CAACC,GAAMzqB,IAAW,IAAI0qB,IAAgB,OAAS;AAC5D,MAAIzqB,IAAO,KAAK,OACZyC,IAAU;AAEd,SAAO,IAAItN,MAAS;AAChB,iBAAasN,CAAO;AAEpB,UAAMqc,IAAO,KAAK,IAAG,IAAK9e,GAEpB7M,IAAK,MAAM;AACb,MAAA6M,IAAO,KAAK,OACZwqB,EAAK,GAAGr1B,CAAI;AAAA,IACxB;AAEQ,IAAI2pB,IAAO/e,IAIF0qB,MACDhoB,IAAU,WAAWtP,GAAI4M,IAAW+e,CAAI,KAI5C3rB;EAEZ;AACA,GAEMu3B,KAAkB,KAElBC,KAAU,OAAK,EAAE,kBAEjBC,KAAW,CAAC,EAAE,MAAAnqB,GAAM,OAAA3G,QAAY;AAElC,QAAMmG,IAAKQ,EAAK,MAAM,QAAQ;AAC9B,EAAIR,MACAQ,EAAK,QAAQ,KAAKR;AAItB,QAAM3J,IAAYmK,EAAK,MAAM,gBAAgB;AAC7C,EAAInK,KACAA,EACK,MAAM,GAAG,EACT,OAAO,CAAAzC,MAAQA,EAAK,MAAM,EAC1B,QAAQ,CAAAA,MAAQ;AACb,IAAA4M,EAAK,QAAQ,UAAU,IAAI5M,CAAI;AAAA,EAC/C,CAAa,GAIT4M,EAAK,IAAI,QAAQA,EAAK;AAAA,IAClBA,EAAK,gBAAgBwiB,IAAW;AAAA,MAC5B,GAAGnpB;AAAA,MACH,YAAY;AAAA,MACZ,SAAS2G,EAAK,MAAM,gBAAgB;AAAA,IAChD,CAAS;AAAA,EACT,GAGIA,EAAK,IAAI,OAAOA,EAAK,gBAAgBA,EAAK,gBAAgBkhB,IAAc,EAAE,YAAY,KAAI,CAAE,CAAC,GAG7FlhB,EAAK,IAAI,QAAQA,EAAK,gBAAgBA,EAAK,gBAAgB2b,IAAO,EAAE,MAAM,aAAY,CAAE,CAAC,GAGzF3b,EAAK,IAAI,YAAYA,EAAK,gBAAgBA,EAAK,gBAAgB4pB,IAAW,EAAE,GAAGvwB,EAAK,CAAE,CAAC,GAGvF2G,EAAK,IAAI,OAAOA,EAAK,gBAAgBA,EAAK,gBAAgB5L,IAAM,EAAE,GAAGiF,EAAK,CAAE,CAAC,GAI7E2G,EAAK,IAAI,UAAUkV,GAAgB,KAAK,GACxClV,EAAK,IAAI,QAAQ,MAAM,SAAS,QAChCA,EAAK,QAAQ,YAAYA,EAAK,IAAI,OAAO,GAGzCA,EAAK,IAAI,SAAS,MAGlBA,EAAK,MAAM,YAAY,EAClB,OAAO,CAAAzD,MAAS,CAACgE,GAAQhE,EAAM,KAAK,CAAC,EACrC,IAAI,CAAC,EAAE,MAAAnJ,GAAM,OAAAC,QAAY;AACtB,IAAA2M,EAAK,QAAQ,QAAQ5M,CAAI,IAAIC;AAAA,EACzC,CAAS,GAGL2M,EAAK,IAAI,gBAAgB,MACzBA,EAAK,IAAI,eAAe8pB,GAAS,MAAM;AACnC,IAAA9pB,EAAK,IAAI,gBAAgB,IACzBA,EAAK,SAAS,iBAAiB;AAAA,EAClC,GAAE,GAAG,GAGNA,EAAK,IAAI,sBAAsB,MAC/BA,EAAK,IAAI,gBAAgB;AAGzB,QAAMoqB,IAAW,OAAO,WAAW,oCAAoC,EAAE,SACnEC,IAAmB,kBAAkB;AAC3C,EAAIrqB,EAAK,MAAM,mBAAmB,KAAKqqB,KAAoB,CAACD,MACxDpqB,EAAK,QAAQ,iBAAiB,aAAakqB,IAAS,EAAE,SAAS,GAAK,CAAE,GACtElqB,EAAK,QAAQ,iBAAiB,gBAAgBkqB,EAAO;AAIzD,QAAMI,IAAUtqB,EAAK,MAAM,aAAa;AAExC,MADmBsqB,EAAQ,WAAW,GACtB;AACZ,UAAMC,IAAO,SAAS,cAAc,GAAG;AACvC,IAAAA,EAAK,YAAY,qBACjBA,EAAK,aAAa,eAAe,MAAM,GACvCA,EAAK,OAAOD,EAAQ,CAAC,GACrBC,EAAK,WAAW,IAChBA,EAAK,SAAS,UACdA,EAAK,MAAM,uBACXA,EAAK,cAAcD,EAAQ,CAAC,GAC5BtqB,EAAK,QAAQ,YAAYuqB,CAAI,GAC7BvqB,EAAK,IAAI,UAAUuqB;AAAA,EACtB;AACL,GAEMC,KAAU,CAAC,EAAE,MAAAxqB,GAAM,OAAA3G,GAAO,SAAAzF,EAAO,MAAO;AAc1C,MAZA62B,GAAQ,EAAE,MAAAzqB,GAAM,OAAA3G,GAAO,SAAAzF,EAAS,CAAA,GAGhCA,EACK,OAAO,CAAAiB,MAAU,kBAAkB,KAAKA,EAAO,IAAI,CAAC,EACpD,OAAO,CAAAA,MAAU,CAAC0L,GAAQ1L,EAAO,KAAK,KAAK,CAAC,EAC5C,IAAI,CAAC,EAAE,MAAAV,GAAM,MAAAC,QAAW;AACrB,UAAMhB,IAAOy2B,GAAS11B,EAAK,UAAU,CAAC,EAAE,eAAe,GAAG;AAC1D,IAAA6L,EAAK,QAAQ,QAAQ5M,CAAI,IAAIgB,EAAK,OAClC4L,EAAK,iBAAgB;AAAA,EACjC,CAAS,GAEDA,EAAK,KAAK,QAAQ;AAAQ;AAE9B,EAAIA,EAAK,KAAK,QAAQ,UAAUA,EAAK,IAAI,kBACrCA,EAAK,IAAI,gBAAgBA,EAAK,KAAK,QAAQ,OAC3CA,EAAK,IAAI;AAIb,MAAI0qB,IAAS1qB,EAAK,IAAI;AACtB,EAAK0qB,MACDA,IAAS1qB,EAAK,IAAI,SAAS2qB,GAA+B3qB,CAAI,GAG9DA,EAAK,QAAQ,YAAYA,EAAK,IAAI,OAAO,GACzCA,EAAK,IAAI,UAAU;AAIvB,QAAM,EAAE,QAAA4qB,GAAQ,OAAAxY,GAAO,MAAAuO,GAAM,OAAAhF,EAAO,IAAG3b,EAAK;AAG5C,EAAI4qB,KACAA,EAAO,kBAAiB;AAI5B,QAAMlkB,IAAc1G,EAAK,MAAM,wBAAwB,GACjD6qB,IAAc7qB,EAAK,MAAM,oBAAoB,GAC7CuT,IAAavT,EAAK,MAAM,iBAAiB,GACzC8qB,IAAWD,IAAc7qB,EAAK,MAAM,eAAe,KAAKiqB,KAAkB,GAC1Ec,IAAgBxX,MAAeuX,GAG/BE,IAAYp3B,EAAQ,KAAK,CAAAiB,MAAUA,EAAO,SAAS,cAAc;AAGvE,MAAIk2B,KAAiBC,GAAW;AAE5B,UAAM3X,IAAoB2X,EAAU,KAAK;AAGzC,IAAA5Y,EAAM,UAAU,GAEZyY,IACAzY,EAAM,aAAa,MAEfiB,MAAsBzP,GAAkB,MACxCwO,EAAM,aAAa,KACZiB,MAAsBzP,GAAkB,SAC/CwO,EAAM,aAAa,KAEnBA,EAAM,aAAa;AAAA,EAGnC;AAAW,IAAK2Y,MACR3Y,EAAM,UAAU,GAChBA,EAAM,aAAa,GACnBA,EAAM,aAAa;AAGvB,QAAM6Y,IAAiBC,GAAwBlrB,CAAI,GAE7CmrB,IAAaC,GAAoBprB,CAAI,GAErCqrB,IAAcjZ,EAAM,KAAK,QAAQ,QACjCkZ,IAAqB,CAACT,KAAeE,IAAgB,IAAIM,GAEzDE,IAAgBR,IAAgBpK,EAAK,KAAK,QAAQ,YAAY,GAC9D6K,IAAmBjY,MAAe,IAAI,IAAIoN,EAAK,KAAK,QAAQ,cAE5DP,IAAekL,IAAqBC,IAAgBJ,EAAW,SAASK,GACxEC,IAAeH,IAAqBC,IAAgBJ,EAAW,SAASK;AAM9E,MAHA7K,EAAK,aACD,KAAK,IAAI,GAAG2K,IAAqB3K,EAAK,KAAK,QAAQ,SAAS,IAAIsK,EAAe,KAE/EvkB,GAAa;AAIb,UAAMzK,IAAQ+D,EAAK,KAAK,QAAQ,OAC1B9D,IAASD,IAAQyK;AAGvB,IAAIA,MAAgB1G,EAAK,IAAI,wBACzBA,EAAK,IAAI,sBAAsB0G,GAC/B1G,EAAK,IAAI,gBAAgB;AAI7B,UAAM0rB,IAAU1rB,EAAK,IAAI;AACzB,IAAA0rB,EAAQ,KAAKzvB,CAAK;AAElB,UAAM0vB,IAAc;AACpB,QAAID,EAAQ,SAASC,IAAc,GAAG;AAClC,YAAM3O,IAAI0O,EAAQ,QACZv0B,IAAS6lB,IAAI;AACnB,UAAI4O,KAAU;AACd,eAAS9hB,IAAIkT,GAAGlT,KAAK3S,GAAQ2S;AAKzB,YAJI4hB,EAAQ5hB,CAAC,MAAM4hB,EAAQ5hB,IAAI,CAAC,KAC5B8hB,MAGAA,MAAWD;AAEX;AAAA,IAGX;AAGD,IAAAhQ,EAAM,WAAW,IACjBA,EAAM,SAASzf;AAGf,UAAM2vB;AAAA;AAAA,MAEF3vB,IACAovB;AAAA,OAECE,IAAmBP,EAAe;AAAA,OAElCF,IAAgBQ,IAAgB;AAAA;AAErC,IAAIJ,EAAW,SAASU,IACpBlL,EAAK,WAAWkL,IAEhBlL,EAAK,WAAW,MAIpB3gB,EAAK,SAAS9D;AAAA,EACtB,WAAewuB,EAAO,aAAa;AAI3B,IAAA/O,EAAM,WAAW;AAGjB,UAAMkQ;AAAA;AAAA,MAEFnB,EAAO,cACPY;AAAA,OAECE,IAAmBP,EAAe;AAAA,OAElCF,IAAgBQ,IAAgB;AAAA;AAGrC,IAAIJ,EAAW,SAASU,IACpBlL,EAAK,WAAWkL,IAEhBlL,EAAK,WAAW;AAAA,EAI5B,WAAe+J,EAAO,cAAc;AAI5B,UAAMoB,IAAiB1L,KAAgBsK,EAAO,cACxCqB,IAAc,KAAK,IAAIrB,EAAO,cAActK,CAAY;AAC9D,IAAAzE,EAAM,WAAW,IACjBA,EAAM,SAASmQ,IACTC,IACAA,IAAcd,EAAe,MAAMA,EAAe;AAGxD,UAAMY;AAAA;AAAA,MAEFE,IACAT;AAAA,OAECE,IAAmBP,EAAe;AAAA,OAElCF,IAAgBQ,IAAgB;AAAA;AAGrC,IAAInL,IAAesK,EAAO,gBAAgBS,EAAW,SAASU,IAC1DlL,EAAK,WAAWkL,IAEhBlL,EAAK,WAAW,MAIpB3gB,EAAK,SAAS,KAAK;AAAA,MACf0qB,EAAO;AAAA,MACPe,IAAeR,EAAe,MAAMA,EAAe;AAAA,IAC/D;AAAA,EACA,OAAW;AAIH,UAAMe,IAAazY,IAAa,IAAI0X,EAAe,MAAMA,EAAe,SAAS;AACjF,IAAAtP,EAAM,WAAW,IACjBA,EAAM,SAAS,KAAK,IAAI0P,GAAajL,IAAe4L,CAAU,GAG9DhsB,EAAK,SAAS,KAAK,IAAIqrB,GAAaI,IAAeO,CAAU;AAAA,EAChE;AAGD,EAAIhsB,EAAK,IAAI,WAAW2b,EAAM,kBAC1B3b,EAAK,IAAI,QAAQ,MAAM,YAAY,cAAc2b,EAAM,aAAa;AAC5E,GAEMuP,KAA0B,CAAAlrB,MAAQ;AACpC,QAAM2E,IAAO3E,EAAK,IAAI,KAAK,WAAW,CAAC,EAAE,WAAW,CAAC;AACrD,SAAO2E,IACD;AAAA,IACI,KAAKA,EAAK,KAAK,QAAQ;AAAA,IACvB,QAAQA,EAAK,KAAK,QAAQ;AAAA,EAC7B,IACD;AAAA,IACI,KAAK;AAAA,IACL,QAAQ;AAAA,EACtB;AACA,GAEMymB,KAAsB,CAAAprB,MAAQ;AAChC,MAAIisB,IAAS,GACTvB,IAAS;AAGb,QAAMwB,IAAalsB,EAAK,IAAI,MACtBmsB,IAAWD,EAAW,WAAW,CAAC,GAClC7M,IAAkB8M,EAAS,WAAW,OAAO,CAAAj2B,MAASA,EAAM,KAAK,QAAQ,MAAM,GAC/E4mB,IAAW9c,EACZ,MAAM,kBAAkB,EACxB,IAAI,CAAA2E,MAAQ0a,EAAgB,KAAK,CAAAnpB,MAASA,EAAM,OAAOyO,EAAK,EAAE,CAAC,EAC/D,OAAO,CAAAA,MAAQA,CAAI;AAGxB,MAAImY,EAAS,WAAW;AAAG,WAAO,EAAE,QAAAmP,GAAQ,QAAAvB;AAE5C,QAAM/N,IAAkBwP,EAAS,KAAK,QAAQ,OACxCtM,IAAYhD,GAAuBsP,GAAUrP,GAAUoP,EAAW,eAAe,GAEjFhM,IAAYpD,EAAS,CAAC,EAAE,KAAK,SAE7BO,IAAqB6C,EAAU,YAAYA,EAAU,cACrDhD,IAAuBgD,EAAU,aAAaA,EAAU,aAExDtD,IAAYsD,EAAU,QAAQhD,GAC9BI,IAAa4C,EAAU,SAAS7C,GAEhC+O,IAAU,OAAOvM,IAAc,OAAeA,KAAa,IAAI,IAAI,GACnEwM,IAAcvP,EAAS,KAAK,CAAA5mB,MAASA,EAAM,oBAAoBA,EAAM,UAAU,IAAI,IACnF,KACA,GACAo2B,IAAoBxP,EAAS,SAASsP,IAAUC,GAChDlP,IAAcT,GAAeC,GAAiBC,CAAS;AAG7D,SAAIO,MAAgB,IAChBL,EAAS,QAAQ,CAAAnY,MAAQ;AACrB,UAAMzI,IAASyI,EAAK,KAAK,QAAQ,SAAS0Y;AAC1C,IAAAqN,KAAUxuB,GACV+vB,KAAU/vB,IAASyI,EAAK;AAAA,EACpC,CAAS,KAID+lB,IAAS,KAAK,KAAK4B,IAAoBnP,CAAW,IAAIG,GACtD2O,IAASvB,IAGN,EAAE,QAAAuB,GAAQ,QAAAvB;AACrB,GAEMC,KAAiC,CAAA3qB,MAAQ;AAC3C,QAAM9D,IAAS8D,EAAK,IAAI,iBAAiB;AAIzC,SAAO;AAAA,IACH,cAJiB,SAASA,EAAK,MAAM,WAAW,EAAE,KAAK;AAAA,IAKvD,aAJgB9D,MAAW,IAAI,OAAOA;AAAA,EAK9C;AACA,GAEMqwB,KAAkB,CAACvsB,GAAM6E,MAAU;AACrC,QAAM2nB,IAAexsB,EAAK,MAAM,mBAAmB,GAC7CysB,IAAgBzsB,EAAK,MAAM,oBAAoB,GAC/CuT,IAAavT,EAAK,MAAM,iBAAiB;AAC/C,MAAI8qB,IAAW9qB,EAAK,MAAM,eAAe;AAGzC,QAAM0sB,IAAmB7nB,EAAM;AAG/B,SAAI,CAAC4nB,KAAiBC,IAAmB,KACrC1sB,EAAK,SAAS,uBAAuB;AAAA,IACjC,QAAQ6E;AAAA,IACR,OAAOkH,EAAe,WAAW,GAAG,WAAW;AAAA,EAC3D,CAAS,GACM,OAIX+e,IAAW2B,IAAgB3B,IAAW,GAElC,CAAC2B,KAAiBD,IAEX,KAIStrB,GAAM4pB,CAAQ,KACfvX,IAAamZ,IAAmB5B,KAC/C9qB,EAAK,SAAS,uBAAuB;AAAA,IACjC,QAAQ6E;AAAA,IACR,OAAOkH,EAAe,WAAW,GAAG,WAAW;AAAA,EAC3D,CAAS,GACM,MAGJ;AACX,GAEM4gB,KAAe,CAAChM,GAAM7D,GAAUnlB,MAAa;AAC/C,QAAMw0B,IAAWxL,EAAK,WAAW,CAAC;AAClC,SAAO9D,GAAuBsP,GAAUrP,GAAU;AAAA,IAC9C,MAAMnlB,EAAS,YAAYw0B,EAAS,KAAK,QAAQ;AAAA,IACjD,KACIx0B,EAAS,YACRgpB,EAAK,KAAK,MAAM,MAAMA,EAAK,KAAK,QAAQ,YAAYA,EAAK,KAAK,QAAQ;AAAA,EACnF,CAAK;AACL,GAKMiM,KAAa,CAAA5sB,MAAQ;AACvB,QAAM6sB,IAAY7sB,EAAK,MAAM,gBAAgB,GACvC8W,IAAa9W,EAAK,MAAM,cAAc,GACtC8sB,IAAUD,KAAa,CAAC/V;AAC9B,MAAIgW,KAAW,CAAC9sB,EAAK,IAAI,QAAQ;AAC7B,UAAM4qB,IAAS/C;AAAA,MACX7nB,EAAK;AAAA,MACL,CAAA6E,MAAS;AAEL,cAAMkoB,IAAiB/sB,EAAK,MAAM,sBAAsB,MAAM,MAAM;AAIpE,eADuBA,EAAK,MAAM,qBAAqB,IAEjD6E,EAAM;AAAA,UACF,CAAAF,MACIqB,GAAa,qBAAqBrB,GAAM;AAAA,YACpC,OAAO3E,EAAK;AAAA,UAC9C,CAA+B,EAAE,MAAM,CAAA+Q,MAAUA,MAAW,EAAI,KAAKgc,EAAepoB,CAAI;AAAA,QACjE,IACD;AAAA,MACT;AAAA,MACD;AAAA,QACI,aAAa,CAAAE,MAAS;AAClB,gBAAM2O,IAAexT,EAAK,MAAM,mBAAmB;AACnD,iBAAO6E,EAAM,OAAO,CAAAF,MACZqL,GAAOrL,CAAI,IACJ,CAAC6O,EAAa,SAAS7O,EAAK,KAAK,YAAW,CAAE,IAElD,EACV;AAAA,QACJ;AAAA,QACD,oBAAoB3E,EAAK,MAAM,kBAAkB;AAAA,QACjD,uBAAuBA,EAAK,MAAM,qBAAqB;AAAA,MAC1D;AAAA,IACb;AAEQ,IAAA4qB,EAAO,SAAS,CAAC/lB,GAAOlN,MAAa;AAGjC,YAAM0nB,IADOrf,EAAK,IAAI,KAAK,WAAW,CAAC,EACV,WAAW,OAAO,CAAA9J,MAASA,EAAM,KAAK,QAAQ,MAAM,GAC3E4mB,IAAW9c,EACZ,MAAM,kBAAkB,EACxB,IAAI,CAAA2E,MAAQ0a,EAAgB,KAAK,CAAAnpB,MAASA,EAAM,OAAOyO,EAAK,EAAE,CAAC,EAC/D,OAAO,CAAAA,MAAQA,CAAI;AAExB,MAAAY,GAAiB,aAAaV,GAAO,EAAE,UAAU7E,EAAK,SAAU,CAAA,EAAE,KAAK,CAAA/L,MAAS;AAE5E,YAAIs4B,GAAgBvsB,GAAM/L,CAAK;AAAG,iBAAO;AAGzC,QAAA+L,EAAK,SAAS,aAAa;AAAA,UACvB,OAAO/L;AAAA,UACP,OAAO04B,GAAa3sB,EAAK,IAAI,MAAM8c,GAAUnlB,CAAQ;AAAA,UACrD,mBAAmBiM,GAAkB;AAAA,QACzD,CAAiB;AAAA,MACjB,CAAa,GAED5D,EAAK,SAAS,YAAY,EAAE,UAAArI,EAAU,CAAA,GAEtCqI,EAAK,SAAS,gBAAgB,EAAE,UAAArI,EAAU,CAAA;AAAA,IACtD,GAEQizB,EAAO,cAAc,CAAAjzB,MAAY;AAC7B,MAAAqI,EAAK,SAAS,kBAAkB,EAAE,UAAArI,EAAU,CAAA;AAAA,IACxD,GAEQizB,EAAO,SAASd,GAAS,CAAAnyB,MAAY;AACjC,MAAAqI,EAAK,SAAS,YAAY,EAAE,UAAArI,EAAU,CAAA;AAAA,IAClD,CAAS,GAEDizB,EAAO,YAAY,CAAAjzB,MAAY;AAC3B,MAAAqI,EAAK,SAAS,gBAAgB,EAAE,UAAArI,EAAU,CAAA;AAAA,IACtD,GAEQqI,EAAK,IAAI,SAAS4qB,GAElB5qB,EAAK,IAAI,OAAOA,EAAK,gBAAgBA,EAAK,gBAAgB+iB,EAAI,CAAC;AAAA,EAClE;AAAM,IAAI,CAAC+J,KAAW9sB,EAAK,IAAI,WAC5BA,EAAK,IAAI,OAAO,WAChBA,EAAK,IAAI,SAAS,MAClBA,EAAK,gBAAgBA,EAAK,IAAI,IAAI;AAE1C,GAKMgtB,KAAe,CAAChtB,GAAM3G,MAAU;AAClC,QAAMwzB,IAAY7sB,EAAK,MAAM,kBAAkB,GACzC8W,IAAa9W,EAAK,MAAM,cAAc,GACtC8sB,IAAUD,KAAa,CAAC/V;AAC9B,EAAIgW,KAAW,CAAC9sB,EAAK,IAAI,UACrBA,EAAK,IAAI,UAAUA,EAAK;AAAA,IACpBA,EAAK,gBAAgBmiB,IAAS;AAAA,MAC1B,GAAG9oB;AAAA,MACH,QAAQ,CAAAwL,MAAS;AACb,QAAAU,GAAiB,aAAaV,GAAO;AAAA,UACjC,UAAU7E,EAAK;AAAA,QACvC,CAAqB,EAAE,KAAK,CAAA/L,MAAS;AAEb,cAAIs4B,GAAgBvsB,GAAM/L,CAAK;AAAG,mBAAO;AAGzC,UAAA+L,EAAK,SAAS,aAAa;AAAA,YACvB,OAAO/L;AAAA,YACP,OAAO;AAAA,YACP,mBAAmB2P,GAAkB;AAAA,UACjE,CAAyB;AAAA,QACzB,CAAqB;AAAA,MACJ;AAAA,IACjB,CAAa;AAAA,IACD;AAAA,EACZ,IACe,CAACkpB,KAAW9sB,EAAK,IAAI,YAC5BA,EAAK,gBAAgBA,EAAK,IAAI,OAAO,GACrCA,EAAK,IAAI,UAAU;AAE3B,GAKMitB,KAAc,CAAAjtB,MAAQ;AACxB,QAAM6sB,IAAY7sB,EAAK,MAAM,iBAAiB,GACxC8W,IAAa9W,EAAK,MAAM,cAAc,GACtC8sB,IAAUD,KAAa,CAAC/V;AAC9B,EAAIgW,KAAW,CAAC9sB,EAAK,IAAI,UACrBA,EAAK,IAAI,SAAS6oB,MAClB7oB,EAAK,IAAI,OAAO,SAAS,CAAA6E,MAAS;AAC9B,IAAAU,GAAiB,aAAaV,GAAO,EAAE,UAAU7E,EAAK,SAAU,CAAA,EAAE,KAAK,CAAA/L,MAAS;AAE5E,UAAIs4B,GAAgBvsB,GAAM/L,CAAK;AAAG,eAAO;AAGzC,MAAA+L,EAAK,SAAS,aAAa;AAAA,QACvB,OAAO/L;AAAA,QACP,OAAO;AAAA,QACP,mBAAmB2P,GAAkB;AAAA,MACzD,CAAiB;AAAA,IACjB,CAAa;AAAA,EACb,KACe,CAACkpB,KAAW9sB,EAAK,IAAI,WAC5BA,EAAK,IAAI,OAAO,WAChBA,EAAK,IAAI,SAAS;AAE1B,GAKMyqB,KAAU3qB,GAAY;AAAA,EACxB,sBAAsB,CAAC,EAAE,MAAAE,GAAM,OAAA3G,QAAY;AACvC,IAAA2zB,GAAahtB,GAAM3G,CAAK;AAAA,EAC3B;AAAA,EACD,oBAAoB,CAAC,EAAE,MAAA2G,QAAW;AAC9B,IAAA4sB,GAAW5sB,CAAI;AAAA,EAClB;AAAA,EACD,qBAAqB,CAAC,EAAE,MAAAA,QAAW;AAC/B,IAAAitB,GAAYjtB,CAAI;AAAA,EACnB;AAAA,EACD,kBAAkB,CAAC,EAAE,MAAAA,GAAM,OAAA3G,QAAY;AACnC,IAAAuzB,GAAW5sB,CAAI,GACfitB,GAAYjtB,CAAI,GAChBgtB,GAAahtB,GAAM3G,CAAK,GACL2G,EAAK,MAAM,cAAc,IAExCA,EAAK,QAAQ,QAAQ,WAAW,aAGhCA,EAAK,QAAQ,gBAAgB,eAAe;AAAA,EAEnD;AACL,CAAC,GAEKA,KAAOxD,GAAW;AAAA,EACpB,MAAM;AAAA,EACN,MAAM,CAAC,EAAE,MAAAwD,QAAW;AAChB,IAAIA,EAAK,IAAI,YACTA,EAAK,IAAI,gBAAgBA,EAAK,IAAI,QAAQ;AAAA,EAEjD;AAAA,EACD,QAAQmqB;AAAA,EACR,OAAOK;AAAA,EACP,SAAS,CAAC,EAAE,MAAAxqB,QAAW;AACnB,IAAIA,EAAK,IAAI,UACTA,EAAK,IAAI,OAAO,WAEhBA,EAAK,IAAI,UACTA,EAAK,IAAI,OAAO,WAEpBA,EAAK,QAAQ,oBAAoB,aAAakqB,EAAO,GACrDlqB,EAAK,QAAQ,oBAAoB,gBAAgBkqB,EAAO;AAAA,EAC3D;AAAA,EACD,QAAQ;AAAA,IACJ,QAAQ,CAAC,QAAQ;AAAA,EACpB;AACL,CAAC,GAGKgD,KAAY,CAACC,IAAiB,OAAO;AAEvC,MAAIC,IAAkB;AAGtB,QAAMhnB,IAAiBC,MAGjBlJ,IAAQ1J;AAAA;AAAA,IAEV4P,GAAmB+C,CAAc;AAAA;AAAA,IAGjC,CAACzS,IAASgQ,GAAoByC,CAAc,CAAC;AAAA;AAAA,IAG7C,CAACxS,IAAS8P,GAAoB0C,CAAc,CAAC;AAAA,EACrD;AAGI,EAAAjJ,EAAM,SAAS,eAAe,EAAE,SAASgwB,EAAgB,CAAA;AAGzD,QAAME,IAAoB,MAAM;AAC5B,IAAI,SAAS,UACblwB,EAAM,SAAS,MAAM;AAAA,EAC7B;AACI,WAAS,iBAAiB,oBAAoBkwB,CAAiB;AAG/D,MAAIC,IAAkB,MAClBC,IAAa,IACbC,IAAyB,IACzBC,IAAqB,MACrBC,IAAqB;AACzB,QAAMC,IAAgB,MAAM;AACxB,IAAKJ,MACDA,IAAa,KAEjB,aAAaD,CAAe,GAC5BA,IAAkB,WAAW,MAAM;AAC/B,MAAAC,IAAa,IACbE,IAAqB,MACrBC,IAAqB,MACjBF,MACAA,IAAyB,IACzBrwB,EAAM,SAAS,iBAAiB;AAAA,IAEvC,GAAE,GAAG;AAAA,EACd;AACI,SAAO,iBAAiB,UAAUwwB,CAAa;AAG/C,QAAMr3B,IAAO0J,GAAK7C,GAAO,EAAE,IAAI0G,GAAa,EAAA,CAAE;AAK9C,MAAIxG,IAAY,IACZuwB,IAAW;AAEf,QAAMC,IAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOjB,OAAO,MAAM;AAqBT,MAlBIN,MACAG,IAAqB,OAAO,YACvBD,MACDA,IAAqBC,IAGrB,CAACF,KAA0BE,MAAuBD,MAClDtwB,EAAM,SAAS,kBAAkB,GACjCqwB,IAAyB,MAI7BI,KAAYvwB,MAEZA,IAAY/G,EAAK,QAAQ,iBAAiB,OAI1C,CAAA+G,MAGJ/G,EAAK,MAAK,GAGVs3B,IAAWt3B,EAAK,KAAK,QAAQ;AAAA,IAChC;AAAA;AAAA;AAAA;AAAA;AAAA,IAMD,QAAQ,CAAA+B,MAAM;AAEV,YAAMzE,IAAUuJ,EACX,mBAAoB,EAGpB,OAAO,CAAAtI,MAAU,CAAC,QAAQ,KAAKA,EAAO,IAAI,CAAC;AAGhD,MAAIwI,KAAa,CAACzJ,EAAQ,WAG1Bk6B,EAAqBl6B,CAAO,GAG5ByJ,IAAY/G,EAAK,OAAO+B,GAAIzE,GAAS45B,CAAsB,GAG3D5oB,GAAoBzH,EAAM,MAAM,WAAW,CAAC,GAGxCE,KACAF,EAAM,qBAAoB;AAAA,IAEjC;AAAA,EACT,GAKU4wB,IAAc,CAAA36B,MAAQ,CAAAgB,MAAQ;AAEhC,UAAMzB,IAAQ;AAAA,MACV,MAAMS;AAAA,IAClB;AAGQ,QAAI,CAACgB;AACD,aAAOzB;AAiBX,QAbIyB,EAAK,eAAe,OAAO,MAC3BzB,EAAM,QAAQyB,EAAK,QAAQ,EAAE,GAAGA,EAAK,MAAO,IAAG,OAG/CA,EAAK,WACLzB,EAAM,SAAS,EAAE,GAAGyB,EAAK,OAAM,IAG/BA,EAAK,SACLzB,EAAM,SAASyB,EAAK,OAIpBA,EAAK;AACL,MAAAzB,EAAM,OAAOyB,EAAK;AAAA,aACXA,EAAK,QAAQA,EAAK,IAAI;AAC7B,YAAMuQ,IAAOvQ,EAAK,OAAOA,EAAK,OAAO+I,EAAM,MAAM,YAAY/I,EAAK,EAAE;AACpE,MAAAzB,EAAM,OAAOgS,IAAOD,GAAcC,CAAI,IAAI;AAAA,IAC7C;AAGD,WAAIvQ,EAAK,UACLzB,EAAM,QAAQyB,EAAK,MAAM,IAAIsQ,EAAa,IAI1C,WAAW,KAAKtR,CAAI,MACpBT,EAAM,WAAWyB,EAAK,WAItBA,EAAK,eAAe,QAAQ,KAAKA,EAAK,eAAe,QAAQ,MAC7DzB,EAAM,SAASyB,EAAK,QACpBzB,EAAM,SAASyB,EAAK,SAGjBzB;AAAA,EACf,GAEUq7B,IAAc;AAAA,IAChB,aAAaD,EAAY,SAAS;AAAA,IAElC,UAAUA,EAAY,MAAM;AAAA,IAE5B,qBAAqBA,EAAY,SAAS;AAAA,IAE1C,eAAeA,EAAY,UAAU;AAAA,IACrC,qBAAqBA,EAAY,cAAc;AAAA,IAC/C,+BAA+BA,EAAY,iBAAiB;AAAA,IAC5D,eAAeA,EAAY,SAAS;AAAA,IAEpC,wBAAwB,CAACA,EAAY,OAAO,GAAGA,EAAY,SAAS,CAAC;AAAA,IAErE,2BAA2B,CAACA,EAAY,OAAO,GAAGA,EAAY,SAAS,CAAC;AAAA,IAExE,6BAA6B,CAACA,EAAY,OAAO,GAAGA,EAAY,YAAY,CAAC;AAAA,IAE7E,oBAAoBA,EAAY,aAAa;AAAA,IAE7C,2BAA2BA,EAAY,kBAAkB;AAAA,IACzD,kCAAkCA,EAAY,qBAAqB;AAAA,IACnE,2BAA2BA,EAAY,kBAAkB;AAAA,IACzD,8BAA8BA,EAAY,aAAa;AAAA,IACvD,kCAAkCA,EAAY,cAAc;AAAA,IAC5D,4BAA4BA,EAAY,mBAAmB;AAAA,IAE3D,iCAAiC,CAACA,EAAY,OAAO,GAAGA,EAAY,aAAa,CAAC;AAAA,IAElF,iBAAiBA,EAAY,YAAY;AAAA,IAEzC,kBAAkBA,EAAY,aAAa;AAAA,IAE3C,mBAAmBA,EAAY,cAAc;AAAA,IAE7C,mBAAmBA,EAAY,cAAc;AAAA,EACrD,GAEUE,IAAc,CAAAt7B,MAAS;AAEzB,UAAMu7B,IAAS,EAAE,MAAMC,GAAS,GAAGx7B,EAAK;AACxC,WAAOu7B,EAAO,MACd53B,EAAK,QAAQ;AAAA,MACT,IAAI,YAAY,YAAY3D,EAAM,IAAI,IAAI;AAAA;AAAA,QAEtC,QAAAu7B;AAAA;AAAA,QAGA,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,UAAU;AAAA;AAAA,MAC1B,CAAa;AAAA,IACb;AAGQ,UAAMpf,IAAS,CAAA;AAGf,IAAInc,EAAM,eAAe,OAAO,KAC5Bmc,EAAO,KAAKnc,EAAM,KAAK,GAIvBA,EAAM,eAAe,MAAM,KAC3Bmc,EAAO,KAAKnc,EAAM,IAAI;AAI1B,UAAMy7B,IAAW,CAAC,QAAQ,SAAS,MAAM;AACzC,WAAO,KAAKz7B,CAAK,EACZ,OAAO,CAAAyC,MAAO,CAACg5B,EAAS,SAASh5B,CAAG,CAAC,EACrC,QAAQ,CAAAA,MAAO0Z,EAAO,KAAKnc,EAAMyC,CAAG,CAAC,CAAC,GAG3C+4B,EAAQ,KAAKx7B,EAAM,MAAM,GAAGmc,CAAM;AAGlC,UAAMjc,IAAUsK,EAAM,MAAM,SAASxK,EAAM,KAAK,aAAa,EAAE;AAC/D,IAAIE,KACAA,EAAQ,GAAGic,CAAM;AAAA,EAE7B,GAEUgf,IAAuB,CAAAl6B,MAAW;AACpC,IAAKA,EAAQ,UACbA,EACK,OAAO,CAAAiB,MAAUm5B,EAAYn5B,EAAO,IAAI,CAAC,EACzC,QAAQ,CAAAA,MAAU;AACf,YAAMkL,IAASiuB,EAAYn5B,EAAO,IAAI;AACtC,OAAC,MAAM,QAAQkL,CAAM,IAAIA,IAAS,CAACA,CAAM,GAAG,QAAQ,CAAA6a,MAAS;AAEzD,QAAI/lB,EAAO,SAAS,kBAChBo5B,EAAYrT,EAAM/lB,EAAO,IAAI,CAAC,IAE9B,WAAW,MAAM;AACb,UAAAo5B,EAAYrT,EAAM/lB,EAAO,IAAI,CAAC;AAAA,QACjC,GAAE,CAAC;AAAA,MAE5B,CAAiB;AAAA,IACjB,CAAa;AAAA,EACb,GAKUyR,IAAa,CAAAtT,MAAWmK,EAAM,SAAS,eAAe,EAAE,SAAAnK,EAAO,CAAE,GAEjE2d,IAAU,CAAAnc,MAAS2I,EAAM,MAAM,mBAAmB3I,CAAK,GAEvD65B,IAAc,CAAA75B,MAChB,IAAI,QAAQ,CAACiR,GAASC,MAAW;AAC7B,IAAAvI,EAAM,SAAS,wBAAwB;AAAA,MACnC,OAAA3I;AAAA,MACA,SAAS,CAAAmQ,MAAQ;AACb,QAAAc,EAAQd,CAAI;AAAA,MACf;AAAA,MACD,SAAS,CAAAoB,MAAS;AACd,QAAAL,EAAOK,CAAK;AAAA,MACf;AAAA,IACjB,CAAa;AAAA,EACb,CAAS,GAECuoB,IAAU,CAACxjB,GAAQ9X,IAAU,CAAE,MACjC,IAAI,QAAQ,CAACyS,GAASC,MAAW;AAC7B,IAAA6oB,EAAS,CAAC,EAAE,QAAAzjB,GAAQ,SAAA9X,EAAO,CAAE,GAAG,EAAE,OAAOA,EAAQ,OAAO,EACnD,KAAK,CAAA6R,MAASY,EAAQZ,KAASA,EAAM,CAAC,CAAC,CAAC,EACxC,MAAMa,CAAM;AAAA,EAC7B,CAAS,GAEC8oB,IAAiB,CAAAz5B,MAAOA,EAAI,QAAQA,EAAI,IAExC05B,IAAa,CAACj6B,GAAOxB,OAEnB,OAAOwB,KAAU,YAAY,CAACg6B,EAAeh6B,CAAK,KAAK,CAACxB,MACxDA,IAAUwB,GACVA,IAAQ,SAIZ2I,EAAM,SAAS,eAAe,EAAE,GAAGnK,GAAS,OAAAwB,EAAK,CAAE,GAG5C2I,EAAM,MAAM,mBAAmB3I,CAAK,MAAM,OAG/C+5B,IAAW,IAAI75B,MACjB,IAAI,QAAQ,CAAC+Q,GAASC,MAAW;AAC7B,UAAMgpB,IAAU,CAAA,GACV17B,IAAU,CAAA;AAGhB,QAAIsN,GAAQ5L,EAAK,CAAC,CAAC;AACf,MAAAg6B,EAAQ,KAAK,MAAMA,GAASh6B,EAAK,CAAC,CAAC,GACnC,OAAO,OAAO1B,GAAS0B,EAAK,CAAC,KAAK,CAAA,CAAE;AAAA,SACjC;AAEH,YAAMi6B,IAAej6B,EAAKA,EAAK,SAAS,CAAC;AACzC,MAAI,OAAOi6B,KAAiB,YAAY,EAAEA,aAAwB,SAC9D,OAAO,OAAO37B,GAAS0B,EAAK,IAAK,CAAA,GAIrCg6B,EAAQ,KAAK,GAAGh6B,CAAI;AAAA,IACvB;AAED,IAAAyI,EAAM,SAAS,aAAa;AAAA,MACxB,OAAOuxB;AAAA,MACP,OAAO17B,EAAQ;AAAA,MACf,mBAAmB4Q,GAAkB;AAAA,MACrC,SAAS6B;AAAA,MACT,SAASC;AAAA,IACzB,CAAa;AAAA,EACb,CAAS,GAEC8e,IAAW,MAAMrnB,EAAM,MAAM,kBAAkB,GAE/CyxB,IAAc,CAAAp6B,MAChB,IAAI,QAAQ,CAACiR,GAASC,MAAW;AAC7B,IAAAvI,EAAM,SAAS,2BAA2B;AAAA,MACtC,OAAA3I;AAAA,MACA,SAAS,CAAAmQ,MAAQ;AACb,QAAAc,EAAQd,CAAI;AAAA,MACf;AAAA,MACD,SAAS,CAAAoB,MAAS;AACd,QAAAL,EAAOK,CAAK;AAAA,MACf;AAAA,IACjB,CAAa;AAAA,EACb,CAAS,GAEC8oB,IAAe,IAAIn6B,MAAS;AAC9B,UAAMf,IAAU,MAAM,QAAQe,EAAK,CAAC,CAAC,IAAIA,EAAK,CAAC,IAAIA,GAC7CmQ,IAAQlR,EAAQ,SAASA,IAAU6wB,EAAQ;AACjD,WAAO,QAAQ,IAAI3f,EAAM,IAAIwpB,CAAW,CAAC;AAAA,EACjD,GAEUS,KAAe,IAAIp6B,MAAS;AAC9B,UAAMf,IAAU,MAAM,QAAQe,EAAK,CAAC,CAAC,IAAIA,EAAK,CAAC,IAAIA;AACnD,QAAI,CAACf,EAAQ,QAAQ;AACjB,YAAMkf,IAAQ2R,EAAQ,EAAG;AAAA,QACrB,CAAA7f,MACI,EAAEA,EAAK,WAAWG,EAAW,QAAQH,EAAK,WAAWI,GAAW,UAChEJ,EAAK,WAAWG,EAAW,cAC3BH,EAAK,WAAWG,EAAW,uBAC3BH,EAAK,WAAWG,EAAW;AAAA,MAC/C;AACY,aAAO,QAAQ,IAAI+N,EAAM,IAAI+b,CAAW,CAAC;AAAA,IAC5C;AACD,WAAO,QAAQ,IAAIj7B,EAAQ,IAAIi7B,CAAW,CAAC;AAAA,EACnD,GAEUG,IAAc,IAAIr6B,MAAS;AAC7B,UAAMf,IAAU,MAAM,QAAQe,EAAK,CAAC,CAAC,IAAIA,EAAK,CAAC,IAAIA;AAEnD,QAAI1B;AACJ,IAAI,OAAOW,EAAQA,EAAQ,SAAS,CAAC,KAAM,WACvCX,IAAUW,EAAQ,QACX,MAAM,QAAQe,EAAK,CAAC,CAAC,MAC5B1B,IAAU0B,EAAK,CAAC;AAGpB,UAAMme,IAAQ2R;AAEd,WAAK7wB,EAAQ,SAGSA,EACjB,IAAI,CAAAa,MAAUiD,GAASjD,CAAK,IAAKqe,EAAMre,CAAK,IAAIqe,EAAMre,CAAK,EAAE,KAAK,OAAQA,CAAM,EAChF,OAAO,CAAAA,MAASA,CAAK,EAEL,IAAI,CAAAw6B,MAAKP,EAAWO,GAAGh8B,CAAO,CAAC,IAPxB,QAAQ,IAAI6f,EAAM,IAAI,CAAA1J,MAAQslB,EAAWtlB,GAAMnW,CAAO,CAAC,CAAC;AAAA,EAQ5F,GAEUm7B,IAAU;AAAA;AAAA,IAEZ,GAAGjqB,GAAI;AAAA;AAAA,IAGP,GAAG2pB;AAAA;AAAA,IAGH,GAAGpqB,GAAgBtG,GAAOiJ,CAAc;AAAA;AAAA;AAAA;AAAA;AAAA,IAMxC,YAAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,SAAAgoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,UAAAC;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,SAAA5d;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,aAAAie;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,aAAAP;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,YAAAI;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU,CAACj6B,GAAO2B,MAAUgH,EAAM,SAAS,aAAa,EAAE,OAAA3I,GAAO,OAAA2B,GAAO;AAAA;AAAA;AAAA;AAAA,IAKxE,UAAAquB;AAAA;AAAA;AAAA;AAAA,IAKA,cAAAsK;AAAA;AAAA;AAAA;AAAA,IAKA,aAAAC;AAAA;AAAA;AAAA;AAAA,IAKA,cAAAF;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,CAAApc,MAAWtV,EAAM,SAAS,QAAQ,EAAE,SAAAsV,GAAS;AAAA;AAAA;AAAA;AAAA,IAKnD,QAAQ,MAAM;AAEV,UAAItf,IAAQmD,EAAK,QAAQ,cAAc,kBAAkB;AACzD,MAAInD,KACAA,EAAM,MAAK;AAAA,IAElB;AAAA;AAAA;AAAA;AAAA,IAKD,SAAS,MAAM;AAEX,MAAAg7B,EAAQ,KAAK,WAAW73B,EAAK,OAAO,GAIpC6G,EAAM,SAAS,WAAW,GAG1B7G,EAAK,SAAQ,GAGb,OAAO,oBAAoB,UAAUq3B,CAAa,GAGlD,SAAS,oBAAoB,oBAAoBN,CAAiB,GAGlElwB,EAAM,SAAS,aAAa;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA,IAKD,cAAc,CAAApH,MAAWmK,GAAa5J,EAAK,SAASP,CAAO;AAAA;AAAA;AAAA;AAAA,IAK3D,aAAa,CAAAA,MAAWsK,GAAY/J,EAAK,SAASP,CAAO;AAAA;AAAA;AAAA;AAAA,IAKzD,UAAU,CAAAA,MAAWA,EAAQ,YAAYO,EAAK,OAAO;AAAA;AAAA;AAAA;AAAA,IAKrD,gBAAgB,CAAAP,MAAW;AAEvB,MAAAmK,GAAa5J,EAAK,SAASP,CAAO,GAGlCA,EAAQ,WAAW,YAAYA,CAAO,GAGtCq3B,IAAkBr3B;AAAA,IACrB;AAAA;AAAA;AAAA;AAAA,IAKD,gBAAgB,MAAM;AAClB,MAAKq3B,MAKL/sB,GAAY+sB,GAAiB92B,EAAK,OAAO,GAGzCA,EAAK,QAAQ,WAAW,YAAYA,EAAK,OAAO,GAGhD82B,IAAkB;AAAA,IACrB;AAAA;AAAA;AAAA;AAAA;AAAA,IAMD,cAAc,CAAAr3B,MAAWO,EAAK,YAAYP,KAAWq3B,MAAoBr3B;AAAA;AAAA;AAAA;AAAA,IAKzE,SAAS;AAAA,MACL,KAAK,MAAMO,EAAK;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA,IAKD,QAAQ;AAAA,MACJ,KAAK,MAAM6G,EAAM,MAAM,YAAY;AAAA,IACtC;AAAA,EACT;AAGI,SAAAA,EAAM,SAAS,UAAU,GAGlB9H,GAAa84B,CAAO;AAC/B,GAEMc,KAAkB,CAACC,IAAgB,OAAO;AAE5C,QAAM9oB,IAAiB,CAAA;AACvB,SAAAlR,EAAMmR,GAAU,GAAI,CAACjR,GAAK/B,MAAU;AAChC,IAAA+S,EAAehR,CAAG,IAAI/B,EAAM,CAAC;AAAA,EACrC,CAAK,GAGW65B,GAAU;AAAA;AAAA,IAElB,GAAG9mB;AAAA;AAAA,IAGH,GAAG8oB;AAAA,EACX,CAAK;AAIL,GAEMC,KAAuB,CAAA3tB,MAAUA,EAAO,OAAO,CAAC,EAAE,YAAW,IAAKA,EAAO,MAAM,CAAC,GAEhF4tB,KAA8B,CAAAC,MAAiBxF,GAASwF,EAAc,QAAQ,UAAU,EAAE,CAAC,GAE3FC,KAAY,CAACC,GAAQC,MAAgB;AAEvC,EAAAt6B,EAAMs6B,GAAa,CAACC,GAAUC,MAAY;AACtC,IAAAx6B,EAAMq6B,GAAQ,CAACv6B,GAAU3B,MAAU;AAE/B,YAAMs8B,IAAiB,IAAI,OAAOF,CAAQ;AAc1C,UARI,CAHYE,EAAe,KAAK36B,CAAQ,MAQ5C,OAAOu6B,EAAOv6B,CAAQ,GAGlB06B,MAAY;AACZ;AAIJ,UAAI5uB,GAAS4uB,CAAO,GAAG;AACnB,QAAAH,EAAOG,CAAO,IAAIr8B;AAClB;AAAA,MACH;AAGD,YAAMwxB,IAAQ6K,EAAQ;AACtB,MAAIrtB,GAASqtB,CAAO,KAAK,CAACH,EAAO1K,CAAK,MAClC0K,EAAO1K,CAAK,IAAI,KAGpB0K,EAAO1K,CAAK,EAAEsK,GAAqBn6B,EAAS,QAAQ26B,GAAgB,EAAE,CAAC,CAAC,IAAIt8B;AAAA,IACxF,CAAS,GAGGq8B,EAAQ,WACRJ,GAAUC,EAAOG,EAAQ,KAAK,GAAGA,EAAQ,OAAO;AAAA,EAE5D,CAAK;AACL,GAEME,KAAwB,CAACr6B,GAAMs6B,IAAmB,OAAO;AAE3D,QAAM/5B,IAAa,CAAA;AACnB,EAAAZ,EAAMK,EAAK,YAAY,CAAAY,MAAS;AAC5B,IAAAL,EAAW,KAAKP,EAAK,WAAWY,CAAK,CAAC;AAAA,EAC9C,CAAK;AAED,QAAM25B,IAASh6B,EACV,OAAO,CAAAi6B,MAAaA,EAAU,IAAI,EAClC,OAAO,CAACh7B,GAAKg7B,MAAc;AACxB,UAAM18B,IAAQiC,GAAKC,GAAMw6B,EAAU,IAAI;AAEvC,WAAAh7B,EAAIq6B,GAA4BW,EAAU,IAAI,CAAC,IAC3C18B,MAAU08B,EAAU,OAAO,KAAO18B,GAC/B0B;AAAA,EACV,GAAE,CAAE,CAAA;AAGT,SAAAu6B,GAAUQ,GAAQD,CAAgB,GAE3BC;AACX,GAEME,KAAqB,CAACj6B,GAAS/C,IAAU,OAAO;AAElD,QAAM68B,IAAmB;AAAA;AAAA,IAErB,WAAW;AAAA,IACX,cAAc;AAAA,IACd,aAAa;AAAA,IACb,qBAAqB;AAAA;AAAA,IAGrB,WAAW;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,QACL,YAAY;AAAA,UACR,OAAO;AAAA,QACV;AAAA,QACD,WAAW;AAAA,UACP,OAAO;AAAA,QACV;AAAA,QACD,UAAU;AAAA,UACN,OAAO;AAAA,QACV;AAAA,QACD,YAAY;AAAA,UACR,OAAO;AAAA,QACV;AAAA,QACD,SAAS;AAAA,UACL,OAAO;AAAA,QACV;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,IAGD,UAAU;AAAA,IACV,WAAW;AAAA,EACnB;AAGI,EAAA7pB,GAAa,+BAA+B6pB,CAAgB;AAG5D,QAAMI,IAAgB;AAAA,IAClB,GAAGj9B;AAAA,EACX,GAEUk9B,IAAmBN;AAAA,IACrB75B,EAAQ,aAAa,aAAaA,EAAQ,cAAc,kBAAkB,IAAIA;AAAA,IAC9E85B;AAAA,EACR;AAGI,SAAO,KAAKK,CAAgB,EAAE,QAAQ,CAAA96B,MAAO;AACzC,IAAIiN,GAAS6tB,EAAiB96B,CAAG,CAAC,KACzBiN,GAAS4tB,EAAc76B,CAAG,CAAC,MAC5B66B,EAAc76B,CAAG,IAAI,KAEzB,OAAO,OAAO66B,EAAc76B,CAAG,GAAG86B,EAAiB96B,CAAG,CAAC,KAEvD66B,EAAc76B,CAAG,IAAI86B,EAAiB96B,CAAG;AAAA,EAErD,CAAK,GAID66B,EAAc,SAASj9B,EAAQ,SAAS,CAAE,GAAE;AAAA,IACxC,MAAM,KAAK+C,EAAQ,iBAAiB,wBAAwB,CAAC,EAAE,IAAI,CAAA5C,OAAU;AAAA,MACzE,QAAQA,EAAM;AAAA,MACd,SAAS;AAAA,QACL,MAAMA,EAAM,QAAQ;AAAA,MACvB;AAAA,IACb,EAAU;AAAA,EACV;AAGI,QAAMg9B,IAAMlB,GAAgBgB,CAAa;AAGzC,SAAIl6B,EAAQ,SACR,MAAM,KAAKA,EAAQ,KAAK,EAAE,QAAQ,CAAAoT,MAAQ;AACtC,IAAAgnB,EAAI,QAAQhnB,CAAI;AAAA,EAC5B,CAAS,GAILgnB,EAAI,eAAep6B,CAAO,GAGnBo6B;AACX,GAGMC,KAAc,IAAI17B,MACpBlB,GAAOkB,EAAK,CAAC,CAAC,IAAIs7B,GAAmB,GAAGt7B,CAAI,IAAIu6B,GAAgB,GAAGv6B,CAAI,GAErE27B,KAAkB,CAAC,QAAQ,SAAS,QAAQ,GAE5CC,KAAe,CAAAH,MAAO;AACxB,QAAMv7B,IAAM,CAAA;AAEZ,SAAA0P,GAA6B6rB,GAAKv7B,GAAKy7B,EAAe,GAE/Cz7B;AACX,GAOM27B,KAAkB,CAAC/uB,GAAQgvB,MAC7BhvB,EAAO,QAAQ,sBAAsB,CAACivB,GAAO5L,MAAU2L,EAAa3L,CAAK,CAAC,GAExE6L,KAAe,CAAAh+B,MAAM;AACvB,QAAMi+B,IAAa,IAAI,KAAK,CAAC,KAAKj+B,EAAG,SAAQ,GAAI,KAAK,GAAG;AAAA,IACrD,MAAM;AAAA,EACd,CAAK,GACKk+B,IAAY,IAAI,gBAAgBD,CAAU,GAC1CE,IAAS,IAAI,OAAOD,CAAS;AAEnC,SAAO;AAAA,IACH,UAAU,CAACzH,GAASh0B,MAAO;AAAA,IAAE;AAAA,IAC7B,MAAM,CAACg0B,GAASh0B,GAAI27B,MAAiB;AACjC,YAAMtxB,IAAKqE;AAEX,MAAAgtB,EAAO,YAAY,CAAAp+B,MAAK;AACpB,QAAIA,EAAE,KAAK,OAAO+M,KACdrK,EAAG1C,EAAE,KAAK,OAAO;AAAA,MAErC,GAEYo+B,EAAO;AAAA,QACH;AAAA,UACI,IAAArxB;AAAA,UACA,SAAA2pB;AAAA,QACH;AAAA,QACD2H;AAAA,MAChB;AAAA,IACS;AAAA,IACD,WAAW,MAAM;AACb,MAAAD,EAAO,UAAS,GAChB,IAAI,gBAAgBD,CAAS;AAAA,IAChC;AAAA,EACT;AACA,GAEMG,KAAY,CAAAh+B,MACd,IAAI,QAAQ,CAAC0S,GAASC,MAAW;AAC7B,QAAMsrB,IAAM,IAAI;AAChB,EAAAA,EAAI,SAAS,MAAM;AACf,IAAAvrB,EAAQurB,CAAG;AAAA,EACvB,GACQA,EAAI,UAAU,CAAAv+B,MAAK;AACf,IAAAiT,EAAOjT,CAAC;AAAA,EACpB,GACQu+B,EAAI,MAAMj+B;AAClB,CAAK,GAECk+B,KAAa,CAAC9nB,GAAM/V,MAAS;AAC/B,QAAM89B,IAAc/nB,EAAK,MAAM,GAAGA,EAAK,MAAMA,EAAK,IAAI;AACtD,SAAA+nB,EAAY,mBAAmB/nB,EAAK,kBACpC+nB,EAAY,OAAO99B,GACZ89B;AACX,GAEMC,KAAW,CAAAhoB,MAAQ8nB,GAAW9nB,GAAMA,EAAK,IAAI,GAG7CioB,KAAoB,CAAA,GAGpBC,KAAkB,CAAAC,MAAU;AAE9B,MAAIF,GAAkB,SAASE,CAAM;AACjC;AAIJ,EAAAF,GAAkB,KAAKE,CAAM;AAG7B,QAAMC,IAAgBD,EAAO;AAAA,IACzB,WAAArrB;AAAA,IACA,OAAO;AAAA,MACH,MAAAZ;AAAA,MACA,OAAAnQ;AAAA,MACA,UAAA4L;AAAA,MACA,QAAAkP;AAAA,MACA,mBAAAiH;AAAA,MACA,iBAAAsZ;AAAA,MACA,0BAAA/nB;AAAA,MACA,6BAAAsH;AAAA,MACA,qBAAAqU;AAAA,MACA,iBAAApb;AAAA,MACA,oBAAAR;AAAA,MACA,aAAAzI;AAAA,MACA,cAAA4wB;AAAA,MACA,YAAAl0B;AAAA,MACA,eAAAkI;AAAA,MACA,WAAAqsB;AAAA,MACA,UAAAI;AAAA,MACA,YAAAF;AAAA,MACA,YAAA5nB;AAAA,MACA,kBAAA9D;AAAA,MACA,MAAA6P;AAAA,MACA,iCAAA3O;AAAA,IACH;AAAA,IACD,OAAO;AAAA,MACH,kBAAAuQ;AAAA,IACH;AAAA,EACT,CAAK;AAGD,EAAA9Q,GAAqBqrB,EAAc,OAAO;AAC9C,GAGMC,KAAc,MAAM,OAAO,UAAU,SAAS,KAAK,OAAO,SAAS,MAAM,sBACzEC,KAAc,MAAM,aAAa,QACjCC,KAAe,MAAM,WAAW,KAAK,WACrCC,KAAqB,MAAM,SAAS,UAAU,qBAAqB,OAAO,KAC1EC,KAAgB,MAAM,qBAAqB,UAC3CC,KAAY,MAAM,iBAAiB,QACnCC,KAAiB,MAAM,eAAe,OAAO,OAAO,CAAE,IACtDC,KAAS,MAAM,eAAe,KAAK,OAAO,UAAU,SAAS,GAE7DC,MAAa,MAAM;AAErB,QAAMC;AAAA;AAAA,IAEFx7B,GAAW;AAAA,IAEX,CAAC+6B,GAAa;AAAA,IAEdI,GAAe,KACfH,GAAa,KACbC,GAAc,KACdC,GAAoB,KACpBE,GAAW;AAAA,KAEVC,GAAgB,KAAIC,GAAM;AAAA;AAE/B,SAAO,MAAME;AACjB,MAKM1+B,KAAQ;AAAA;AAAA,EAEV,MAAM,CAAE;AACZ,GAGMH,KAAO,YAKPV,KAAK,MAAM;AAAA;AACjB,IAAIw/B,KAAW,CAAA,GAGXC,KAAc,CAAA,GACdC,KAAW1/B,IACXkK,KAAUlK,IACV2/B,KAAQ3/B,IACR4/B,KAAO5/B,IACP6/B,KAAiB7/B,IACjB8/B,KAAe9/B,IACf+/B,KAAe//B;AAGnB,IAAIs/B,MAAa;AAEb,EAAA7yB;AAAA,IACI,MAAM;AACF,MAAA5L,GAAM,KAAK,QAAQ,CAAA48B,MAAOA,EAAI,MAAK,CAAE;AAAA,IACxC;AAAA,IACD,CAAA93B,MAAM;AACF,MAAA9E,GAAM,KAAK,QAAQ,CAAA48B,MAAOA,EAAI,OAAO93B,CAAE,CAAC;AAAA,IAC3C;AAAA,EACT;AAGI,QAAMhE,IAAW,MAAM;AAEnB,aAAS;AAAA,MACL,IAAI,YAAY,mBAAmB;AAAA,QAC/B,QAAQ;AAAA,UACJ,WAAA29B;AAAA,UACA,QAAQI;AAAA,UACR,SAAAx1B;AAAA,UACA,OAAAy1B;AAAA,UACA,MAAAC;AAAA,UACA,gBAAAC;AAAA,UACA,YAAYE;AAAA,QACf;AAAA,MACjB,CAAa;AAAA,IACb,GAGQ,SAAS,oBAAoB,oBAAoBp+B,CAAQ;AAAA,EACjE;AAEI,EAAI,SAAS,eAAe,YAExB,WAAW,MAAMA,KAAY,CAAC,IAE9B,SAAS,iBAAiB,oBAAoBA,CAAQ;AAI1D,QAAMq+B,IAAoB,MACtBx9B,EAAMmR,GAAU,GAAI,CAACjR,GAAK/B,MAAU;AAChC,IAAA8+B,GAAY/8B,CAAG,IAAI/B,EAAM,CAAC;AAAA,EACtC,CAAS;AAEL,EAAA6+B,KAAW,EAAE,GAAGtrB,MAIhBurB,KAAc,CAAA,GACdO,KAGAN,KAAW,IAAI19B,MAAS;AACpB,UAAMy7B,IAAMC,GAAY,GAAG17B,CAAI;AAC/B,WAAAy7B,EAAI,GAAG,WAAWvzB,EAAO,GACzBrJ,GAAM,KAAK,KAAK48B,CAAG,GACZG,GAAaH,CAAG;AAAA,EAC/B,GAGIvzB,KAAU,CAAA+1B,MAAQ;AAEd,UAAMC,IAAgBr/B,GAAM,KAAK,UAAU,CAAA48B,MAAOA,EAAI,aAAawC,CAAI,CAAC;AACxE,WAAIC,KAAiB,KAELr/B,GAAM,KAAK,OAAOq/B,GAAe,CAAC,EAAE,CAAC,EAG7C,eAAc,GAEX,MAGJ;AAAA,EACf,GAGIP,KAAQ,CAAAQ,MAEiB,MAAM,KAAKA,EAAQ,iBAAiB,IAAIz/B,EAAI,EAAE,CAAC,EAGtC;AAAA,IAC1B,CAAA0/B,MAAW,CAACv/B,GAAM,KAAK,KAAK,CAAA48B,MAAOA,EAAI,aAAa2C,CAAO,CAAC;AAAA,EACxE,EAGwB,IAAI,CAAAH,MAAQP,GAASO,CAAI,CAAC,GAI9CL,KAAO,CAAAK,MAAQ;AACX,UAAMxC,IAAM58B,GAAM,KAAK,KAAK,CAAA48B,MAAOA,EAAI,aAAawC,CAAI,CAAC;AACzD,WAAKxC,IAGEG,GAAaH,CAAG,IAFZ;AAAA,EAGnB,GAGIoC,KAAiB,IAAIQ,MAAY;AAE7B,IAAAA,EAAQ,QAAQ1B,EAAe,GAG/BqB;EACR,GAEIF,KAAe,MAAM;AACjB,UAAMjsB,IAAO,CAAA;AACb,WAAArR,EAAMmR,GAAU,GAAI,CAACjR,GAAK/B,MAAU;AAChC,MAAAkT,EAAKnR,CAAG,IAAI/B,EAAM,CAAC;AAAA,IAC/B,CAAS,GACMkT;AAAA,EACf,GAEIksB,KAAe,CAAAlsB,OACPlE,GAASkE,CAAI,MAEbhT,GAAM,KAAK,QAAQ,CAAA48B,MAAO;AACtB,IAAAA,EAAI,WAAW5pB,CAAI;AAAA,EACnC,CAAa,GAGDD,GAAWC,CAAI,IAIZisB,GAAY;AAE3B;AC9+SA;AAAA;AAAA;AAAA;AAAA;AAQA,MAAMlB,KAAS,CAAC,EAAE,WAAArrB,GAAW,OAAAT,QAAY;AAErC,QAAM;AAAA,IACF,MAAAH;AAAA,IACA,UAAAvE;AAAA,IACA,iBAAAyvB;AAAA,IACA,qBAAApM;AAAA,IACA,0BAAA3b;AAAA,IACA,oBAAAD;AAAA,EACH,IAAG/C,GAEEwtB,IAA0B,CAACzpB,GAAU0pB,MAAa;AACpD,UAAMC,KAAiB,SAAS,KAAK3pB,CAAQ,KAAK,CAAA,GAAI,OAChD4pB,IAAgBF,EAAS,MAAM,GAAG,EAAE;AAC1C,WAAOC,MAAkBC;AAAA,EACjC,GAEUC,IAAkB,CAACC,GAAeC,MACpCD,EAAc,KAAK,CAAAE,MAEX,MAAM,KAAKA,CAAY,IAChBP,EAAwBM,GAAeC,CAAY,IAIvDA,MAAiBD,CAC3B,GAECE,IAAc,CAAA7uB,MAAQ;AAExB,QAAIxQ,IAAO;AACX,QAAI2M,EAAS6D,CAAI,GAAG;AAChB,YAAMsE,IAAWV,EAAmB5D,CAAI,GAClCuE,IAAYV,EAAyBS,CAAQ;AACnD,MAAIC,MACA/U,IAAOgwB,EAAoBjb,CAAS;AAAA,IAEpD;AACY,MAAA/U,IAAOwQ,EAAK;AAGhB,WAAOxQ;AAAA,EACf,GAEUs/B,IAAe,CAAC9uB,GAAM+uB,GAAmBC,MAAiB;AAE5D,QAAID,EAAkB,WAAW;AAC7B,aAAO;AAIX,UAAMv/B,IAAOq/B,EAAY7uB,CAAI;AAG7B,WAAKgvB,IAKE,IAAI,QAAQ,CAACluB,GAASC,MAAW;AACpC,MAAAiuB,EAAahvB,GAAMxQ,CAAI,EAClB,KAAK,CAAAy/B,MAAgB;AAClB,QAAIR,EAAgBM,GAAmBE,CAAY,IAC/CnuB,MAEAC;MAExB,CAAiB,EACA,MAAMA,CAAM;AAAA,IAC7B,CAAS,IAdU0tB,EAAgBM,GAAmBv/B,CAAI;AAAA,EAe1D,GAEU0/B,IAAmB,CAAAtZ,MAAO,CAAAuZ,MAC5BvZ,EAAIuZ,CAAgB,MAAM,OAAO,KAAQvZ,EAAIuZ,CAAgB,KAAKA;AAGtE,SAAA7tB;AAAA,IAAU;AAAA,IAA+B,CAAAsU,MACrC,OAAO,OAAOA,GAAK;AAAA,MACf,QAAQ;AAAA,IACpB,CAAS;AAAA,EACT,GAGItU,EAAU,qBAAqB,CAACkD,GAAM,EAAE,OAAA3U,EAAK,MAEpCA,EAAM,gCAAgC,IAKpCi/B,EAAatqB,GAAM3U,EAAM,yBAAyB,CAAC,IAJ/C,EAKd,GAKDyR;AAAA,IACI;AAAA,IACA,CAACkD,GAAM,EAAE,OAAA3U,EAAO,MACZ,IAAI,QAAQ,CAACiR,GAASC,MAAW;AAC7B,UAAI,CAAClR,EAAM,gCAAgC,GAAG;AAC1C,QAAAiR,EAAQ0D,CAAI;AACZ;AAAA,MACH;AAED,YAAMuqB,IAAoBl/B,EAAM,yBAAyB,GAGnDm/B,IAAen/B,EAAM,oCAAoC,GAGzDu/B,IAAmBN,EAAatqB,GAAMuqB,GAAmBC,CAAY,GAErEK,IAAkB,MAAM;AAC1B,cAAMC,IAA0BP,EAC3B;AAAA,UACGG;AAAA,YACIr/B,EAAM,iDAAiD;AAAA,UAC1D;AAAA,QACJ,EACA,OAAO,CAAA4d,MAASA,MAAU,EAAK,GAE9B8hB,IAAgCD,EAAwB;AAAA,UAC1D,CAACtvB,GAAMxO,MAAU89B,EAAwB,QAAQtvB,CAAI,MAAMxO;AAAA,QACnF;AAEoB,QAAAuP,EAAO;AAAA,UACH,QAAQ;AAAA,YACJ,MAAMlR,EAAM,iCAAiC;AAAA,YAC7C,KAAK+7B;AAAA,cACD/7B,EAAM,6CAA6C;AAAA,cACnD;AAAA,gBACI,UAAU0/B,EAA8B,KAAK,IAAI;AAAA,gBACjD,gBAAgBA,EACX,MAAM,GAAG,EAAE,EACX,KAAK,IAAI;AAAA,gBACd,UACIA,EACIA,EAA8B,SAAS,CAC1C;AAAA,cACR;AAAA,YACJ;AAAA,UACJ;AAAA,QACzB,CAAqB;AAAA,MACrB;AAGgB,UAAI,OAAOH,KAAqB;AAC5B,eAAKA,IAGEtuB,EAAQ0D,CAAI,IAFR6qB,EAAe;AAM9B,MAAAD,EACK,KAAK,MAAM;AACR,QAAAtuB,EAAQ0D,CAAI;AAAA,MACpC,CAAqB,EACA,MAAM6qB,CAAe;AAAA,IAC1C,CAAa;AAAA,EACb,GAGW;AAAA;AAAA,IAEH,SAAS;AAAA;AAAA,MAEL,yBAAyB,CAAC,IAAM3uB,EAAK,OAAO;AAAA;AAAA,MAG5C,mBAAmB,CAAC,CAAA,GAAIA,EAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOlC,yBAAyB,CAAC,2BAA2BA,EAAK,MAAM;AAAA;AAAA,MAGhE,oCAAoC;AAAA,QAChC;AAAA,QACAA,EAAK;AAAA,MACR;AAAA;AAAA,MAGD,uCAAuC,CAAC,CAAA,GAAIA,EAAK,MAAM;AAAA;AAAA,MAGvD,4BAA4B,CAAC,MAAMA,EAAK,QAAQ;AAAA,IACnD;AAAA,EACT;AACA,GAGM5O,KAAY,OAAO,SAAW,OAAe,OAAO,OAAO,WAAa;AAC1EA,MACA,SAAS,cAAc,IAAI,YAAY,yBAAyB,EAAE,QAAQ66B,GAAQ,CAAA,CAAC;AC9MvF;AAAA;AAAA;AAAA;AAAA;AAQA,MAAMA,KAAS,CAAC,EAAE,WAAArrB,GAAW,OAAAT,QAAY;AAErC,QAAM,EAAE,MAAAH,GAAM,iBAAAkrB,GAAiB,mBAAAtZ,EAAiB,IAAKzR;AAGrD,SAAAS,EAAU,qBAAqB,CAACkD,GAAM,EAAE,OAAA3U,EAAK,MAAO;AAChD,QAAI,CAACA,EAAM,gCAAgC;AACvC,aAAO;AAGX,UAAM2/B,IAAU3/B,EAAM,mBAAmB;AACzC,QAAI2/B,MAAY,QAAQhrB,EAAK,OAAOgrB;AAChC,aAAO;AAGX,UAAMC,IAAU5/B,EAAM,mBAAmB;AACzC,WAAI,EAAA4/B,MAAY,QAAQjrB,EAAK,OAAOirB;AAAA,EAK5C,CAAK,GAKDnuB;AAAA,IACI;AAAA,IACA,CAACkD,GAAM,EAAE,OAAA3U,EAAO,MACZ,IAAI,QAAQ,CAACiR,GAASC,MAAW;AAE7B,UAAI,CAAClR,EAAM,gCAAgC;AACvC,eAAOiR,EAAQ0D,CAAI;AAIvB,YAAMkrB,IAAa7/B,EAAM,+BAA+B;AACxD,UAAI6/B,KAAc,CAACA,EAAWlrB,CAAI;AAC9B,eAAO1D,EAAQ0D,CAAI;AAIvB,YAAMgrB,IAAU3/B,EAAM,mBAAmB;AACzC,UAAI2/B,MAAY,QAAQhrB,EAAK,OAAOgrB,GAAS;AACzC,QAAAzuB,EAAO;AAAA,UACH,QAAQ;AAAA,YACJ,MAAMlR,EAAM,kCAAkC;AAAA,YAC9C,KAAK+7B,EAAgB/7B,EAAM,yBAAyB,GAAG;AAAA,cACnD,UAAUyiB;AAAA,gBACNkd;AAAA,gBACA;AAAA,gBACA3/B,EAAM,oBAAoB;AAAA,gBAC1BA,EAAM,wBAAwBA,CAAK;AAAA,cACtC;AAAA,YACjC,CAA6B;AAAA,UACJ;AAAA,QACzB,CAAqB;AACD;AAAA,MACH;AAGD,YAAM4/B,IAAU5/B,EAAM,mBAAmB;AACzC,UAAI4/B,MAAY,QAAQjrB,EAAK,OAAOirB,GAAS;AACzC,QAAA1uB,EAAO;AAAA,UACH,QAAQ;AAAA,YACJ,MAAMlR,EAAM,kCAAkC;AAAA,YAC9C,KAAK+7B,EAAgB/7B,EAAM,yBAAyB,GAAG;AAAA,cACnD,UAAUyiB;AAAA,gBACNmd;AAAA,gBACA;AAAA,gBACA5/B,EAAM,oBAAoB;AAAA,gBAC1BA,EAAM,wBAAwBA,CAAK;AAAA,cACtC;AAAA,YACjC,CAA6B;AAAA,UACJ;AAAA,QACzB,CAAqB;AACD;AAAA,MACH;AAGD,YAAM8/B,IAAe9/B,EAAM,yBAAyB;AACpD,UAAI8/B,MAAiB,QAEQ9/B,EAAM,kBAAkB,EAAE,OAAO,CAAC+W,GAAO5G,MACvD4G,IAAQ5G,EAAK,UACrB,CAAC,IAGmB2vB,GAAc;AACjC,QAAA5uB,EAAO;AAAA,UACH,QAAQ;AAAA,YACJ,MAAMlR,EAAM,wCAAwC;AAAA,YACpD,KAAK+7B,EAAgB/7B,EAAM,+BAA+B,GAAG;AAAA,cACzD,UAAUyiB;AAAA,gBACNqd;AAAA,gBACA;AAAA,gBACA9/B,EAAM,oBAAoB;AAAA,gBAC1BA,EAAM,wBAAwBA,CAAK;AAAA,cACtC;AAAA,YACrC,CAAiC;AAAA,UACJ;AAAA,QAC7B,CAAyB;AACD;AAAA,MACH;AAIL,MAAAiR,EAAQ0D,CAAI;AAAA,IAC5B,CAAa;AAAA,EACb,GAEW;AAAA,IACH,SAAS;AAAA;AAAA,MAEL,yBAAyB,CAAC,IAAM9D,EAAK,OAAO;AAAA;AAAA,MAG5C,aAAa,CAAC,MAAMA,EAAK,GAAG;AAAA;AAAA,MAG5B,aAAa,CAAC,MAAMA,EAAK,GAAG;AAAA;AAAA,MAG5B,kBAAkB,CAAC,MAAMA,EAAK,GAAG;AAAA;AAAA,MAGjC,wBAAwB,CAAC,MAAMA,EAAK,QAAQ;AAAA;AAAA,MAG5C,0BAA0B,CAAC,qBAAqBA,EAAK,MAAM;AAAA,MAC3D,kBAAkB,CAAC,mCAAmCA,EAAK,MAAM;AAAA,MAEjE,0BAA0B,CAAC,qBAAqBA,EAAK,MAAM;AAAA,MAC3D,kBAAkB,CAAC,mCAAmCA,EAAK,MAAM;AAAA,MAEjE,+BAA+B,CAAC,+BAA+BA,EAAK,MAAM;AAAA,MAC1E,uBAAuB,CAAC,yCAAyCA,EAAK,MAAM;AAAA,IAC/E;AAAA,EACT;AACA,GAGM5O,KAAY,OAAO,SAAW,OAAe,OAAO,OAAO,WAAa;AAC1EA,MACA,SAAS,cAAc,IAAI,YAAY,yBAAyB,EAAE,QAAQ66B,GAAQ,CAAA,CAAC;AChJhF,MAAMiD,GAAW;AAAA,EACvB,YAAY/hC,GAAI;AACf,QAAIA,EAAG,QAAQ;AACd,aAAO+hC,GAAW,KAAK/hC,EAAG,QAAQ,aAAa;AAGhD,SAAK,MAAM,KAAK,UAChB+hC,GAAW,KAAK,KAAK,GAAG,IAAI,MAC5B/hC,EAAG,QAAQ,gBAAgB,KAAK,KAEhC,KAAK,SAASA,EAAG,iBAAiB,oBAAoB,GAEtD,KAAK,YAAY,IACjB,KAAK,UAAU;AAAA,MACd,eAAe;AAAA,IAClB,GAEE,SAAS,iBAAiB,mBAAmB,MAAM,KAAK,OAAQ,CAAA;AAChE,UAAMgiC,IAAY,IAAIjiC,GAAUC,EAAG,QAAQ,gBAAgB,CAAC;AAC5D,IAAAgiC,EAAU,iBAAiB,MAAM,KAAK,aAAY,GAClDA,EAAU,YAAY,CAAC1hC,MAAY,KAAK,UAAUA,CAAO,GACzD0hC,EAAU,UAAU,OAAOrhC,GAAOE,MAAU,MAAM,KAAK,aAAaF,GAAOE,CAAK;AAAA,EAChF;AAAA,EAED,SAAS;AACRohC,IAAAA,GAAwBC,EAA8B,GACtDD,GAAwBE,EAA8B;AAEtD,UAAM3hC,IAAU;AAAA,MACf,QAAQ;AAAA,QACP,KAAK;AAAA,QACL,SAAS;AAAA,UACR,KAAK;AAAA,UACL,SAAS,KAAK;AAAA,QACd;AAAA,QACD,QAAQ;AAAA,UACP,KAAK;AAAA,UACL,SAAS,KAAK;AAAA,QACd;AAAA,QACD,SAAS;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,MACP;AAAA,MACD,SAAS;AAAA,MACT,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,MAKX,mBAAmB;AAAA,MACnB,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,kBAAkB;AAAA,MAClB,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,6BAA6B;AAAA,MAC7B,4BAA4B;AAAA,MAC5B,0BAA0B;AAAA,MAC1B,gCAAgC;AAAA,MAChC,sBAAsB;AAAA,MACtB,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,uBAAuB;AAAA,MACvB,0BAA0B;AAAA,MAC1B,0BAA0B;AAAA,MAC1B,gCAAgC;AAAA,MAChC,+BAA+B;AAAA,MAC/B,gCAAgC;AAAA,MAChC,wBAAwB;AAAA,MACxB,0BAA0B;AAAA,MAC1B,kBAAkB;AAAA,MAClB,+BAA+B;AAAA,MAC/B,uBAAuB;AAAA,MACvB,yBAAyB;AAAA,MACzB,oCAAoC;AAAA,MACpC,uCAAuC;AAAA,QACtC,WAAW;AAAA,QACX,aAAa;AAAA,QACb,aAAa;AAAA,QACb,cAAc;AAAA,QACd,mBAAmB;AAAA,QACnB,2EAA2E;AAAA,MAC3E;AAAA,IACJ;AAEE,eAAWG,KAAS,KAAK;AACxB,WAAK,UAAUA,EAAM,IAAI,IAAIyhC,GAAgBzhC,GAAO;AAAA,QACnD,GAAGH;AAAA,QACH,UAAUG,EAAM,QAAQ,YAAY;AAAA,QACpC,aAAaA,EAAM,QAAQ,eAAe;AAAA,QAC1C,kBAAkBA,EAAM,QAAQ,oBAAoB;AAAA,MACxD,CAAI;AAAA,EAEF;AAAA,EAED,eAAe;AACd,eAAW,CAAC0hC,GAAGC,CAAQ,KAAK,OAAO,QAAQ,KAAK,SAAS;AACxD,UAAI,EAAEA,EAAS,UAAUC,GAAgB,SAASD,EAAS,UAAUC,GAAgB;AACpF,qBAAM,8CAA8C,GAC7C;AAIT,WAAO;AAAA,EACP;AAAA,EAED,UAAUjiC,GAAS;AAClB,eAAWK,KAAS,KAAK;AACxB,MAAIA,EAAM,aACTL,EAAQK,EAAM,IAAI,IAAI;AAIxB,WAAOL;AAAA,EACP;AAAA,EAED,MAAM,aAAaK,GAAOE,GAAO;AAChC,QAAI,CAACF,EAAM,QAAQ,iBAAiB;AACnC,aAAOE;AAGR,QAAI,CAACF,EAAM,QAAQ,iBAAiB;AACnC,aAAO;AAGR,UAAM2hC,IAAW,KAAK,UAAU3hC,EAAM,IAAI,GACpC6hC,IAAaF,EAAS,WAAW,KAAK,CAAC,MAAM,EAAE,aAAazhC,CAAK,GAEjEwT,IAAM,MAAM,MAAM,GAAGiuB,EAAS,OAAO,GAAG,UAAU;AAAA,MACvD,QAAQ;AAAA,MACR,MAAMzhC;AAAA,MACN,SAAS,KAAK;AAAA,IACjB,CAAG;AAED,QAAI,CAACwT,EAAI;AACR,YAAM,IAAI,MAAM,4BAA4BA,CAAG;AAGhD,UAAMouB,IAAU,MAAMpuB,EAAI,QACpBgR,IAAWmd,EAAW,UACtBld,IAAWkd,EAAW;AAE5B,WAAO;AAAA,MACN,KAAKC;AAAA,MACL,MAAMpd;AAAA,MACN,MAAMC;AAAA,IACT;AAAA,EACE;AACF;AAEAyc,GAAW,OAAO,CAAA;AAElB,SAAS,iBAAiB,oBAAoB,MAAM;AACnD,QAAM,KAAK,SAAS,iBAAiB,iBAAiB,CAAC,EAAE,QAAQ,CAAC/hC,MAAO,IAAI+hC,GAAW/hC,CAAE,CAAC;AAC5F,CAAC;ACnKD,SAAS,iBAAiB,oBAAoB,MAAM;AACnD,MAAI,OAAO,SAAS,QAAQ;AAC3B,UAAMsc,IAAS,IAAI,gBAAgB,OAAO,SAAS,MAAM,GAEnDomB,IAAQpmB,EAAO,IAAI,OAAO;AAChC,IAAIomB,KACH,OAAO,aAAa,QAAQ,SAASA,CAAK;AAG3C,UAAMC,IAASrmB,EAAO,IAAI,QAAQ;AAClC,QAAIqmB,GAAQ;AACX,YAAMC,IAAM,QAAQ,KAAK,IAAG,CAAE,IAAID,CAAM;AACxC,aAAO,aAAa,QAAQ,OAAOC,CAAG;AAAA,IACtC;AAED,UAAMC,IAASvmB,EAAO,IAAI,QAAQ;AAClC,IAAIumB,KACH,OAAO,aAAa,QAAQ,UAAUA,CAAM;AAAA,EAE7C;AAGD,EADc,MAAM,KAAK,SAAS,iBAAiB,uBAAuB,CAAC,EACrE,QAAQ,CAAC/T,MAAS;AAEvB,UAAMgU,IAAS,CAAC,SAAS,OAAO,OAAO,cAAc,UAAU,KAAK,EAAE,OAAO,CAACvgC,GAAK3B,MAAS;AAC3F,YAAMD,IAAQ,SAAS,cAAc,OAAO;AAC5C,aAAAA,EAAM,OAAO,UACbA,EAAM,OAAOC,GACbkuB,EAAK,YAAYnuB,CAAK,GAEf;AAAA,QACN,GAAG4B;AAAA,QACH,CAAC3B,CAAI,GAAGD;AAAA,MACZ;AAAA,IACG,GAAE,CAAE,CAAA;AAEL,IAAAmuB,EAAK,iBAAiB,UAAU,MAAM;AACrC,YAAMiU,IAAgBC;AAEtB,MAAAF,EAAO,MAAM,QAAQC,EAAc,OACnCD,EAAO,IAAI,QAAQC,EAAc,KACjCD,EAAO,IAAI,QAAQC,EAAc,KACjCD,EAAO,YAAY,EAAE,QAAQC,EAAc,WAC3CD,EAAO,OAAO,QAAQC,EAAc,QACpCD,EAAO,IAAI,QAAQC,EAAc,KAG7B,OAAO,QAAQ,UAClB,IAAI,SAAS,qBAAqB,CAAE,GAAE,EAAE,SAASA,EAAc,IAAG,CAAE;AAAA,IAExE,CAAG;AAAA,EACH,CAAE,GAEqB,MAAM,KAAK,SAAS,iBAAiB,iBAAiB,CAAC,EAC/D,QAAQ,CAAC/iC,MAAO;AAC7B,IAAAA,EAAG,iBAAiB,SAAS,MAAM;AAElC,UADmBA,EAAG,QAAQ,kBAAkB;AAChC;AAEhB,YAAMG,IAAQH,EAAG,QAAQ,SACnB+iC,IAAgBC,KAChBziC,IAAMP,EAAG,QAAQ;AAEvB,MAAI,OAAO,QAAQ,UAClB,IAAI,SAASG,GAAO,CAAE,GAAE,EAAE,SAAS4iC,EAAc,IAAG,CAAE,GAGvD,MAAMxiC,GAAK;AAAA,QACV,QAAQ;AAAA,QACR,SAAS;AAAA,UACR,gBAAgB;AAAA,QAChB;AAAA,QACD,MAAM,KAAK,UAAU;AAAA,UACpB,OAAAJ;AAAA,UACA,GAAG4iC;AAAA,QACR,CAAK;AAAA,MACL,CAAI;AAAA,IACJ,CAAG;AAAA,EACH,CAAE;AAED,WAASC,IAAmB;AAC3B,UAAMN,IAAQ,OAAO,aAAa,QAAQ,OAAO,GAC3CE,IAAM,OAAO,aAAa,QAAQ,KAAK,GACvCK,IAAMC,EAAU,MAAM,GACtBC,IAAY,UAAU,WACtBN,IAAS,OAAO,aAAa,QAAQ,QAAQ,GAC7CtiC,IAAM,OAAO,SAAS;AAE5B,WAAO;AAAA,MACN,OAAAmiC;AAAA,MACA,KAAAE;AAAA,MACA,KAAAK;AAAA,MACA,WAAAE;AAAA,MACA,QAAAN;AAAA,MACA,KAAAtiC;AAAA,IACH;AAAA,EACE;AAED,WAAS2iC,EAAUtiC,GAAM;AAExB,UAAM8O,IADQ,KAAK,SAAS,MAAM,GACd,MAAM,KAAK9O,CAAI,GAAG;AACtC,WAAI8O,EAAM,WAAW,IAAUA,EAAM,IAAK,EAAC,MAAM,GAAG,EAAE,UAC1C;AAAA,EACZ;AACF,CAAC;;;ACxGD,GAAC,WAAY;AAAC,aAAS0zB,EAAG72B,GAAE;AAAC,aAAO,eAAeA,GAAE,cAAa,EAAC,OAAM,GAAI,CAAC;AAAA,IAAC;AAAC,QAAI82B,IAAE,MAASC,IAAE,CAAE;AAAC,aAASC,EAAGtjC,GAAEgG,GAAE;AAAC,UAAIu9B;AAAE,UAAgB,OAAO,SAApB,OAAkCvjC,EAAE,OAAO,QAAQ,KAAvB,MAAyB;AAAC,YAAG,MAAM,QAAQA,CAAC,MAAIujC,IAAEC,EAAGxjC,CAAC,MAAIgG,KAAGhG,KAAa,OAAOA,EAAE,UAAnB,UAA0B;AAAC,UAAAujC,MAAIvjC,IAAEujC;AAAG,cAAIv8B,IAAE,GAAEy8B,IAAE,WAAU;AAAA,UAAA;AAAG,iBAAM,EAAC,GAAEA,GAAE,GAAE,WAAU;AAAC,mBAAOz8B,KAAGhH,EAAE,SAAO,EAAC,MAAK,GAAE,IAAE,EAAC,MAAK,IAAG,OAAMA,EAAEgH,GAAG,EAAC;AAAA,UAAC,GAAE,GAAE,SAAShH,GAAE;AAAC,kBAAMA;AAAA,UAAC,GAAE,GAAEyjC,EAAC;AAAA,QAAC;AAAC,cAAM,IAAI,UAAU;AAAA,mFAAuI;AAAA,MAAC;AAAC,UAAIC,GAAEnZ,IAAE,IAAGlT,IAAE;AAAG,aAAM,EAAC,GAAE,WAAU;AAAC,QAAAksB,IAAEvjC,EAAE,OAAO,QAAQ,EAAC;AAAA,MAAE,GAAE,GAAE,WAAU;AAAC,YAAIA,IAAEujC,EAAE,KAAM;AAAC,eAAOhZ,IAAEvqB,EAAE,MAAKA;AAAA,MAAC,GAAE,GAAE,SAASA,GAAE;AAAC,QAAAqX,IAAE,IAAGqsB,IAAE1jC;AAAA,MAAC,GAAE,GAAE,WAAU;AAAC,YAAG;AAAC,UAAAuqB,KAASgZ,EAAE,UAAR,QAAgBA,EAAE,OAAQ;AAAA,QAAA,UAAC;AAAQ,cAAGlsB;AAAE,kBAAMqsB;AAAA,QAAC;AAAA,MAAC,EAAC;AAAA,IAAC;AAAC,aAASF,EAAGxjC,GAAEgG,GAAE;AAAC,UAAGhG,GAAE;AAAC,YAAa,OAAOA,KAAjB;AAAmB,iBAAO2jC,EAAG3jC,GAAEgG,CAAC;AAAE,YAAIu9B,IAAE,OAAO,UAAU,SAAS,KAAKvjC,CAAC,EAAE,MAAM,GAAE,EAAE;AAAE,eAAiBujC,MAAX,YAAcvjC,EAAE,gBAAcujC,IAAEvjC,EAAE,YAAY,OAAcujC,MAAR,SAAmBA,MAAR,QAAU,MAAM,KAAKvjC,CAAC,IAAgBujC,MAAd,eAAiB,2CAA2C,KAAKA,CAAC,IAAEI,EAAG3jC,GAAEgG,CAAC,IAAE;AAAA,MAAM;AAAA,IAAC;AAAC,aAAS29B,EAAG3jC,GAAEgG,GAAE;AAAC,OAAOA,KAAN,QAASA,IAAEhG,EAAE,YAAUgG,IAAEhG,EAAE;AAAQ,eAAQujC,IAAE,GAAEv8B,IAAE,IAAI,MAAMhB,CAAC,GAAEu9B,IAAEv9B,GAAEu9B;AAAI,QAAAv8B,EAAEu8B,CAAC,IAAEvjC,EAAEujC,CAAC;AAAE,aAAOv8B;AAAA,IAAC;AAAC,WAAO,eAAeq8B,GAAE,cAAa,EAAC,OAAM,GAAE,CAAC;AAAE,QAAIO,KAAGC,IAAE,QAAOC,IAAET,EAAE,gBAAcQ,GAAEE,IAAEV,EAAE,YAAUS,GAAEE,IAAEX,EAAE,qBAAmBU,GAAEE,IAAEZ,EAAE,kBAAgBW,GAAEX,EAAE,gBAAcY;AAAG,IAAAZ,EAAE,eAAaO;AAAE,QAAIC,IAAE,SAAS7jC,GAAE;AAAC,aAAOA,aAAa,oBAAkBA,aAAa,qBAAmBA,aAAa;AAAA,IAAmB;AAAE,IAAAqjC,EAAE,gBAAcQ;AAAE,QAAIC,IAAE,SAAS9jC,GAAE;AAAC,aAAM,CAAC,EAAEA,EAAE,eAAaA,EAAE,gBAAcA,EAAE,eAAgB,EAAC;AAAA,IAAO;AAAE,IAAAqjC,EAAE,YAAUS;AAAE,QAAIC,IAAE,SAAS/jC,GAAE;AAAC,UAAIgG,IAAEhG,GAAEujC,IAAE;AAAE,UAAGv9B,EAAE;AAAa;AAAG,UAAAu9B,KAAGv9B,EAAE,WAAUA,IAAEA,EAAE,wBAAwB,cAAYA,EAAE,eAAa;AAAA,eAAWA;AAAG,aAAOu9B,KAAG,IAAEA,IAAE;AAAA,IAAC;AAAE,IAAAF,EAAE,qBAAmBU;AAAE,QAAIC,IAAE,SAAShkC,GAAE;AAAC,aAAgB,OAAOA,KAAjB,WAAmBA,IAAY,OAAOA,KAAjB,WAAmBA,EAAE,SAAQ,IAAGA,IAAE,SAAO;AAAA,IAAO;AAAE,IAAAqjC,EAAE,kBAAgBW;AAAE,QAAIC,IAAE,SAASjkC,GAAE;AAAC,aAAO,0JAA0J,KAAK,OAAOA,CAAC,EAAE,YAAW,CAAE;AAAA,IAAC;AAAE,IAAAqjC,EAAE,gBAAcY,GAAEL,IAAE,SAAS5jC,GAAE;AAAC,UAAIgG,GAAEu9B,GAAEv8B,IAAEs8B,EAAGtjC,EAAE,UAAU;AAAE,UAAG;AAAC,aAAIgH,EAAE,EAAG,GAAC,EAAEu8B,IAAEv8B,EAAE,EAAC,GAAI,QAAM;AAAC,cAAIy8B,IAAEF,EAAE;AAAM,cAAGE,EAAE,WAAW,WAASz9B,IAAE49B,EAAEH,CAAC,IAAGA,EAAE,YAAU,KAAK,cAAYz9B,IAAEy9B,IAAGz9B;AAAE;AAAA,QAAK;AAAA,MAAC,SAAO09B,GAAE;AAAC,QAAA18B,EAAE,EAAE08B,CAAC;AAAA,MAAC,UAAC;AAAQ,QAAA18B,EAAE,EAAG;AAAA,MAAA;AAAC,aAAOhB;AAAA,IAAC,GAAEq9B,EAAE,eAAaO;AAAE,QAAIM,IAAE,CAAA;AAAG,aAASC,EAAGnkC,GAAEgG,GAAE;AAAC,UAAG,EAAEhG,aAAagG;AAAG,cAAM,IAAI,UAAU,mCAAmC;AAAA,IAAC;AAAC,aAASo+B,EAAGpkC,GAAEgG,GAAE;AAAC,eAAQqR,IAAE,GAAEA,IAAErR,EAAE,QAAOqR,KAAI;AAAC,YAAIksB,IAAEv9B,EAAEqR,CAAC;AAAE,QAAAksB,EAAE,aAAWA,EAAE,cAAY,IAAGA,EAAE,eAAa,IAAG,WAAUA,MAAIA,EAAE,WAAS,KAAI,OAAO,eAAevjC,GAAEujC,EAAE,KAAIA,CAAC;AAAA,MAAC;AAAA,IAAC;AAAC,aAASc,EAAGrkC,GAAEgG,GAAEqR,GAAE;AAAC,aAAOrR,KAAGo+B,EAAGpkC,EAAE,WAAUgG,CAAC,GAAEqR,KAAG+sB,EAAGpkC,GAAEqX,CAAC,GAAErX;AAAA,IAAC;AAAC,WAAO,eAAekkC,GAAE,cAAa,EAAC,OAAM,GAAE,CAAC;AAAE,QAAII,IAAG,WAAU;AAAC,eAAStkC,EAAEgG,GAAE;AAAC,QAAAm+B,EAAG,MAAKnkC,CAAC,GAAE,KAAK,OAAKgG,GAAE,KAAK,cAAY,GAAE,KAAK,aAAW,IAAG,KAAK,OAAKA,GAAE,KAAK,KAAI;AAAA,MAAE;AAAC,aAAOq+B,EAAGrkC,GAAE,CAAC,EAAC,KAAI,QAAO,OAAM,WAAU;AAAC,aAAK,KAAK,cAAc,KAAK,WAAW,GAAE,KAAK,KAAK,eAAe,KAAK,KAAK,IAAI,GAAE,KAAK,KAAK,cAAc,KAAK,WAAW,GAAE,KAAK,KAAK,gBAAgB,KAAK,WAAW,GAAE,KAAK,KAAK,iBAAgB,GAAG,KAAK,SAAQ,GAAG,KAAK,UAAW;AAAA,MAAA,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,WAAU;AAAC,YAAIA,IAAE,MAAKgG,IAAE,SAASA,GAAE;AAAC,UAAAhG,EAAE,SAASgG,CAAC;AAAA,QAAC,GAAEqR,IAAE,SAASrR,GAAE;AAAC,UAAAhG,EAAE,YAAYgG,CAAC;AAAA,QAAC;AAAE,aAAK,KAAK,KAAK,iBAAiB,SAAQ,WAAU;AAAC,UAAAhG,EAAE,UAAW;AAAA,QAAA,CAAC,GAAE,KAAK,KAAK,QAAM,KAAK,KAAK,KAAK,iBAAiB,SAAQ,WAAU;AAAC,UAAAA,EAAE,UAAW;AAAA,QAAA,CAAC,GAAE,KAAK,KAAK,SAAS,QAAQ,SAASA,GAAE;AAAC,UAAAA,EAAE,iBAAiB,SAAQgG,CAAC;AAAA,QAAC,CAAC,GAAE,KAAK,KAAK,OAAO,QAAQ,SAAShG,GAAE;AAAC,UAAAA,EAAE,iBAAiB,SAAQqX,CAAC;AAAA,QAAC,CAAC,GAAE,KAAK,KAAK,KAAK,iBAAiB,UAAS,SAASrR,GAAE;AAAC,UAAAhG,EAAE,aAAc;AAAA,QAAA,CAAC,GAAE,KAAK,KAAK,kBAAgB,KAAK,KAAK,WAAW,iBAAiB,SAAQ,SAASgG,IAAG;AAAC,UAAAhG,EAAE,gBAAcA,EAAE,KAAK,mBAAiBA,EAAE,KAAK,iBAAkB,GAACA,EAAE,KAAK,WAAW,oBAAoB,SAAQgG,CAAC;AAAA,QAAE,CAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,WAAU;AAAC,aAAK,oBAAmB,KAAI,KAAK,eAAkB,KAAK,gBAAT,KAAsB,KAAK,KAAK,cAAc,KAAK,KAAK,IAAI,GAAE,KAAK,gBAAc,KAAK,KAAK,MAAM,SAAO,KAAK,KAAK,WAAU,KAAI,KAAK,KAAK,OAAQ,GAAC,KAAK,KAAK,cAAc,KAAK,WAAW,GAAE,KAAK,KAAK,cAAc,KAAK,WAAW,GAAE,KAAK,KAAK,gBAAgB,KAAK,WAAW,IAAG,KAAK,UAAW,GAAC,KAAK,KAAK,UAAS,KAAI,KAAK,UAAW;AAAA,MAAA,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,WAAU;AAAC,YAAIhG,IAAE,KAAK,cAAY;AAAE,QAAAA,IAAE,MAAI,KAAK,KAAK,OAAM,GAAG,KAAK,KAAK,cAAcA,CAAC,GAAE,KAAK,KAAK,cAAcA,CAAC,GAAE,KAAK,KAAK,gBAAgBA,CAAC,GAAE,KAAK,UAAW,GAAC,KAAK,KAAK,UAAS,GAAG,KAAK,cAAYA,GAAM,KAAK,gBAAT,KAAsB,KAAK,KAAK,eAAe,KAAK,KAAK,IAAI;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,YAAW,OAAM,SAASA,GAAE;AAAC,YAAIgG,IAAEhG,EAAE;AAAc,YAAGgG,aAAa,aAAY;AAAC,cAAIqR,IAAE,CAACrR,EAAE,QAAQ,SAAO;AAAE,UAAAqR,IAAE,KAAK,gBAAc,KAAK,KAAK,WAAWA,CAAC,EAAE,MAAK,GAAG,KAAK,cAAYA,GAAE,KAAK,KAAK,cAAc,KAAK,WAAW,GAAE,KAAK,KAAK,cAAc,KAAK,WAAW,GAAM,KAAK,gBAAT,KAAsB,KAAK,KAAK,eAAe,KAAK,KAAK,IAAI;AAAA,QAAE;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,eAAc,OAAM,SAASrX,GAAE;AAAC,YAAIgG,IAAEhG,EAAE;AAAc,YAAG6jC,EAAE79B,CAAC,GAAE;AAAC,cAAIqR,IAAE;AAAI,kBAAOrR,EAAE,MAAM;AAAA,YAAA,KAAI;AAAW,kBAAG,EAAEA,aAAa;AAAkB;AAAM,cAAAqR,IAAErR,EAAE;AAAQ,kBAAIu9B,IAAEv9B,EAAE;AAAc,kBAAG,CAACu9B;AAAE;AAAM,kBAAIE,IAAEF,EAAE,cAAc,mBAAmB;AAAE,cAAAv9B,EAAE,WAASy9B,KAAG,KAAK,KAAK,mBAAmBA,CAAC;AAAE;AAAA,YAAM,KAAI;AAAQ,kBAAIc,IAAE,KAAK,KAAK,KAAK,cAAc,eAAgB,OAAOv+B,EAAE,MAAK,YAAa,CAAC;AAAE,kBAAG,EAAEu+B,aAAa;AAAkB;AAAM,cAAAltB,IAAEktB,EAAE;AAAM,kBAAIj4B,IAAEtG,EAAE;AAAc,kBAAG,CAACsG;AAAE;AAAM,kBAAImR,IAAEnR,EAAE,cAAc,gBAAgB;AAAE,cAAAmR,KAAG,KAAK,KAAK,mBAAmBA,CAAC;AAAE;AAAA,YAAM;AAA0B,kBAAf,CAACzX,EAAE,SAAyBA,EAAE,SAAZ,WAAkB,CAACi+B,EAAEj+B,EAAE,KAAK;AAAE;AAAM,cAAAqR,IAAErR,EAAE,OAAM,KAAK,KAAK,mBAAmBA,CAAC;AAAA,UAAE;AAAC,eAAK,KAAK,UAAUA,GAAEqR,CAAC;AAAA,QAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,uBAAsB,OAAM,WAAU;AAAC,YAAIrX,IAAE,MAAKgG,IAAE,KAAK,KAAK,UAAU,KAAK,WAAW,EAAE,OAAO,SAAShG,GAAE;AAAC,iBAAOA,EAAE,YAAU8jC,EAAE9jC,CAAC;AAAA,QAAC,CAAC,GAAEqX,IAAE;AAAE,eAAOrR,EAAE,QAAQ,SAASA,GAAE;AAAC,kBAAOA,EAAE,MAAM;AAAA,YAAA,KAAI;AAAW,kBAAGA,EAAE,cAAe,GAAC;AAAC,gBAAAqR;AAAI;AAAA,cAAK;AAAC,kBAAIksB,IAAEv9B,EAAE;AAAc,kBAAG,CAACu9B;AAAE;AAAM,kBAAIE,IAAEF,EAAE,cAAc,mBAAmB;AAAE,cAAAE,KAAGzjC,EAAE,KAAK,gBAAgByjC,CAAC;AAAE;AAAA,YAAM,KAAI;AAAQ,kBAAGz9B,EAAE,cAAa,GAAG;AAAC,gBAAAqR;AAAI;AAAA,cAAK;AAAC,kBAAIktB,IAAEv+B,EAAE;AAAc,kBAAG,CAACu+B;AAAE;AAAM,kBAAIj4B,IAAEi4B,EAAE,cAAc,gBAAgB;AAAE,cAAAj4B,KAAGtM,EAAE,KAAK,gBAAgBsM,CAAC;AAAE;AAAA,YAAM;AAAQ,kBAAG,CAACtG,EAAE,cAAe,KAAYA,EAAE,SAAZ,WAAkB,CAACi+B,EAAEj+B,EAAE,KAAK,GAAE;AAAC,gBAAAhG,EAAE,KAAK,gBAAgBgG,CAAC;AAAE;AAAA,cAAK;AAAC,cAAAqR;AAAA,UAAI;AAAA,QAAC,CAAC,GAAEA,MAAIrR,EAAE;AAAA,MAAM,EAAC,GAAE,EAAC,KAAI,YAAW,OAAM,WAAU;AAAC,aAAK,KAAK,oBAAkB,KAAK,KAAK,YAAY,KAAK,KAAK,OAAM,EAAE;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,WAAU;AAAC,aAAK,eAAa,KAAK,KAAK,UAAS,GAAG,KAAK,aAAW;AAAA,MAAG,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,WAAU;AAAC,aAAK,eAAa,KAAK,KAAK,UAAS,GAAG,KAAK,aAAW;AAAA,MAAG,EAAC,GAAE,EAAC,KAAI,qBAAoB,OAAM,WAAU;AAAC,YAAIhG,IAAE,MAAKgG,IAAE,KAAK,KAAK;AAAa,YAAI,iBAAiB,SAASqR,GAAE;AAAC,UAAAA,EAAE,QAAQ,SAASA,GAAE;AAAC,YAAeA,EAAE,SAAjB,gBAAiCA,EAAE,kBAAZ,YAA4BrX,EAAE,KAAK,KAAK,cAAYgG,EAAE;AAAA,UAAM,CAAC;AAAA,QAAC,CAAC,EAAE,QAAQ,KAAK,KAAK,cAAa,EAAC,YAAW,GAAE,CAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,gBAAe,OAAM,WAAU;AAAC,aAAK,KAAK,eAAgB,GAAC,KAAK,KAAK,YAAW;AAAA,MAAE,EAAC,CAAC,CAAC,GAAEhG;AAAA,IAAC,EAAC,GAAGwkC,IAAGF;AAAG,IAAAJ,EAAE,UAAQM;AAAG,QAAIC,IAAE,CAAE;AAAC,aAASC,EAAG1kC,GAAEgG,GAAE;AAAC,UAAG,EAAEhG,aAAagG;AAAG,cAAM,IAAI,UAAU,mCAAmC;AAAA,IAAC;AAAC,aAAS2+B,EAAG3kC,GAAEgG,GAAE;AAAC,eAAQqR,IAAE,GAAEA,IAAErR,EAAE,QAAOqR,KAAI;AAAC,YAAIosB,IAAEz9B,EAAEqR,CAAC;AAAE,QAAAosB,EAAE,aAAWA,EAAE,cAAY,IAAGA,EAAE,eAAa,IAAG,WAAUA,MAAIA,EAAE,WAAS,KAAI,OAAO,eAAezjC,GAAEyjC,EAAE,KAAIA,CAAC;AAAA,MAAC;AAAA,IAAC;AAAC,aAASmB,EAAG5kC,GAAEgG,GAAEqR,GAAE;AAAC,aAAOrR,KAAG2+B,EAAG3kC,EAAE,WAAUgG,CAAC,GAAEqR,KAAGstB,EAAG3kC,GAAEqX,CAAC,GAAErX;AAAA,IAAC;AAAC,WAAO,eAAeykC,GAAE,cAAa,EAAC,OAAM,GAAE,CAAC;AAAE,QAAII,IAAG,WAAU;AAAC,eAAS7kC,EAAEgG,GAAE;AAAC,YAAIqR,GAAEosB,IAAEz9B,EAAE,eAAcu9B,IAAEv9B,EAAE,WAAUgB,IAAEhB,EAAE,cAAau+B,IAAEv+B,EAAE,UAASsG,IAAEtG,EAAE,6BAA4BukB,IAAEvkB,EAAE,qBAAoB8+B,KAAE9+B,EAAE,cAAa++B,IAAE/+B,EAAE,sBAAqBg/B,KAAWD,MAAT,UAAYA,GAAEE,IAAEj/B,EAAE,gBAAeF,KAAWm/B,MAAT,SAAW,IAAEA,GAAEC,KAAEl/B,EAAE,cAAaqd,KAAErd,EAAE,UAASyX,KAAEzX,EAAE,uBAAsBM,KAAWmX,OAAT,UAAYA,IAAE0nB,KAAEn/B,EAAE,gBAAeuG,KAAW44B,OAAT,UAAYA,IAAEzB,KAAE19B,EAAE;AAAa,QAAA0+B,EAAG,MAAK1kC,CAAC;AAAE,YAAIolC,KAAE,SAAS,cAAcN,EAAC;AAAE,YAAG,CAACM;AAAE,gBAAM,IAAI,MAAM,uCAAuC,OAAON,EAAC,CAAC;AAAE,aAAK,OAAKM;AAAE,YAAIC,KAAE,SAAS,cAAcH,EAAC;AAAE,YAAG,CAACG;AAAE,gBAAM,IAAI,MAAM,8CAA8C,OAAOH,EAAC,CAAC;AAAE,YAAG,KAAK,OAAKG,IAAEr+B,GAAE;AAAC,cAAIoc,KAAE,SAAS,cAAcpc,CAAC;AAAE,cAAG,CAACoc;AAAE,kBAAM,IAAI,MAAM,8CAA8C,OAAOpc,CAAC,CAAC;AAAE,eAAK,OAAKoc;AAAA,QAAC;AAAC,YAAGqgB,GAAE;AAAC,cAAI6B,KAAE,SAAS,cAAc7B,CAAC;AAAE,cAAG,CAAC6B;AAAE,kBAAM,IAAI,MAAM,gDAAgD,OAAO7B,CAAC,CAAC;AAAE,eAAK,QAAM6B;AAAA,QAAC;AAAC,YAAIC,KAAEH,GAAE,cAAc,sBAAwB;AAAE,YAAG,CAACG;AAAE,gBAAM,IAAI,MAAM,8CAA8C,OAAOL,EAAC,CAAC;AAAE,YAAG,KAAK,eAAaK,IAAEhb,GAAE;AAAC,cAAIib,KAAE,SAAS,cAAcjb,CAAC;AAAE,cAAG,CAACib;AAAE,kBAAM,IAAI,MAAM,+DAA+D,OAAOjb,CAAC,CAAC;AAAE,eAAK,qBAAmBib;AAAA,QAAC;AAAC,YAAGl5B,GAAE;AAAC,cAAIiwB,KAAE,SAAS,cAAcjwB,CAAC;AAAE,cAAG,CAACiwB;AAAE,kBAAM,IAAI,MAAM,uEAAuE,OAAOjwB,CAAC,CAAC;AAAE,eAAK,6BAA2BiwB;AAAA,QAAC;AAAC,YAAIkJ,KAAEL,GAAE,cAAc,WAAW;AAAE,YAAG,CAACK;AAAE,gBAAM,IAAI,MAAM,kDAAkD;AAAE,aAAK,SAAOA;AAAE,YAAIC,KAAED,GAAE,cAAc,gBAAgB;AAAE,YAAG,CAACC;AAAE,gBAAM,IAAI,MAAM,kCAAkC;AAAE,aAAK,OAAKA,IAAE,KAAK,QAAMD,GAAE,iBAAiB,UAAU;AAAE,YAAIE,KAAEF,GAAE,cAAc,uBAAuB;AAAE,YAAG,CAACE;AAAE,gBAAM,IAAI,MAAM,yCAAyC;AAAE,aAAK,aAAWA;AAAE,YAAIC,KAAEH,GAAE,cAAc,sBAAsB;AAAE,YAAG,CAACG;AAAE,gBAAM,IAAI,MAAM,wCAAwC;AAAE,aAAK,YAAUA,IAAE,KAAK,aAAWH,GAAE,iBAAiB,eAAe,GAAE,KAAK,WAAS,SAAS,iBAAiB,gBAAgB,GAAE,KAAK,WAASpiB,MAAG,KAAK,KAAK,eAAa,QAAO,KAAK,WAASkhB,GAAE,KAAK,aAAW,KAAK,aAAa,OAAM,KAAK,eAAab,IAAE,KAAK,YAAUH,GAAE,KAAK,oBAAyBlsB,IAAE,KAAK,WAAf,QAAgCA,MAAT,SAAW,SAAOA,EAAE,cAAc,oBAAsB,GAAE,KAAK,wBAAsB/Q,IAAE,KAAK,uBAAqB0+B,IAAE,KAAK,iBAAez4B,IAAE,KAAK,iBAAezG,MAAG,IAAEA,KAAE,GAAE,KAAK,SAAO,KAAK,UAAS;AAAA,MAAE;AAAC,aAAO8+B,EAAG5kC,GAAE,CAAC,EAAC,KAAI,iBAAgB,OAAM,SAASA,GAAE;AAAC,aAAK,KAAK,MAAM,SAAO,IAAG,KAAK,KAAK,MAAM,SAAO,GAAG,OAAO,KAAK,MAAMA,CAAC,EAAE,cAAa,IAAI;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,SAASA,GAAE;AAAC,YAAIgG,IAAY,OAAOhG,KAAjB,WAAmB,KAAK,MAAMA,CAAC,EAAE,iBAAiB,yBAAyB,IAAE,KAAK,KAAK,iBAAiB,yBAAyB;AAAE,eAAO,MAAM,KAAKgG,CAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,iBAAgB,OAAM,SAAShG,GAAE;AAAC,YAAIgG,IAAE,MAAKqR,IAAE,SAASA,GAAE;AAAC,cAAIosB,IAAWpsB,MAAT,SAAWrR,EAAE,OAAKA,EAAE;AAAK,cAAGy9B,GAAE;AAAC,gBAAIF,IAAEK,EAAEH,CAAC,GAAEz8B,IAAWqQ,MAAT,SAAWrR,EAAE,WAASA,EAAE;AAAS,gBAAGu9B,KAAG,MAAM,QAAQv8B,CAAC,KAAGA,EAAE,SAAO;AAAE,uBAAQu9B,KAAE,SAASv+B,IAAE;AAAC,oBAAIqR,IAAErQ,EAAE,UAAU,SAASqQ,IAAE;AAAC,yBAAM,CAACA,GAAE,OAAK,KAAGrX,IAAEgG;AAAA,gBAAC,CAAC;AAAE,oBAAGqR,KAAG;AAAE,yBAAOksB,EAAE,cAAYv8B,EAAEqQ,CAAC,EAAE,MAAK;AAAA,cAAO,GAAE/K,IAAE,GAAEA,KAAGtM,KAAoBukC,GAAEj4B,CAAC,MAAb,SAARA;AAAK;AAAA,UAAwB;AAAA,QAAC;AAAE,QAAA+K,EAAE,MAAM;AAAE,YAAIosB,IAAEG,EAAE,KAAK,IAAI;AAAE,QAAAH,KAAGzjC,MAAI,KAAK,MAAM,SAAO,IAAEyjC,EAAE,cAAY,KAAK,aAAWA,KAAa,OAAO,KAAK,YAAtB,YAAgCzjC,MAAI,KAAK,MAAM,SAAO,IAAEyjC,EAAE,cAAY,KAAK,WAASpsB,EAAE,MAAM;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,UAAS,OAAM,WAAU;AAAC,aAAK,WAAW,MAAO;AAAA,MAAA,EAAC,GAAE,EAAC,KAAI,UAAS,OAAM,WAAU;AAAC,aAAK,UAAU,MAAK;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,cAAa,OAAM,WAAU;AAAC,aAAK,aAAa,MAAK;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,oBAAmB,OAAM,WAAU;AAAC,aAAK,kBAAgB,KAAK,mBAAmB,MAAK;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,mBAAkB,OAAM,SAASrX,GAAE;AAAC,aAAK,gBAAcA,EAAE,UAAU,IAAI,KAAK,YAAY;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,sBAAqB,OAAM,SAASA,GAAE;AAAC,aAAK,gBAAcA,EAAE,UAAU,OAAO,KAAK,YAAY;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,eAAc,OAAM,SAASA,GAAE;AAAC,YAAIgG,IAAE,UAAU,SAAO,KAAY,UAAU,CAAC,MAApB,UAAuB,UAAU,CAAC;AAAE,YAAGhG,GAAE;AAAC,cAAIqX,IAAE,iBAAiBrX,CAAC;AAAE,UAAsBqX,EAAE,eAArB,qBAAkCrX,EAAE,MAAM,aAAW,sBAAqBgG,KAAYqR,EAAE,YAAX,UAAoBrX,EAAE,iBAAiB,iBAAgB,SAASgG,IAAG;AAAC,YAAAhG,EAAE,MAAM,UAAQ,QAAOA,EAAE,oBAAoB,iBAAgBgG,CAAC;AAAA,UAAC,CAAC,GAAEhG,EAAE,MAAM,UAAQ,KAAI,KAAK,eAAeA,CAAC;AAAA,QAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,eAAc,OAAM,SAASA,GAAE;AAAC,YAAIgG,IAAE,MAAKqR,IAAE,UAAU,SAAO,KAAY,UAAU,CAAC,MAApB,UAAuB,UAAU,CAAC;AAAE,QAAArX,MAAIqX,MAAIrX,EAAE,MAAM,UAAQ,UAAS,sBAAsB,WAAU;AAAC,UAAAA,EAAE,MAAM,UAAQ,IAAGgG,EAAE,cAAchG,CAAC;AAAA,QAAC,CAAC;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,kBAAiB,OAAM,SAASA,GAAE;AAAC,QAAAA,MAAIA,EAAE,MAAM,gBAAc;AAAA,MAAO,EAAC,GAAE,EAAC,KAAI,iBAAgB,OAAM,SAASA,GAAE;AAAC,QAAAA,MAAIA,EAAE,MAAM,gBAAc;AAAA,MAAG,EAAC,GAAE,EAAC,KAAI,kBAAiB,OAAM,WAAU;AAAC,YAAIA,IAAE;AAAK,aAAK,eAAe,KAAK,IAAI,GAAE,KAAK,eAAe,KAAK,IAAI,GAAE,KAAK,SAAS,QAAQ,SAASgG,GAAE;AAAC,iBAAOhG,EAAE,eAAegG,CAAC;AAAA,QAAC,CAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,eAAc,OAAM,WAAU;AAAC,aAAK,yBAAuB,KAAK,YAAY,KAAK,IAAI,GAAE,KAAK,QAAM,KAAK,YAAY,KAAK,IAAI;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,WAAU;AAAC,aAAK,aAAW,MAAM,KAAK,SAAS,GAAE,KAAK,UAAQ,KAAK,mBAAiB,KAAK,iBAAiB,MAAK,IAAG,KAAK,YAAY,KAAK,OAAM,EAAE;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,WAAU;AAAC,aAAK,UAAQ,KAAK,mBAAiB,KAAK,iBAAiB,MAAK,IAAG,KAAK,YAAY,KAAK,OAAM,EAAE;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,WAAU;AAAC,aAAK,yBAAuB,OAAO,SAAS,EAAC,KAAI+9B,EAAE,KAAK,IAAI,GAAE,UAAS,SAAQ,CAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,SAAS/jC,GAAEgG,GAAE;AAAC,QAAAA,IAAEg+B,EAAEh+B,CAAC;AAAE,YAAIqR,IAAE,SAAS,cAAc,oBAAqB,OAAOrX,EAAE,IAAG,IAAK,CAAC,KAAG,SAAS,cAAc,oBAAqB,OAAOA,EAAE,MAAK,IAAK,CAAC;AAAE,YAAGqX,MAAIA,EAAE,cAAYrR,IAAGhG,EAAE,QAAQ,qBAAuB,GAAE;AAAC,cAAIyjC,IAAE,KAAK,WAAW,cAAc,WAAW,OAAOzjC,EAAE,EAAE,CAAC;AAAE,UAAAyjC,aAAa,qBAAmBA,EAAE,QAAMz9B;AAAA,QAAE;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,mBAAkB,OAAM,SAAShG,GAAE;AAAC,aAAK,uBAAqB,KAAK,mBAAmB,eAAaA,IAAE,GAAG,SAAU,IAAE,KAAK,+BAA6B,KAAK,2BAA2B,cAAY,GAAG,OAAO,KAAK,MAAMA,KAAG,KAAK,MAAM,SAAO,KAAG,GAAG,GAAE,GAAG;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,oBAAmB,OAAM,WAAU;AAAC,YAAIA,GAAEgG,IAAE;AAAK,YAAG,KAAK,gBAAe;AAAC,cAAIqR,IAAE,KAAK,KAAK;AAAc,UAAGA,MAAEA,EAAE,mBAAmB,YAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6Q,GAAE,KAAK,aAAWA,EAAE,gBAAcA,EAAE,cAAc,cAAc,kBAAkB,IAAE,SAAS,cAAc,kBAAkB,GAAE,KAAK,qBAAmB,KAAK,WAAW,cAAc,sBAAwB,GAAE,KAAK,KAAK,iBAAiB,qBAAuB,EAAE,QAAQ,SAASrX,GAAE;AAAC,gBAAIqX,IAAEwsB,EAAE7jC,CAAC,IAAEA,IAAEA,EAAE,cAAc,yBAAyB;AAAE,gBAAGqX,KAAG,CAACrR,EAAE,WAAW,cAAc,WAAW,OAAOhG,EAAE,EAAE,CAAC,GAAE;AAAC,kBAAIyjC,IAAE,mCAAsC,OAAOpsB,EAAE,IAAG,UAAY,EAAE,OAAOA,EAAE,MAAK,eAAiB,EAAE,OAAOA,EAAE,MAAK,MAAO;AAAE,cAAArR,EAAE,WAAW,mBAAmB,aAAYy9B,CAAC;AAAA,YAAC;AAAA,UAAC,CAAC,GAAE,OAAO,WAAS,OAAO,QAAQ,QAAS,GAAC,OAAO,WAAS,OAAO,QAAQ,MAAO,GAAC,OAAO,aAAkBzjC,IAAE,OAAO,QAAQ,QAAQ,KAAK,OAAtC,QAAmDA,MAAT,UAAYA,EAAE,KAAM;AAAA,QAAC;AAAA,MAAC,EAAC,CAAC,CAAC,GAAEA;AAAA,IAAC,EAAG,GAAC6lC,IAAGhB;AAAG,IAAAJ,EAAE,UAAQoB;AAAG,QAAIC,IAAE,CAAA;AAAG,aAASC,EAAGrC,GAAE1jC,GAAE;AAAC,UAAG,EAAE0jC,aAAa1jC;AAAG,cAAM,IAAI,UAAU,mCAAmC;AAAA,IAAC;AAAC,QAAIgmC,IAAGF,KAAGA,EAAE,mBAAiB,SAASpC,GAAE;AAAC,aAAOA,KAAGA,EAAE,aAAWA,IAAE,EAAC,SAAQA,EAAC;AAAA,IAAC;AAAE,WAAO,eAAeoC,GAAE,cAAa,EAAC,OAAM,GAAE,CAAC;AAAE,QAAIG,KAAGD,EAAG9B,CAAC,GAAEgC,IAAGF,EAAGvB,CAAC,GAAE0B,IAAG,SAASzC,EAAE1jC,GAAE;AAAC,MAAA+lC,EAAG,MAAKrC,CAAC,GAAE,KAAK,OAAK,IAAIwC,EAAG,QAAQlmC,CAAC,GAAE,KAAK,aAAW,IAAIimC,GAAG,QAAQ,KAAK,IAAI;AAAA,IAAC,GAAEG,IAAGD;AAAG,IAAAL,EAAE,UAAQM;AAAG,QAAIC,IAAE,CAAA;AAAG,IAAAlD,EAAGkD,CAAC;AAAE,aAASjE,EAAEp8B,GAAE;AAAC,UAAIhG,IAAE,OAAOgG;AAAE,aAAaA,KAAN,SAAoBhG,KAAV,YAAyBA,KAAZ;AAAA,IAAc;AAAC,QAAIsmC,IAAa,OAAOlD,KAAjB,YAAoBA,KAAGA,EAAE,WAAS,UAAQA,GAAMmD,IAAa,OAAO,QAAjB,YAAuB,QAAM,KAAK,WAAS,UAAQ,MAAKC,IAAGF,KAAIC,KAAI,SAAS,aAAa,EAAG,GAAKE,KAAG,WAAU;AAAC,aAAOD,EAAG,KAAK,IAAG;AAAA,IAAE,GAAME,KAAG;AAAK,aAASC,GAAG3gC,GAAE;AAAC,eAAQhG,IAAEgG,EAAE,QAAOhG,OAAK0mC,GAAG,KAAK1gC,EAAE,OAAOhG,CAAC,CAAC;AAAG;AAAC,aAAOA;AAAA,IAAC;AAAC,QAAI4mC,KAAG;AAAO,aAASC,EAAGtD,GAAE;AAAC,aAAOA,KAAEA,EAAE,MAAM,GAAEoD,GAAGpD,CAAC,IAAE,CAAC,EAAE,QAAQqD,IAAG,EAAE;AAAA,IAAG;AAAC,QAAIE,IAAEN,EAAG,QAAWO,KAAG,OAAO,WAAUC,KAAGD,GAAG,gBAAeE,KAAGF,GAAG,UAASG,KAAEJ,IAAEA,EAAE,cAAY;AAAO,aAASK,GAAGzD,GAAE;AAAC,UAAIH,IAAEyD,GAAG,KAAKtD,GAAEwD,EAAC,GAAElhC,IAAE09B,EAAEwD,EAAC;AAAE,UAAG;AAAC,QAAAxD,EAAEwD,EAAC,IAAE;AAAO,YAAIzD,IAAE;AAAA,MAAE,QAAS;AAAA,MAAE;AAAA,UAAIn3B,IAAE26B,GAAG,KAAKvD,CAAC;AAAE,aAAOD,MAAIF,IAAEG,EAAEwD,EAAC,IAAElhC,IAAE,OAAO09B,EAAEwD,EAAC,IAAG56B;AAAA,IAAC;AAAC,QAAI86B,KAAG,OAAO,WAAUC,KAAGD,GAAG;AAAS,aAASE,GAAGthC,GAAE;AAAC,aAAOqhC,GAAG,KAAKrhC,CAAC;AAAA,IAAC;AAAC,QAAIuhC,KAAG,iBAAgBC,KAAG,sBAAqBpwB,KAAG0vB,IAAEA,EAAE,cAAY;AAAO,aAASW,GAAG/D,GAAE;AAAC,aAAaA,KAAN,OAAiBA,MAAT,SAAW8D,KAAGD,KAAGnwB,MAAIA,MAAM,OAAOssB,CAAC,IAAEyD,GAAGzD,CAAC,IAAE4D,GAAG5D,CAAC;AAAA,IAAC;AAAC,aAASgE,GAAG1hC,GAAE;AAAC,aAAaA,KAAN,QAAmB,OAAOA,KAAjB;AAAA,IAAkB;AAAC,QAAI2hC,KAAG;AAAkB,aAASC,GAAGlE,GAAE;AAAC,aAAgB,OAAOA,KAAjB,YAAoBgE,GAAGhE,CAAC,KAAG+D,GAAG/D,CAAC,KAAGiE;AAAA,IAAE;AAAC,QAAIE,KAAG,KAAIC,KAAG,sBAAqBC,KAAG,cAAaC,KAAG,eAAcC,KAAG;AAAS,aAASC,GAAGxE,GAAE;AAAC,UAAa,OAAOA,KAAjB;AAAmB,eAAOA;AAAE,UAAGkE,GAAGlE,CAAC;AAAE,eAAOmE;AAAG,UAAGzF,EAAEsB,CAAC,GAAE;AAAC,YAAIH,IAAc,OAAOG,EAAE,WAArB,aAA6BA,EAAE,QAAS,IAACA;AAAE,QAAAA,IAAEtB,EAAEmB,CAAC,IAAEA,IAAE,KAAGA;AAAA,MAAC;AAAC,UAAa,OAAOG,KAAjB;AAAmB,eAAWA,MAAJ,IAAMA,IAAE,CAACA;AAAE,MAAAA,IAAEmD,EAAGnD,CAAC;AAAE,UAAI1jC,IAAE+nC,GAAG,KAAKrE,CAAC;AAAE,aAAO1jC,KAAGgoC,GAAG,KAAKtE,CAAC,IAAEuE,GAAGvE,EAAE,MAAM,CAAC,GAAE1jC,IAAE,IAAE,CAAC,IAAE8nC,GAAG,KAAKpE,CAAC,IAAEmE,KAAG,CAACnE;AAAA,IAAC;AAAC,QAAIyE,KAAG,uBAAsBC,KAAG,KAAK,KAAIjxB,KAAG,KAAK;AAAI,aAASH,GAAGhQ,GAAEu8B,GAAEv9B,GAAE;AAAC,UAAIqR,GAAErX,GAAEyjC,GAAEC,GAAEp3B,GAAE24B,GAAExnB,KAAE,GAAEqnB,IAAE,IAAGh/B,KAAE,IAAGud,IAAE;AAAG,UAAe,OAAOrc,KAAnB;AAAqB,cAAM,IAAI,UAAUmhC,EAAE;AAAE,eAASE,GAAE9E,IAAE;AAAC,YAAIv9B,KAAEqR,GAAEosB,KAAEzjC;AAAE,eAAOqX,IAAErX,IAAE,QAAOyd,KAAE8lB,IAAEG,IAAE18B,EAAE,MAAMy8B,IAAEz9B,EAAC;AAAA,MAAC;AAAC,eAASk/B,GAAEl+B,IAAE;AAAC,YAAIhB,KAAEgB,KAAEi+B;AAAE,eAAgBA,MAAT,UAAYj/B,MAAGu9B,KAAGv9B,KAAE,KAAGF,MAAGkB,KAAEyW,MAAGgmB;AAAA,MAAC;AAAC,eAASmC,KAAG;AAAC,YAAI5+B,KAAEy/B,GAAE;AAAG,YAAGvB,GAAEl+B,EAAC;AAAE,iBAAOV,GAAEU,EAAC;AAAE,QAAAsF,IAAE,WAAWs5B,IAAE,SAAS5+B,IAAE;AAAC,cAAIhB,KAAEu9B,KAAGv8B,KAAEi+B;AAAG,iBAAOn/B,KAAEqR,GAAGnR,IAAEy9B,KAAGz8B,KAAEyW,GAAE,IAAEzX;AAAA,QAAC,EAAEgB,EAAC,CAAC;AAAA,MAAC;AAAC,eAASV,GAAEU,IAAE;AAAC,eAAOsF,IAAE,QAAO+W,KAAGhM,IAAEgxB,GAAErhC,EAAC,KAAGqQ,IAAErX,IAAE,QAAO0jC;AAAA,MAAE;AAAC,eAASqB,KAAG;AAAC,YAAI/9B,KAAEy/B,GAAE,GAAGzgC,KAAEk/B,GAAEl+B,EAAC;AAAE,YAAGqQ,IAAE,WAAUrX,IAAE,MAAKilC,IAAEj+B,IAAEhB,IAAE;AAAC,cAAYsG,MAAT;AAAW,mBAAO,SAAStF,IAAE;AAAC,qBAAOyW,KAAEzW,IAAEsF,IAAE,WAAWs5B,IAAErC,CAAC,GAAEuB,IAAEuD,GAAErhC,EAAC,IAAE08B;AAAA,YAAC,EAAEuB,CAAC;AAAE,cAAGn/B;AAAE,mBAAO,aAAawG,CAAC,GAAEA,IAAE,WAAWs5B,IAAErC,CAAC,GAAE8E,GAAEpD,CAAC;AAAA,QAAC;AAAC,eAAgB34B,MAAT,WAAaA,IAAE,WAAWs5B,IAAErC,CAAC,IAAGG;AAAA,MAAC;AAAC,aAAOH,IAAE2E,GAAG3E,CAAC,KAAG,GAAEnB,EAAEp8B,CAAC,MAAI8+B,IAAE,CAAC,CAAC9+B,EAAE,SAAQy9B,KAAG39B,KAAE,aAAYE,KAAGoiC,GAAGF,GAAGliC,EAAE,OAAO,KAAG,GAAEu9B,CAAC,IAAEE,GAAEpgB,IAAE,cAAard,IAAE,CAAC,CAACA,EAAE,WAASqd,IAAG0hB,GAAE,SAAO,WAAU;AAAC,QAASz4B,MAAT,UAAY,aAAaA,CAAC,GAAEmR,KAAE,GAAEpG,IAAE4tB,IAAEjlC,IAAEsM,IAAE;AAAA,MAAM,GAAEy4B,GAAE,QAAM,WAAU;AAAC,eAAgBz4B,MAAT,SAAWo3B,IAAEp9B,GAAEmgC,GAAE,CAAE;AAAA,MAAC,GAAE1B;AAAA,IAAC;AAAC,IAAAsB,EAAE,UAAQrvB;AAAG,QAAIsxB,KAAE,CAAE;AAAC,WAAO,eAAeA,IAAE,cAAa,EAAC,OAAM,GAAE,CAAC;AAAE,QAAIC,MAAGC,KAAE,QAAOC,KAAEH,GAAE,gBAAcE,IAAEE,KAAGJ,GAAE,aAAWG,IAAEH,GAAE,YAAUI;AAAI,IAAAJ,GAAE,kBAAgBC;AAAE,QAAIC,KAAE,SAASxoC,GAAE;AAAC,aAAOA,aAAa,oBAAkBA,aAAa,qBAAmBA,aAAa;AAAA,IAAmB;AAAE,IAAAsoC,GAAE,gBAAcE;AAAE,QAAIC,KAAE,SAASzoC,GAAEujC,GAAE;AAAC,cAAOA,GAAC;AAAA,QAAE,KAAI;AAAiB,gBAAM,IAAI,MAAM,+BAA+B,OAAOvjC,GAAE,gEAAgE,CAAC;AAAA,QAAE,KAAI;AAAY,gBAAM,IAAI,MAAM,+BAA+B,OAAOA,GAAE,iEAAmE,CAAC;AAAA,QAAE,KAAI;AAAe,gBAAM,IAAI,MAAM,8DAA8D,OAAOA,GAAE,YAAY,CAAC;AAAA,QAAE,KAAI;AAAiB,gBAAM,IAAI,MAAM,gCAAgC,OAAOA,GAAE,gBAAgB,CAAC;AAAA,MAAE;AAAA,IAAC;AAAE,IAAAsoC,GAAE,aAAWG;AAAE,QAAIC,KAAG,SAAS1oC,GAAE;AAAC,aAAM,CAAC,EAAEA,EAAE,eAAaA,EAAE,gBAAcA,EAAE,eAAgB,EAAC;AAAA,IAAO;AAAE,IAAAsoC,GAAE,YAAUI,IAAGH,KAAE,SAASvoC,GAAE;AAAC,aAAgB,OAAOA,KAAjB,WAAmBA,IAAY,OAAOA,KAAjB,WAAmBA,EAAE,SAAQ,IAAGA,IAAE,SAAO;AAAA,IAAO,GAAEsoC,GAAE,kBAAgBC;AAAE,QAAII,KAAE,CAAE;AAAC,aAASjmC,GAAG1C,GAAEujC,GAAE;AAAC,UAAIv9B;AAAE,UAAgB,OAAO,SAApB,OAAkChG,EAAE,OAAO,QAAQ,KAAvB,MAAyB;AAAC,YAAG,MAAM,QAAQA,CAAC,MAAIgG,IAAE4iC,GAAG5oC,CAAC,MAAIujC,KAAGvjC,KAAa,OAAOA,EAAE,UAAnB,UAA0B;AAAC,UAAAgG,MAAIhG,IAAEgG;AAAG,cAAIsG,IAAE,GAAEm3B,IAAE,WAAU;AAAA,UAAA;AAAG,iBAAM,EAAC,GAAEA,GAAE,GAAE,WAAU;AAAC,mBAAOn3B,KAAGtM,EAAE,SAAO,EAAC,MAAK,GAAE,IAAE,EAAC,MAAK,IAAG,OAAMA,EAAEsM,GAAG,EAAC;AAAA,UAAC,GAAE,GAAE,SAAStM,GAAE;AAAC,kBAAMA;AAAA,UAAC,GAAE,GAAEyjC,EAAC;AAAA,QAAC;AAAC,cAAM,IAAI,UAAU;AAAA,mFAAuI;AAAA,MAAC;AAAC,UAAIpsB,GAAErQ,IAAE,IAAGi+B,IAAE;AAAG,aAAM,EAAC,GAAE,WAAU;AAAC,QAAAj/B,IAAEhG,EAAE,OAAO,QAAQ,EAAG;AAAA,MAAA,GAAE,GAAE,WAAU;AAAC,YAAIA,IAAEgG,EAAE,KAAI;AAAG,eAAOgB,IAAEhH,EAAE,MAAKA;AAAA,MAAC,GAAE,GAAE,SAASA,GAAE;AAAC,QAAAilC,IAAE,IAAG5tB,IAAErX;AAAA,MAAC,GAAE,GAAE,WAAU;AAAC,YAAG;AAAC,UAAAgH,KAAShB,EAAE,UAAR,QAAgBA,EAAE,OAAM;AAAA,QAAE,UAAC;AAAQ,cAAGi/B;AAAE,kBAAM5tB;AAAA,QAAC;AAAA,MAAC,EAAC;AAAA,IAAC;AAAC,aAASuxB,GAAG5oC,GAAEujC,GAAE;AAAC,UAAGvjC,GAAE;AAAC,YAAa,OAAOA,KAAjB;AAAmB,iBAAO6oC,GAAG7oC,GAAEujC,CAAC;AAAE,YAAIv9B,IAAE,OAAO,UAAU,SAAS,KAAKhG,CAAC,EAAE,MAAM,GAAE,EAAE;AAAE,eAAiBgG,MAAX,YAAchG,EAAE,gBAAcgG,IAAEhG,EAAE,YAAY,OAAcgG,MAAR,SAAmBA,MAAR,QAAU,MAAM,KAAKhG,CAAC,IAAgBgG,MAAd,eAAiB,2CAA2C,KAAKA,CAAC,IAAE6iC,GAAG7oC,GAAEujC,CAAC,IAAE;AAAA,MAAM;AAAA,IAAC;AAAC,aAASsF,GAAG7oC,GAAEujC,GAAE;AAAC,OAAOA,KAAN,QAASA,IAAEvjC,EAAE,YAAUujC,IAAEvjC,EAAE;AAAQ,eAAQgG,IAAE,GAAEsG,IAAE,IAAI,MAAMi3B,CAAC,GAAEv9B,IAAEu9B,GAAEv9B;AAAI,QAAAsG,EAAEtG,CAAC,IAAEhG,EAAEgG,CAAC;AAAE,aAAOsG;AAAA,IAAC;AAAC,aAASw8B,GAAG9oC,GAAEujC,GAAE;AAAC,UAAG,EAAEvjC,aAAaujC;AAAG,cAAM,IAAI,UAAU,mCAAmC;AAAA,IAAC;AAAC,aAASwF,GAAG/oC,GAAEujC,GAAE;AAAC,eAAQv9B,IAAE,GAAEA,IAAEu9B,EAAE,QAAOv9B,KAAI;AAAC,YAAIsG,IAAEi3B,EAAEv9B,CAAC;AAAE,QAAAsG,EAAE,aAAWA,EAAE,cAAY,IAAGA,EAAE,eAAa,IAAG,WAAUA,MAAIA,EAAE,WAAS,KAAI,OAAO,eAAetM,GAAEsM,EAAE,KAAIA,CAAC;AAAA,MAAC;AAAA,IAAC;AAAC,aAAS08B,GAAGhpC,GAAEujC,GAAEv9B,GAAE;AAAC,aAAOu9B,KAAGwF,GAAG/oC,EAAE,WAAUujC,CAAC,GAAEv9B,KAAG+iC,GAAG/oC,GAAEgG,CAAC,GAAEhG;AAAA,IAAC;AAAC,QAAIipC,KAAGN,MAAGA,GAAE,mBAAiB,SAAS3oC,GAAE;AAAC,aAAOA,KAAGA,EAAE,aAAWA,IAAE,EAAC,SAAQA,EAAC;AAAA,IAAC;AAAE,WAAO,eAAe2oC,IAAE,cAAa,EAAC,OAAM,GAAE,CAAC;AAAE,QAAIO,KAAGD,GAAG5C,CAAC,GAAE8C,KAAG,WAAU;AAAC,eAASnpC,EAAEujC,GAAE;AAAC,QAAAuF,GAAG,MAAK9oC,CAAC,GAAE,KAAK,YAAU,CAAA,GAAG,KAAK,qBAAmB,IAAG,KAAK,wBAAsB,IAAG,OAAO,OAAO,MAAKujC,CAAC,GAAE,KAAK,QAAM,CAAE,GAAC,KAAK,KAAI;AAAA,MAAE;AAAC,aAAOyF,GAAGhpC,GAAE,CAAC,EAAC,KAAI,QAAO,OAAM,WAAU;AAAC,YAAIA,IAAE;AAAK,aAAK,UAAU,QAAQ,SAASujC,GAAE;AAAC,UAAAvjC,EAAE,UAAUujC,CAAC,GAAEA,EAAE,QAAQ,QAAQ,SAASA,GAAE;AAAC,YAAAvjC,EAAE,eAAeujC,EAAE,UAASA,EAAE,MAAM;AAAA,UAAC,CAAC;AAAA,QAAC,CAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,SAASvjC,GAAE;AAAC,YAAIujC,IAAE;AAAK,QAAAvjC,EAAE,WAAW,QAAQ,SAASgG,GAAE;AAAC,cAAIsG,IAAE,SAAS,cAActG,EAAE,QAAQ;AAAE,cAAGwiC,GAAEl8B,CAAC,GAAE;AAAC,gBAAIm3B,IAAYn3B,EAAE,SAAZ,UAAiB,MAAM,KAAK,SAAS,iBAAiB,eAAgB,OAAOA,EAAE,MAAK,IAAK,CAAC,CAAC,IAAE,CAACA,CAAC;AAAE,YAAAi3B,EAAE,yBAAuBA,EAAE,gBAAgBvjC,CAAC;AAAE,gBAAIqX,IAAE6xB,GAAG,QAAQ3F,EAAE,gBAAgB,KAAKA,CAAC,GAAE,GAAG,GAAEv8B,IAAE,CAAC,SAAQ,UAAS,YAAW,UAAS,OAAM,QAAO,YAAW,KAAK;AAAE,YAAAy8B,EAAE,QAAQ,SAASz9B,GAAE;AAAC,cAAAA,EAAE,iBAAiB,SAAQ,WAAU;AAAC,gBAAAgB,EAAE,SAASsF,EAAE,IAAI,IAAE+K,EAAErX,CAAC,IAAEujC,EAAE,gBAAgBvjC,CAAC;AAAA,cAAC,CAAC;AAAA,YAAC,CAAC;AAAA,UAAC;AAAM,YAAAyoC,GAAEziC,EAAE,UAAS,gBAAgB;AAAA,QAAC,CAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,kBAAiB,OAAM,SAAShG,GAAEujC,GAAE;AAAC,YAAIv9B,IAAE;AAAK,YAAcu9B,MAAX,UAAa;AAAC,cAAIj3B,IAAE,SAAS,cAActM,CAAC;AAAE,UAAGsM,aAAa,cAAY,KAAK,WAAWA,CAAC,EAAE,QAAQ,SAAStM,GAAE;AAAC,gBAAIujC,IAAE,EAAC,SAAQvjC,GAAE,UAASA,EAAE,UAAS,UAASA,EAAE,SAAQ;AAAE,YAAKgG,EAAE,MAAM,UAAU,SAASu9B,GAAE;AAAC,qBAAOA,EAAE,YAAUvjC;AAAA,YAAC,CAAC,MAAxD,MAA2DgG,EAAE,MAAM,KAAKu9B,CAAC;AAAA,UAAC,CAAC,IAAOkF,GAAEzoC,GAAE,gBAAgB;AAAA,QAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,mBAAkB,OAAM,SAASA,GAAE;AAAC,YAAIujC,GAAEv9B,IAAE,MAAKsG,IAAEtM,EAAE,YAAWyjC,IAAEzjC,EAAE,UAASqX,IAAWosB,MAAT,SAAW,QAAMA,GAAEz8B,IAAEhH,EAAE,SAAQilC,IAAE,IAAGH,KAAEpiC,GAAG4J,CAAC;AAAE,YAAG;AAAC,eAAIw4B,GAAE,EAAC,GAAG,EAAEvB,IAAEuB,GAAE,EAAG,GAAE,QAAM;AAAC,gBAAIP,IAAEhB,EAAE,OAAMhZ,KAAE,SAAS,cAAcga,EAAE,QAAQ;AAAE,gBAAG,CAACiE,GAAEje,EAAC;AAAE,qBAAO,KAAKke,GAAElE,EAAE,UAAS,gBAAgB;AAAE,gBAAIQ,IAAE;AAAG,oBAAOxa,GAAE,MAAI;AAAA,cAAE,KAAI;AAAW,gBAAAwa,IAAEwD,GAAEhe,GAAE,OAAO;AAAE;AAAA,cAAM,KAAI;AAAQ,oBAAImZ,KAAE,SAAS,cAAc,eAAgB,OAAOnZ,GAAE,MAAK,YAAa,CAAC;AAAE,gBAAAmZ,cAAa,qBAAmBqB,IAAErB,GAAE;AAAO;AAAA,cAAM;AAAQ,gBAAAqB,IAAExa,GAAE;AAAA,YAAM;AAAC,gBAAIzkB,KAAEyiC,GAAEhE,EAAE,KAAK;AAAE,oBAAOA,EAAE,UAAU;AAAA,cAAA,KAAI;AAAQ,gBAAAU,IAAEF,MAAIj/B;AAAE;AAAA,cAAM,KAAI;AAAY,gBAAAm/B,IAAEF,MAAIj/B;AAAE;AAAA,cAAM,KAAI;AAAU,gBAAAm/B,IAAE,CAAC,CAACF,EAAE,SAASj/B,EAAC;AAAE;AAAA,cAAM,KAAI;AAAc,gBAAAm/B,IAAE,CAACF,EAAE,SAASj/B,EAAC;AAAE;AAAA,cAAM,KAAI;AAAU,gBAAAm/B,IAAE,CAACF,IAAE,CAACj/B;AAAE;AAAA,cAAM,KAAI;AAAgB,gBAAAm/B,IAAE,CAACF,KAAG,CAACj/B;AAAE;AAAA,cAAM,KAAI;AAAO,gBAAAm/B,IAAE,CAACF,IAAE,CAACj/B;AAAE;AAAA,cAAM,KAAI;AAAa,gBAAAm/B,IAAE,CAACF,KAAG,CAACj/B;AAAE;AAAA,cAAM,KAAI;AAAQ,gBAAAm/B,IAAMF,EAAE,WAAN;AAAa;AAAA,cAAM,KAAI;AAAS,gBAAAE,IAAEF,EAAE,SAAO;AAAE;AAAA,cAAM;AAAQ,gBAAA0D,GAAElE,EAAE,UAAS,gBAAgB;AAAA,YAAE;AAAwB,gBAAZltB,MAAR,SAAW,CAAC4tB,KAAkB5tB,MAAP,QAAU4tB;AAAE;AAAA,UAAK;AAAA,QAAC,SAAOxnB,IAAE;AAAC,UAAAqnB,GAAE,EAAErnB,EAAC;AAAA,QAAC,UAAC;AAAQ,UAAAqnB,GAAE,EAAC;AAAA,QAAE;AAAC,QAAAG,KAAGj+B,EAAE,QAAQ,SAAShH,IAAE;AAAC,UAAAgG,EAAE,cAAchG,EAAC;AAAA,QAAC,CAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,iBAAgB,OAAM,SAASA,GAAE;AAAC,YAAIujC,IAAE,MAAKv9B,IAAEhG,EAAE,UAASsM,IAAEtM,EAAE,QAAOyjC,IAAEzjC,EAAE,OAAMqX,IAAWosB,MAAT,UAAYA,GAAEz8B,IAAE,SAAS,cAAchB,CAAC;AAAE,YAAGgB,aAAa;AAAa,cAAcsF,MAAX,UAAa;AAAC,gBAAI24B,IAAE,KAAK,WAAWj+B,CAAC,GAAE89B,KAAE;AAAG,YAAAG,EAAE,QAAQ,SAASjlC,GAAE;AAAC,kBAAIyjC,KAAEF,EAAE,cAAcvjC,CAAC,GAAEilC,IAAExB,GAAE,UAASc,KAAEd,GAAE,UAASlZ,KAAEme,GAAG1oC,CAAC;AAAE,sBAAO8kC,OAAIA,KAAEvB,EAAE,mBAAmBv8B,GAAEsF,CAAC,IAAGA,GAAG;AAAA,gBAAA,KAAI;AAAO,kBAAAi3B,EAAE,UAAUvjC,GAAEgH,GAAE89B,IAAEG,GAAEV,EAAC;AAAE;AAAA,gBAAM,KAAI;AAAO,kBAAAhB,EAAE,UAAUvjC,GAAEgH,GAAE89B,EAAC;AAAE;AAAA,gBAAM,KAAI;AAAS,kBAAAvB,EAAE,YAAYvjC,GAAEuqB,EAAC;AAAE;AAAA,gBAAM,KAAI;AAAU,kBAAAgZ,EAAE,aAAavjC,GAAEuqB,EAAC;AAAE;AAAA,gBAAM,KAAI;AAAU,kBAAAgZ,EAAE,aAAavjC,GAAEuqB,EAAC;AAAE;AAAA,gBAAM,KAAI;AAAY,kBAAAgZ,EAAE,eAAevjC,GAAEuqB,EAAC;AAAE;AAAA,gBAAM;AAAQ,kBAAAke,GAAEziC,GAAE,cAAc;AAAA,cAAE;AAAC,cAAAqR,KAAGksB,EAAE,WAAWvjC,CAAC;AAAA,YAAC,CAAC;AAAA,UAAC;AAAM,iBAAK,mBAAmBgH,GAAEsF,CAAC;AAAA;AAAQ,UAAAm8B,GAAEziC,GAAE,gBAAgB;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,SAAShG,GAAEujC,GAAEv9B,GAAEsG,GAAEm3B,GAAE;AAAC,QAAAz9B,MAAIu9B,EAAE,MAAM,UAAQ,UAASvjC,EAAE,WAASsM,GAAEtM,EAAE,WAASyjC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,aAAY,OAAM,SAASzjC,GAAEujC,GAAEv9B,GAAE;AAAC,QAAAA,MAAIu9B,EAAE,MAAM,UAAQ,SAAQ,KAAK,uBAAqBvjC,EAAE,WAAS,KAAIA,EAAE,WAAS;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,eAAc,OAAM,SAASA,GAAEujC,GAAE;AAAC,QAAAA,MAAIvjC,EAAE,WAAS,KAAI,KAAK,iBAAiBA,GAAE,YAAW,EAAE;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,gBAAe,OAAM,SAASA,GAAEujC,GAAE;AAAC,QAAAA,MAAIvjC,EAAE,WAAS,KAAI,KAAK,iBAAiBA,GAAE,YAAW,EAAE;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,gBAAe,OAAM,SAASA,GAAEujC,GAAE;AAAC,QAAAA,MAAIvjC,EAAE,WAAS,KAAI,KAAK,iBAAiBA,GAAE,YAAW,EAAE;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,kBAAiB,OAAM,SAASA,GAAEujC,GAAE;AAAC,QAAAA,MAAIvjC,EAAE,WAAS,KAAI,KAAK,iBAAiBA,GAAE,YAAW,EAAE;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,cAAa,OAAM,SAASA,GAAE;AAAC,eAAOwoC,GAAExoC,CAAC,IAAE,CAACA,CAAC,IAAE,MAAM,KAAKA,EAAE,iBAAiB,yBAAyB,CAAC;AAAA,MAAC,EAAC,GAAE,EAAC,KAAI,sBAAqB,OAAM,SAASA,GAAEujC,GAAE;AAAC,YAAIv9B,IAAau9B,MAAX,WAAavjC,IAAEA,EAAE,cAAc,yBAA0B,OAAOujC,GAAE,IAAK,CAAC;AAAE,eAAOv9B,aAAa,gBAAcA,EAAE,MAAK,GAAG;AAAA,MAAG,EAAC,GAAE,EAAC,KAAI,cAAa,OAAM,SAAShG,GAAE;AAAC,QAAaA,EAAE,SAAf,cAA+BA,EAAE,SAAZ,UAAiBA,EAAE,UAAQ,KAAGA,EAAE,QAAM;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,oBAAmB,OAAM,SAASA,GAAEujC,GAAEv9B,GAAE;AAAC,YAAIsG,IAAE,KAAK,MAAM,UAAU,SAASi3B,GAAE;AAAC,iBAAOA,EAAE,YAAUvjC;AAAA,QAAC,CAAC;AAAE,QAAAsM,IAAE,OAAK,KAAK,MAAMA,CAAC,EAAEi3B,CAAC,IAAEv9B;AAAA,MAAE,EAAC,GAAE,EAAC,KAAI,iBAAgB,OAAM,SAAShG,GAAE;AAAC,eAAO,KAAK,MAAM,KAAK,SAASujC,GAAE;AAAC,iBAAOA,EAAE,YAAUvjC;AAAA,QAAC,CAAC;AAAA,MAAC,EAAC,CAAC,CAAC,GAAEA;AAAA,IAAC,EAAG,GAACopC,KAAGD;AAAG,IAAAR,GAAE,UAAQS;AAAG,QAAIC,KAAE,CAAA,GAAGC,KAAGD,MAAGA,GAAE,mBAAiB,SAAS3F,GAAE;AAAC,aAAOA,KAAGA,EAAE,aAAWA,IAAE,EAAC,SAAQA,EAAC;AAAA,IAAC;AAAE,WAAO,eAAe2F,IAAE,cAAa,EAAC,OAAM,GAAE,CAAC;AAAE,QAAIE,KAAGD,GAAGxD,CAAC,GAAE0D,KAAGF,GAAGX,EAAC;AAAE,IAAAU,KAAE,EAAC,KAAIE,GAAG,SAAQ,OAAMC,GAAG,QAAO,GAA6DC,EAAe,UAAAJ;AAAA,EAAkG,GAAC;;qBCIv2uBK,KAAU,OAAO,WAAW;AAChCA,GAAQ,KAAK,MAAM;AAClB,EAAAC;AACD,CAAC;AAED,SAASA,KAAwB;AAChC,QAAMC,IAAQ,SAAS,cAAc,yBAAyB,GAExDC,IAAOD,EAAM,cAAc,wBAAwB,GACnDE,IAAcF,EAAM,cAAc,gCAAgC,GAClEG,IAAYH,EAAM,cAAc,6BAA6B,GAE7DI,IAAUJ,EAAM,cAAc,2BAA2B,GACzDK,IAAaL,EAAM,cAAc,2BAA2B,GAC5DM,IAAmBN,EAAM,cAAc,0CAA0C,GAEjFO,IAAWP,EAAM,cAAc,4BAA4B,GAE3DQ,IAAe,2BACfC,IAAe,2BACfC,IAAe,2BACfC,IAAsB;AAE5B,EAAAC,GAAsBR,GAASC,CAAU;AAGzC,QAAMQ,IAAM,IAAIC,OAAQ;AAAA,IACvB,sBAAsB;AAAA;AAAA,IACtB,uBAAuB;AAAA,IACvB,cAAcN;AAAA,IACd,cAAcC;AAAA,IACd,cAAcC;AAAA,IACd,qBAAqBC;AAAA,EACvB,CAAE;AAED,EAAAI,GAAiBF,CAAG,GACpBG,GAAeH,GAAKV,CAAS,GAC7Bc,GAAqBJ,CAAG,GACxBK,GAAgBL,GAAKP,GAAkBL,GAAMM,CAAQ,GACrDY,GAAYN,CAAG,GACfO,GAAcP,GAAKb,CAAK;AAGxB,QAAMqB,IAAaR,EAAI,KAAK,MAAM;AAClC,EAAAX,EAAY,cAAcmB,GAG1B,OAAO,MAAMR,GAEbb,EAAM,gBAAgB,SAAS,GAE/Ba,EAAI,KAAK,cAAc,CAAC;AACzB;AAEA,SAASD,GAAsBR,GAASC,GAAY;AACnD,QAAMiB,IAAalB,EAAQ,cAAc,yBAAyB,GAC5DmB,IAAS,MAAM,KAAKlB,EAAW,iBAAiB,qCAAqC,CAAC;AAE5F,QAAM,KAAKiB,EAAW,iBAAiB,UAAU,CAAC,EAAE,QAAQ,CAACnrC,MAAOA,EAAG,OAAQ,CAAA,GAE/EorC,EAAO,QAAQ,CAACC,MAAU;AACzB,IAAAA,EAAM,UAAU,IAAI,SAAS,GAC7BF,EAAW,YAAYE,CAAK;AAAA,EAC9B,CAAE,GAEDnB,EAAW,OAAM,GAGjBP,GAAQ,QAAO,GACfA,GAAQ,MAAK,GACbA,GAAQ,QAAQ,KAAK,EAAE,KAAI,GAC3BA,GAAQ,QAAQ,QAAQ,EAAE,OAAM,GAChCA,GAAQ,QAAQ,QAAQ,EAAE,MAAK;AAChC;AAEA,SAASkB,GAAe,EAAE,MAAA/mC,GAAM,YAAAwnC,EAAU,GAAItB,GAAW;AACxD,EAAAlmC,EAAK,KAAK,iBAAiB,SAASynC,CAAiB,GACrDznC,EAAK,KAAK,iBAAiB,SAASynC,CAAiB,GACrDA;AAEA,WAASA,IAAoB;AAC5B,UAAMC,IAAcF,EAAW,cAAc,GACvCJ,IAAapnC,EAAK,MAAM,QACxBmW,IAAW,KAAK,IAAKuxB,IAAcN,IAAc,KAAK,GAAG;AAE/D,IAAAlB,EAAU,MAAM,QAAQ,GAAG/vB,CAAQ;AAAA,EACnC;AACF;AAEA,SAAS8wB,GAAgB,EAAE,MAAAjnC,GAAM,YAAAwnC,EAAY,GAAEG,GAAiBC,GAAKC,GAAS;AAC7E,EAAA7nC,EAAK,KAAK,iBAAiB,UAAU8nC,CAAc;AACnD,WAASA,IAAiB;AP/FpB,QAAAvD;AOkGL,UAAMwD,IAFS/nC,EAAK,UAAUwnC,EAAW,WAAW,EAExB,KAAK,CAAC3qC,MAC7BA,EAAM,UACFA,EAAM,cAAc,cAAc,kCAAkC,KAAK,OAEzE,EAER,GAEKmrC,IAAehoC,EAAK,MAAMwnC,EAAW,WAAW,GAChDS,KAAiC1D,IAAAyD,EAAa,gBAAb,gBAAAzD,EAA0B;AAAA,MAChE;AAAA;AAED,IAAIwD,KACH/nC,EAAK,KAAK,QAAQ,gBAAgB,IAC7BioC,MACJD,EAAa,mBAAmB,YAAYL,EAAgB,SAAS,GACrEK,EAAa,mBACX,cAAc,uCAAuC,EACrD,iBAAiB,SAAS,MAAMhoC,EAAK,KAAK,MAAO,CAAA,OAGpDA,EAAK,KAAK,QAAQ,gBAAgB,IAC9BioC,KACHD,EAAa,YAAY,WAI3BA,EAAa,QAAQ,eAAeD,GAEpClC,GAAQ,QAAQ,QAAQ,EAAE,OAAM,GAChCA,GAAQ,QAAQ,QAAQ,EAAE,MAAK;AAAA,EAC/B;AAGD,QAAMqC,IAAqBloC,EAAK,WAAW,KAAKA,CAAI;AACpD,EAAAA,EAAK,aAAa,MAAM;AAEvB,IADkBA,EAAK,MAAMA,EAAK,MAAM,SAAS,CAAC,EACpC,QAAQ,iBAAiB,UACtCA,EAAK,OAAM,GACXmoC,OAEAD;EAEH,GAECloC,EAAK,KAAK,iBAAiB,SAAS,MAAM;AAEzC,IADkBA,EAAK,MAAMwnC,EAAW,cAAc,CAAC,EACzC,QAAQ,iBAAiB,UACtCW;EAEH,CAAE,GAEDnoC,EAAK,KAAK,iBAAiB,SAAS,MAAM;AACzC,IAAAooC;EACF,CAAE;AAED,WAASD,IAAe;AACvB,IAAAnoC,EAAK,YAAY4nC,CAAG,GACpB5nC,EAAK,YAAY6nC,CAAO;AAAA,EACxB;AAED,WAASO,IAAe;AACvB,IAAApoC,EAAK,YAAY4nC,CAAG,GACpB5nC,EAAK,YAAY6nC,CAAO;AAAA,EACxB;AACF;AAEA,SAASf,GAAiB,EAAE,MAAA9mC,KAAQ;AAEnC,EAAAA,EAAK,cAAcA,EAAK,IAAI,GAE5BA,EAAK,iBAAiB,CAAC9D,MAAO;AAC7B,IAAKA,KACLA,EAAG,UAAU,IAAI,UAAU;AAAA,EAC7B,GAEC8D,EAAK,gBAAgB,CAAC9D,MAAO;AAC5B,IAAKA,KACLA,EAAG,UAAU,OAAO,UAAU;AAAA,EAChC,GAEC8D,EAAK,eAAeA,EAAK,IAAI;AAC9B;AAEA,SAASgnC,GAAqBJ,GAAK;AACrB,EAAAA,EAAI;AACjB,QAAMY,IAAaZ,EAAI,YAGjByB,IAA8Bb,EAAW,oBAAoB,KAAKA,CAAU;AAElF,WAASc,IAAyB;AACjC,SAAK,uBAAuB;AAE5B,UAAMtJ,IAAS,KAAK,KAAK,UAAU,KAAK,WAAW;AAEnD,eAAWniC,KAASmiC;AAGnB,UAAI,CAFYniC,EAAM;AAGrB,oBAAK,uBAAuB,IACrB;AAKT,WAAOwrC,EAA2B;AAAA,EAClC;AAGD,EAAAb,EAAW,sBAAsBc,EAAuB,KAAKd,CAAU;AACxE;AAEA,SAASN,GAAYN,GAAK;AACzB,QAAM5mC,IAAO4mC,EAAI,MACXY,IAAaZ,EAAI,YAGjB2B,IAAavoC,EAAK,KAAK,QAAQ,gBAAgB,GAC/CwoC,IAAQxoC,EAAK,MACbyoC,IAAQzoC,EAAK,MAEbk+B,IAAY,IAAIjiC,GAAUssC,CAAU;AAC1C,EAAArK,EAAU,UAAU,CAACjhC,MAAU;AAE9B,IAAIA,MAAU,cACb+C,EAAK,YAAYwoC,CAAK,GACtBxoC,EAAK,YAAYyoC,CAAK;AAAA,EAEzB,GAGCjB,EAAW,kBAAiB,GAE5BA,EAAW,eAAe,MAAM;AAE/B,IAAAA,EAAW,cAAc,KAAK,IAAIA,EAAW,aAAaxnC,EAAK,MAAM,SAAS,CAAC;AAAA,EACjF;AACA;AAEA,SAASmnC,GAAcP,GAAKb,GAAO;AACf,MAAI9H,GAAW8H,CAAK;AAEvC,QAAM/lC,IAAO4mC,EAAI,MACXY,IAAaZ,EAAI;AAGvB,EAAA5mC,EAAK,KAAK,iBAAiB,wBAAwB,MAAM;AACxD,eAAW,MAAMA,EAAK,cAAcwnC,EAAW,WAAW,GAAG,GAAG;AAAA,EAClE,CAAE;AACF;","x_google_ignoreList":[1,2,3,6]}