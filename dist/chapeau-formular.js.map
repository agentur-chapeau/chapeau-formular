{"version":3,"file":"chapeau-formular.js","sources":["../src/conversion.js","../node_modules/advanced-webflow-forms/dist/awf.js","../../chapeaujs/src/async_form.js","../../chapeaujs/src/main.js","../../chapeaujs/node_modules/filepond/dist/filepond.esm.js","../../chapeaujs/node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.esm.js","../../chapeaujs/node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.esm.js","../../chapeaujs/src/fileupload.js","../src/chapeau_form.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n\tif (window.location.search) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\n\t\tconst gclid = params.get(\"gclid\");\n\t\tif (gclid) {\n\t\t\twindow.localStorage.setItem(\"gclid\", gclid);\n\t\t}\n\n\t\tconst fbclid = params.get(\"fbclid\");\n\t\tif (fbclid) {\n\t\t\tconst fbc = `fb.1.${Date.now()}.${fbclid}`;\n\t\t\twindow.localStorage.setItem(\"fbc\", fbc);\n\t\t}\n\n\t\tconst ttclid = params.get(\"ttclid\");\n\t\tif (ttclid) {\n\t\t\twindow.localStorage.setItem(\"ttclid\", ttclid);\n\t\t}\n\t}\n\n\tconst forms = Array.from(document.querySelectorAll(\"[c-conversion] > form\"));\n\tforms.forEach((form) => {\n\t\t// Create hidden input for each and store it in object\n\t\tconst inputs = [\"gclid\", \"fbc\", \"fbp\", \"user-agent\", \"ttclid\", \"url\"].reduce((obj, name) => {\n\t\t\tconst input = document.createElement(\"input\");\n\t\t\tinput.type = \"hidden\";\n\t\t\tinput.name = name;\n\t\t\tform.appendChild(input);\n\n\t\t\treturn {\n\t\t\t\t...obj,\n\t\t\t\t[name]: input,\n\t\t\t};\n\t\t}, {});\n\n\t\tform.addEventListener(\"submit\", () => {\n\t\t\tconst conversionIds = getConversionIDs();\n\n\t\t\tinputs.gclid.value = conversionIds.gclid;\n\t\t\tinputs.fbc.value = conversionIds.fbc;\n\t\t\tinputs.fbp.value = conversionIds.fbp;\n\t\t\tinputs[\"user-agent\"].value = conversionIds.useragent;\n\t\t\tinputs.ttclid.value = conversionIds.ttclid;\n\t\t\tinputs.url.value = conversionIds.url;\n\n\t\t\t// Tracking Events\n\t\t\tif (window.fbq !== undefined) {\n\t\t\t\tfbq(\"track\", \"SubmitApplication\", {}, { eventID: conversionIds.fbp });\n\t\t\t}\n\t\t});\n\t});\n\n\tconst trackElements = Array.from(document.querySelectorAll(\"[data-fb-track]\"));\n\ttrackElements.forEach((el) => {\n\t\tel.addEventListener(\"click\", () => {\n\t\t\tconst isDisabled = el.dataset.trackDisabled === \"true\";\n\t\t\tif (isDisabled) return;\n\n\t\t\tconst event = el.dataset.fbTrack;\n\t\t\tconst conversionIds = getConversionIDs();\n\t\t\tconst url = el.dataset.trackUrl;\n\n\t\t\tif (window.fbq !== undefined) {\n\t\t\t\tfbq(\"track\", event, {}, { eventID: conversionIds.fbp });\n\t\t\t}\n\n\t\t\tfetch(url, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tevent,\n\t\t\t\t\t...conversionIds,\n\t\t\t\t}),\n\t\t\t});\n\t\t});\n\t});\n\n\tfunction getConversionIDs() {\n\t\tconst gclid = window.localStorage.getItem(\"gclid\");\n\t\tconst fbc = window.localStorage.getItem(\"fbc\");\n\t\tconst fbp = getCookie(\"_fbp\");\n\t\tconst useragent = navigator.userAgent;\n\t\tconst ttclid = window.localStorage.getItem(\"ttclid\");\n\t\tconst url = window.location.href;\n\n\t\treturn {\n\t\t\tgclid,\n\t\t\tfbc,\n\t\t\tfbp,\n\t\t\tuseragent,\n\t\t\tttclid,\n\t\t\turl,\n\t\t};\n\t}\n\n\tfunction getCookie(name) {\n\t\tconst value = `; ${document.cookie}`;\n\t\tconst parts = value.split(`; ${name}=`);\n\t\tif (parts.length === 2) return parts.pop().split(\";\").shift();\n\t\telse return null;\n\t}\n});\n","(function () {function oa(a){Object.defineProperty(a,\"__esModule\",{value:true})}var M=this;var j={};function pa(e,t){var r;if(\"undefined\"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=qa(e))||t&&e&&\"number\"==typeof e.length){r&&(e=r);var o=0,n=function(){};return{s:n,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:n}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var $,l=!0,i=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return l=e.done,e},e:function(e){i=!0,$=e},f:function(){try{l||null==r.return||r.return()}finally{if(i)throw $}}}}function qa(e,t){if(e){if(\"string\"==typeof e)return ca(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ca(e,t):void 0}}function ca(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,o=new Array(t);r<t;r++)o[r]=e[r];return o}Object.defineProperty(j,\"__esModule\",{value:!0});var G=(N=void 0,R=j.isFormElement=N,U=j.isVisible=R,V=j.getDistanceFromTop=U,O=j.convertToString=V,j.validateEmail=O);j.findTextNode=G;var N=function(e){return e instanceof HTMLInputElement||e instanceof HTMLSelectElement||e instanceof HTMLTextAreaElement};j.isFormElement=N;var R=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)};j.isVisible=R;var U=function(e){var t=e,r=0;if(t.offsetParent)do{r+=t.offsetTop,t=t.offsetParent instanceof HTMLElement?t.offsetParent:null}while(t);return r>=0?r:0};j.getDistanceFromTop=U;var V=function(e){return\"string\"==typeof e?e:\"number\"==typeof e?e.toString():e?\"true\":\"false\"};j.convertToString=V;var O=function(e){return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase())};j.validateEmail=O,G=function(e){var t,r,o=pa(e.childNodes);try{for(o.s();!(r=o.n()).done;){var n=r.value;if(n.childNodes.length&&(t=G(n)),n.nodeType==Node.TEXT_NODE&&(t=n),t)break}}catch($){o.e($)}finally{o.f()}return t},j.findTextNode=G;var X={};function ra(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function da(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function sa(e,t,i){return t&&da(e.prototype,t),i&&da(e,i),e}Object.defineProperty(X,\"__esModule\",{value:!0});var ta=function(){function e(t){ra(this,e),this.view=t,this.currentStep=0,this.alertShown=!1,this.view=t,this.init()}return sa(e,[{key:\"init\",value:function(){this.view.setMaskHeight(this.currentStep),this.view.disableElement(this.view.back),this.view.setButtonText(this.currentStep),this.view.setStepsDisplay(this.currentStep),this.view.createHiddenForm(),this.setAlert(),this.setEvents()}},{key:\"setEvents\",value:function(){var e=this,t=function(t){e.navClick(t)},i=function(t){e.handleInput(t)};this.view.next.addEventListener(\"click\",function(){e.nextClick()}),this.view.back&&this.view.back.addEventListener(\"click\",function(){e.backClick()}),this.view.navLinks.forEach(function(e){e.addEventListener(\"click\",t)}),this.view.inputs.forEach(function(e){e.addEventListener(\"input\",i)}),this.view.form.addEventListener(\"submit\",function(t){e.handleSubmit()}),this.view.sendHiddenForm&&this.view.rightArrow.addEventListener(\"click\",function t(){e.currentStep===e.view.hiddenFormStep&&(e.view.submitHiddenForm(),e.view.rightArrow.removeEventListener(\"click\",t))})}},{key:\"nextClick\",value:function(){this.checkRequiredInputs()?(this.currentStep++,1===this.currentStep&&this.view.enableElement(this.view.back),this.currentStep===this.view.steps.length?this.view.submitForm():(this.view.goNext(),this.view.setMaskHeight(this.currentStep),this.view.setButtonText(this.currentStep),this.view.setStepsDisplay(this.currentStep)),this.hideAlert(),this.view.scrollTop()):this.showAlert()}},{key:\"backClick\",value:function(){var e=this.currentStep-1;e<0||(this.view.goBack(),this.view.setMaskHeight(e),this.view.setButtonText(e),this.view.setStepsDisplay(e),this.hideAlert(),this.view.scrollTop(),this.currentStep=e,0===this.currentStep&&this.view.disableElement(this.view.back))}},{key:\"navClick\",value:function(e){var t=e.currentTarget;if(t instanceof HTMLElement){var i=+t.dataset.msfNav-1;i<this.currentStep&&(this.view.sliderDots[i].click(),this.currentStep=i,this.view.setMaskHeight(this.currentStep),this.view.setButtonText(this.currentStep),0===this.currentStep&&this.view.disableElement(this.view.back))}}},{key:\"handleInput\",value:function(e){var t=e.currentTarget;if(N(t)){var i=\"-\";switch(t.type){case\"checkbox\":if(!(t instanceof HTMLInputElement))break;i=t.checked;var r=t.parentElement;if(!r)break;var n=r.querySelector(\".w-checkbox-input\");t.checked&&n&&this.view.removeWarningClass(n);break;case\"radio\":var s=this.view.form.querySelector(\"input[name=\\\"\".concat(t.name,\"\\\"]:checked\"));if(!(s instanceof HTMLInputElement))break;i=s.value;var a=t.parentElement;if(!a)break;var v=a.querySelector(\".w-radio-input\");v&&this.view.removeWarningClass(v);break;default:if(!t.value)break;if(\"email\"===t.type&&!O(t.value))break;i=t.value,this.view.removeWarningClass(t);}this.view.setValues(t,i)}}},{key:\"checkRequiredInputs\",value:function(){var e=this,t=this.view.getInputs(this.currentStep).filter(function(e){return e.required&&R(e)}),i=0;return t.forEach(function(t){switch(t.type){case\"checkbox\":if(t.checkValidity()){i++;break}var r=t.parentElement;if(!r)break;var n=r.querySelector(\".w-checkbox-input\");n&&e.view.addWarningClass(n);break;case\"radio\":if(t.checkValidity()){i++;break}var s=t.parentElement;if(!s)break;var a=s.querySelector(\".w-radio-input\");a&&e.view.addWarningClass(a);break;default:if(!t.checkValidity()||\"email\"===t.type&&!O(t.value)){e.view.addWarningClass(t);break}i++;}}),i===t.length}},{key:\"setAlert\",value:function(){this.view.alertInteraction||this.view.hideElement(this.view.alert,!0)}},{key:\"showAlert\",value:function(){this.alertShown||(this.view.showAlert(),this.alertShown=!0)}},{key:\"hideAlert\",value:function(){this.alertShown&&(this.view.hideAlert(),this.alertShown=!1)}},{key:\"observeSubmitText\",value:function(){var e=this,t=this.view.submitButton;new MutationObserver(function(i){i.forEach(function(i){\"attributes\"===i.type&&\"value\"===i.attributeName&&(e.view.next.textContent=t.value)})}).observe(this.view.submitButton,{attributes:!0})}},{key:\"handleSubmit\",value:function(){this.view.disableButtons(),this.view.hideButtons()}}]),e}(),ua=ta;X.default=ua;var Y={};function va(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function ea(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function wa(e,t,i){return t&&ea(e.prototype,t),i&&ea(e,i),e}Object.defineProperty(Y,\"__esModule\",{value:!0});var xa=function(){function e(t){var i,n=t.alertSelector,r=t.alertText,o=t.backSelector,s=t.backText,a=t.completedPercentageSelector,l=t.currentStepSelector,c=t.formSelector,d=t.hiddeButtonsOnSubmit,h=void 0===d||d,u=t.hiddenFormStep,f=void 0===u?1:u,m=t.nextSelector,y=t.nextText,v=t.scrollTopOnStepChange,p=void 0!==v&&v,w=t.sendHiddenForm,b=void 0!==w&&w,$=t.warningClass;va(this,e);var E=document.querySelector(c);if(!E)throw new Error(\"No form was found with the selector \".concat(c));this.form=E;var k=document.querySelector(m);if(!k)throw new Error(\"No next button was found with the selector \".concat(m));if(this.next=k,o){var x=document.querySelector(o);if(!x)throw new Error(\"No back button was found with the selector \".concat(o));this.back=x}if(n){var S=document.querySelector(n);if(!S)throw new Error(\"No alert element was found with the selector \".concat(n));this.alert=S}var g=E.querySelector(\"input[type=\\\"submit\\\"]\");if(!g)throw new Error(\"No next button was found with the selector \".concat(m));if(this.submitButton=g,l){var H=document.querySelector(l);if(!H)throw new Error(\"No current step display element was found with the selector \".concat(l));this.currentStepDisplay=H}if(a){var q=document.querySelector(a);if(!q)throw new Error(\"No completed percentage display element was found with the selector \".concat(a));this.completedPercentageDisplay=q}var T=E.querySelector(\".w-slider\");if(!T)throw new Error(\"No slider found inside the form, please add one.\");this.slider=T;var C=T.querySelector(\".w-slider-mask\");if(!C)throw new Error(\"No mask found inside the slider!\");this.mask=C,this.steps=T.querySelectorAll(\".w-slide\");var F=T.querySelector(\".w-slider-arrow-right\");if(!F)throw new Error(\"No right arrow found inside the slider!\");this.rightArrow=F;var A=T.querySelector(\".w-slider-arrow-left\");if(!A)throw new Error(\"No left arrow found inside the slider!\");this.leftArrow=A,this.sliderDots=T.querySelectorAll(\".w-slider-dot\"),this.navLinks=document.querySelectorAll(\"[data-msf-nav]\"),this.nextText=y||this.next.textContent||\"Next\",this.backText=s,this.submitText=this.submitButton.value,this.warningClass=$,this.alertText=r,this.alertInteraction=null===(i=this.alert)||void 0===i?void 0:i.querySelector(\"[data-msf=\\\"alert\\\"]\"),this.scrollTopOnStepChange=p,this.hiddeButtonsOnSubmit=h,this.sendHiddenForm=b,this.hiddenFormStep=f>=1?f:1,this.inputs=this.getInputs()}return wa(e,[{key:\"setMaskHeight\",value:function(e){this.mask.style.height=\"\",this.mask.style.height=\"\".concat(this.steps[e].offsetHeight,\"px\")}},{key:\"getInputs\",value:function(e){var t=\"number\"==typeof e?this.steps[e].querySelectorAll(\"input, select, textarea\"):this.form.querySelectorAll(\"input, select, textarea\");return Array.from(t)}},{key:\"setButtonText\",value:function(e){var t=this,i=function(i){var n=\"back\"===i?t.back:t.next;if(n){var r=G(n),o=\"back\"===i?t.backText:t.nextText;if(r&&Array.isArray(o)&&o.length>0)for(var s=function(t){var i=o.findIndex(function(i){return+i.step-1==e-t});if(i>=0)return r.textContent=o[i].text,\"break\"},a=0;a<=e;a++){if(\"break\"===s(a))break}}};i(\"back\");var n=G(this.next);n&&e===this.steps.length-1?n.textContent=this.submitText:n&&\"string\"==typeof this.nextText&&e===this.steps.length-2?n.textContent=this.nextText:i(\"next\")}},{key:\"goNext\",value:function(){this.rightArrow.click()}},{key:\"goBack\",value:function(){this.leftArrow.click()}},{key:\"submitForm\",value:function(){this.submitButton.click()}},{key:\"submitHiddenForm\",value:function(){this.sendHiddenForm&&this.hiddenSubmitButton.click()}},{key:\"addWarningClass\",value:function(e){this.warningClass&&e.classList.add(this.warningClass)}},{key:\"removeWarningClass\",value:function(e){this.warningClass&&e.classList.remove(this.warningClass)}},{key:\"hideElement\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(e){var i=getComputedStyle(e);if(\"all 0s ease 0s\"===i.transition&&(e.style.transition=\"opacity 0.2s ease\"),t&&\"none\"!==i.display){e.addEventListener(\"transitionend\",function t(){e.style.display=\"none\",e.removeEventListener(\"transitionend\",t)})}e.style.opacity=\"0\",this.disableElement(e)}}},{key:\"showElement\",value:function(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];e&&(i&&(e.style.display=\"block\"),requestAnimationFrame(function(){e.style.opacity=\"\",t.enableElement(e)}))}},{key:\"disableElement\",value:function(e){e&&(e.style.pointerEvents=\"none\")}},{key:\"enableElement\",value:function(e){e&&(e.style.pointerEvents=\"\")}},{key:\"disableButtons\",value:function(){var e=this;this.disableElement(this.next),this.disableElement(this.back),this.navLinks.forEach(function(t){return e.disableElement(t)})}},{key:\"hideButtons\",value:function(){this.hiddeButtonsOnSubmit&&(this.hideElement(this.next),this.back&&this.hideElement(this.back))}},{key:\"showAlert\",value:function(){this.alertText&&alert(this.alertText),this.alert&&(this.alertInteraction?this.alertInteraction.click():this.showElement(this.alert,!0))}},{key:\"hideAlert\",value:function(){this.alert&&(this.alertInteraction?this.alertInteraction.click():this.hideElement(this.alert,!0))}},{key:\"scrollTop\",value:function(){this.scrollTopOnStepChange&&window.scrollTo({top:U(this.form),behavior:\"smooth\"})}},{key:\"setValues\",value:function(e,t){t=V(t);var i=document.querySelector(\"[data-msf-value=\\\"\".concat(e.id,\"\\\"]\"))||document.querySelector(\"[data-msf-value=\\\"\".concat(e.name,\"\\\"]\"));if(i&&(i.textContent=t),e.matches(\"[data-msf=\\\"hidden\\\"]\")){var n=this.hiddenForm.querySelector(\"#hidden-\".concat(e.id));n instanceof HTMLInputElement&&(n.value=t)}}},{key:\"setStepsDisplay\",value:function(e){this.currentStepDisplay&&(this.currentStepDisplay.textContent=(e+1).toString()),this.completedPercentageDisplay&&(this.completedPercentageDisplay.textContent=\"\".concat(Math.round(e/(this.steps.length-1)*100),\"%\"))}},{key:\"createHiddenForm\",value:function(){var e,t=this;if(this.sendHiddenForm){var i=this.form.parentElement;if(i)i.insertAdjacentHTML(\"afterend\",\"\\n    <div class=\\\"w-form\\\" style=\\\"display: none;\\\">\\n        <form id=\\\"msf-hidden-form\\\" name=\\\"MSF Hidden Form\\\" data-name=\\\"MSF Hidden Form\\\">\\n            <input type=\\\"submit\\\" value=\\\"Submit\\\" data-wait=\\\"Please wait...\\\" />\\n        </form>\\n    </div>\\n    \"),this.hiddenForm=i.parentElement?i.parentElement.querySelector(\"#msf-hidden-form\"):document.querySelector(\"#msf-hidden-form\"),this.hiddenSubmitButton=this.hiddenForm.querySelector(\"input[type=\\\"submit\\\"]\"),this.form.querySelectorAll(\"[data-msf=\\\"hidden\\\"]\").forEach(function(e){var i=N(e)?e:e.querySelector(\"input, select, textarea\");if(i&&!t.hiddenForm.querySelector(\"#hidden-\".concat(e.id))){var n=\"<input type=\\\"hidden\\\" id=\\\"hidden-\".concat(i.id,\"\\\" name=\\\"\").concat(i.name,\"\\\" data-name=\\\"\").concat(i.name,\"\\\" />\");t.hiddenForm.insertAdjacentHTML(\"beforeend\",n)}}),window.Webflow&&window.Webflow.destroy(),window.Webflow&&window.Webflow.ready(),window.Webflow&&(null===(e=window.Webflow.require(\"ix2\"))||void 0===e||e.init())}}}]),e}(),ya=xa;Y.default=ya;var I={};function za($,e){if(!($ instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var fa=I&&I.__importDefault||function($){return $&&$.__esModule?$:{default:$}};Object.defineProperty(I,\"__esModule\",{value:!0});var Aa=fa(X),Ba=fa(Y),Ca=function $(e){za(this,$),this.view=new Ba.default(e),this.controller=new Aa.default(this.view)},Da=Ca;I.default=Da;var Z={};oa(Z);function _(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)}var Ea=\"object\"==typeof M&&M&&M.Object===Object&&M;var Fa=\"object\"==typeof self&&self&&self.Object===Object&&self,ga=Ea||Fa||Function(\"return this\")();var aa=function(){return ga.Date.now()};var Ga=/\\s/;function Ha(t){for(var e=t.length;e--&&Ga.test(t.charAt(e)););return e}var Ia=/^\\s+/;function Ja(r){return r?r.slice(0,Ha(r)+1).replace(Ia,\"\"):r}var P=ga.Symbol;var ha=Object.prototype,Ka=ha.hasOwnProperty,La=ha.toString,J=P?P.toStringTag:void 0;function Ma($){var r=Ka.call($,J),t=$[J];try{$[J]=void 0;var n=!0}catch(o){}var a=La.call($);return n&&(r?$[J]=t:delete $[J]),a}var Na=Object.prototype,Oa=Na.toString;function Pa(t){return Oa.call(t)}var Qa=\"[object Null]\",Ra=\"[object Undefined]\",ia=P?P.toStringTag:void 0;function Sa($){return null==$?void 0===$?Ra:Qa:ia&&ia in Object($)?Ma($):Pa($)}function Ta(t){return null!=t&&\"object\"==typeof t}var Ua=\"[object Symbol]\";function Va($){return\"symbol\"==typeof $||Ta($)&&Sa($)==Ua}var ja=NaN,Wa=/^[-+]0x[0-9a-f]+$/i,Xa=/^0b[01]+$/i,Ya=/^0o[0-7]+$/i,Za=parseInt;function ka($){if(\"number\"==typeof $)return $;if(Va($))return ja;if(_($)){var r=\"function\"==typeof $.valueOf?$.valueOf():$;$=_(r)?r+\"\":r}if(\"string\"!=typeof $)return 0===$?$:+$;$=Ja($);var e=Xa.test($);return e||Ya.test($)?Za($.slice(2),e?2:8):Wa.test($)?ja:+$}var $a=\"Expected a function\",_a=Math.max,ab=Math.min;function bb(o,r,t){var i,e,n,$,a,u,v=0,c=!1,f=!1,y=!0;if(\"function\"!=typeof o)throw new TypeError($a);function W(r){var t=i,n=e;return i=e=void 0,v=r,$=o.apply(n,t)}function m(o){var t=o-u;return void 0===u||t>=r||t<0||f&&o-v>=n}function A(){var o=aa();if(m(o))return p(o);a=setTimeout(A,function(o){var t=r-(o-u);return f?ab(t,n-(o-v)):t}(o))}function p(o){return a=void 0,y&&i?W(o):(i=e=void 0,$)}function d(){var o=aa(),t=m(o);if(i=arguments,e=this,u=o,t){if(void 0===a)return function(o){return v=o,a=setTimeout(A,r),c?W(o):$}(u);if(f)return clearTimeout(a),a=setTimeout(A,r),W(u)}return void 0===a&&(a=setTimeout(A,r)),$}return r=ka(r)||0,_(t)&&(c=!!t.leading,n=(f=\"maxWait\"in t)?_a(ka(t.maxWait)||0,r):n,y=\"trailing\"in t?!!t.trailing:y),d.cancel=function(){void 0!==a&&clearTimeout(a),v=0,i=u=e=a=void 0},d.flush=function(){return void 0===a?$:p(aa())},d}Z.default=bb;var z={};Object.defineProperty(z,\"__esModule\",{value:!0});var Q=(K=void 0,B=z.isFormElement=K,ba=z.throwError=B,z.isVisible=ba);z.convertToString=Q;var K=function(e){return e instanceof HTMLInputElement||e instanceof HTMLSelectElement||e instanceof HTMLTextAreaElement};z.isFormElement=K;var B=function(e,r){switch(r){case\"wrong-selector\":throw new Error(\"The element with a selector \".concat(e,\" has not been found. Please, check if you've set it correctly.\"));case\"no-parent\":throw new Error(\"The element with a selector \".concat(e,\" hasn't got any parent with the [data-logic=\\\"parent\\\"] attibute.\"));case\"wrong-action\":throw new Error(\"No action (or wrong action name) has been provided for the \".concat(e,\" selector.\"));case\"wrong-operator\":throw new Error(\"The operator of the selector \".concat(e,\" is not valid.\"));}};z.throwError=B;var ba=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)};z.isVisible=ba,Q=function(e){return\"string\"==typeof e?e:\"number\"==typeof e?e.toString():e?\"true\":\"false\"},z.convertToString=Q;var L={};function cb(e,r){var t;if(\"undefined\"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(t=db(e))||r&&e&&\"number\"==typeof e.length){t&&(e=t);var a=0,n=function(){};return{s:n,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:n}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var i,o=!0,u=!1;return{s:function(){t=e[Symbol.iterator]()},n:function(){var e=t.next();return o=e.done,e},e:function(e){u=!0,i=e},f:function(){try{o||null==t.return||t.return()}finally{if(u)throw i}}}}function db(e,r){if(e){if(\"string\"==typeof e)return la(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===t&&e.constructor&&(t=e.constructor.name),\"Map\"===t||\"Set\"===t?Array.from(e):\"Arguments\"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?la(e,r):void 0}}function la(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,a=new Array(r);t<r;t++)a[t]=e[t];return a}function eb(e,r){if(!(e instanceof r))throw new TypeError(\"Cannot call a class as a function\")}function ma(e,r){for(var t=0;t<r.length;t++){var a=r[t];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function fb(e,r,t){return r&&ma(e.prototype,r),t&&ma(e,t),e}var gb=L&&L.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(L,\"__esModule\",{value:!0});var hb=gb(Z),ib=function(){function e(r){eb(this,e),this.logicList=[],this.submitHiddenInputs=!1,this.checkConditionsOnLoad=!0,Object.assign(this,r),this.store=[],this.init()}return fb(e,[{key:\"init\",value:function(){var e=this;this.logicList.forEach(function(r){e.addEvents(r),r.actions.forEach(function(r){e.storeInputData(r.selector,r.action)})})}},{key:\"addEvents\",value:function(e){var r=this;e.conditions.forEach(function(t){var a=document.querySelector(t.selector);if(K(a)){var n=\"radio\"===a.type?Array.from(document.querySelectorAll(\"input[name=\\\"\".concat(a.name,\"\\\"]\"))):[a];r.checkConditionsOnLoad&&r.checkConditions(e);var i=hb.default(r.checkConditions.bind(r),200),o=[\"email\",\"number\",\"password\",\"search\",\"tel\",\"text\",\"textarea\",\"url\"];n.forEach(function(t){t.addEventListener(\"input\",function(){o.includes(a.type)?i(e):r.checkConditions(e)})})}else B(t.selector,\"wrong-selector\")})}},{key:\"storeInputData\",value:function(e,r){var t=this;if(\"custom\"!==r){var a=document.querySelector(e);if(a instanceof HTMLElement)this.getTargets(a).forEach(function(e){var r={element:e,required:e.required,disabled:e.disabled};-1===t.store.findIndex(function(r){return r.element===e})&&t.store.push(r)});else B(e,\"wrong-selector\")}}},{key:\"checkConditions\",value:function(e){var r,t=this,a=e.conditions,n=e.operator,i=void 0===n?\"and\":n,o=e.actions,u=!1,c=cb(a);try{for(c.s();!(r=c.n()).done;){var s=r.value,l=document.querySelector(s.selector);if(!K(l))return void B(s.selector,\"wrong-selector\");var d=\"\";switch(l.type){case\"checkbox\":d=Q(l.checked);break;case\"radio\":var $=document.querySelector(\"input[name=\\\"\".concat(l.name,\"\\\"]:checked\"));$ instanceof HTMLInputElement&&(d=$.value);break;default:d=l.value;}var f=Q(s.value);switch(s.operator){case\"equal\":u=d===f;break;case\"not-equal\":u=d!==f;break;case\"contain\":u=!!d.includes(f);break;case\"not-contain\":u=!d.includes(f);break;case\"greater\":u=+d>+f;break;case\"greater-equal\":u=+d>=+f;break;case\"less\":u=+d<+f;break;case\"less-equal\":u=+d<=+f;break;case\"empty\":u=0===d.length;break;case\"filled\":u=d.length>0;break;default:B(s.selector,\"wrong-operator\");}if(\"and\"===i&&!u)break;if(\"or\"===i&&u)break}}catch(v){c.e(v)}finally{c.f()}u&&o.forEach(function(e){t.triggerAction(e)})}},{key:\"triggerAction\",value:function(e){var r=this,t=e.selector,a=e.action,n=e.clear,i=void 0!==n&&n,o=document.querySelector(t);if(o instanceof HTMLElement){if(\"custom\"!==a){var u=this.getTargets(o),c=!1;u.forEach(function(e){var n=r.getStoredData(e),u=n.required,s=n.disabled,l=ba(e);switch(c||(c=r.triggerInteraction(o,a)),a){case\"show\":r.showInput(e,o,c,u,s);break;case\"hide\":r.hideInput(e,o,c);break;case\"enable\":r.enableInput(e,l);break;case\"disable\":r.disableInput(e,l);break;case\"require\":r.requireInput(e,l);break;case\"unrequire\":r.unrequireInput(e,l);break;default:B(t,\"wrong-action\");}i&&r.clearInput(e)})}else this.triggerInteraction(o,a);}else B(t,\"wrong-selector\")}},{key:\"showInput\",value:function(e,r,t,a,n){t||(r.style.display=\"block\"),e.required=a,e.disabled=n}},{key:\"hideInput\",value:function(e,r,t){t||(r.style.display=\"none\"),this.submitHiddenInputs||(e.disabled=!0),e.required=!1}},{key:\"enableInput\",value:function(e,r){r&&(e.disabled=!1),this.updateStoredData(e,\"disabled\",!1)}},{key:\"disableInput\",value:function(e,r){r&&(e.disabled=!0),this.updateStoredData(e,\"disabled\",!0)}},{key:\"requireInput\",value:function(e,r){r&&(e.required=!0),this.updateStoredData(e,\"required\",!0)}},{key:\"unrequireInput\",value:function(e,r){r&&(e.required=!1),this.updateStoredData(e,\"required\",!1)}},{key:\"getTargets\",value:function(e){return K(e)?[e]:Array.from(e.querySelectorAll(\"input, select, textarea\"))}},{key:\"triggerInteraction\",value:function(e,r){var t=\"custom\"===r?e:e.querySelector(\":scope > [data-logic=\\\"\".concat(r,\"\\\"]\"));return t instanceof HTMLElement&&(t.click(),!0)}},{key:\"clearInput\",value:function(e){\"checkbox\"===e.type||\"radio\"===e.type?e.checked=!1:e.value=\"\"}},{key:\"updateStoredData\",value:function(e,r,t){var a=this.store.findIndex(function(r){return r.element===e});a>-1&&(this.store[a][r]=t)}},{key:\"getStoredData\",value:function(e){return this.store.find(function(r){return r.element===e})}}]),e}(),jb=ib;L.default=jb;var D={},na=D&&D.__importDefault||function($){return $&&$.__esModule?$:{default:$}};Object.defineProperty(D,\"__esModule\",{value:!0});var kb=na(I),lb=na(L);D={MSF:kb.default,Logic:lb.default};if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=D}else if(typeof define===\"function\"&&define.amd){define(function(){return D})}else{this[\"AWF\"]=D}})();","export class AsyncForm {\n\tconstructor(el) {\n\t\tif (el.dataset.refAsyncForm) {\n\t\t\treturn AsyncForm.refs[el.dataset.refAsyncForm];\n\t\t}\n\n\t\tthis.ref = Math.random();\n\t\tAsyncForm.refs[this.ref] = this;\n\t\tel.dataset.refAsyncForm = this.ref;\n\n\t\tthis.el = el;\n\n\t\tthis.form = el.querySelector(\"form\");\n\t\tthis.formSuccess = el.querySelector(\".w-form-done\");\n\t\tthis.formFail = el.querySelector(\".w-form-fail\");\n\n\t\tthis.submitButton = el.querySelector('[type=\"submit\"]');\n\t\tthis.buttonText = this.getSubmitText();\n\t\tthis.waitingText = this.submitButton.dataset.wait;\n\n\t\t/** @type {BeforeSubmitHandler[]} */\n\t\tthis.beforeSubmitHandlers = [];\n\t\t/** @type {PayloadHandler[]} */\n\t\tthis.payloadHandlers = [];\n\t\t/** @type {InputHandler[]} */\n\t\tthis.inputHandlers = [];\n\t\t/** @type {StateHandler[]} */\n\t\tthis.onStateHandlers = [];\n\n\t\tthis.el.addEventListener(\"submit\", (e) => this.submit(e));\n\t}\n\n\t/**\n\t * @callback BeforeSubmitHandler\n\t * @returns {bool} if false then the form is not submitted\n\t */\n\n\t/**\n\t * Gets called before the form starts to submit\n\t * Allows to cancel the submit by returning false\n\t * @type {BeforeSubmitHandler}\n\t */\n\tset onBeforeSubmit(fn) {\n\t\tthis.beforeSubmitHandlers.push(fn);\n\t}\n\n\t/**\n\t * @callback PayloadHandler\n\t * @param {Object} payload The current payload\n\t * @returns {Object} The new payload\n\t */\n\n\t/**\n\t * Allows for adding custom value to the payload\n\t * Gets called before form elements are converted\n\t * All handlers will be called in the order they were registered\n\t * @type {PayloadHandler}\n\t */\n\tset onPayload(fn) {\n\t\tthis.payloadHandlers.push(fn);\n\t}\n\n\t/**\n\t * @callback InputHandler\n\t * @param {HTMLElement} input The input element\n\t * @param {String} value The current value\n\t * @returns {String} The new value\n\t */\n\n\t/**\n\t * Allows for transforming the values of the form elements\n\t * All handlers will be called in the order they were registered\n\t * Can be async\n\t * @type {InputHandler}\n\t */\n\tset onInput(fn) {\n\t\tthis.inputHandlers.push(fn);\n\t}\n\n\t/**\n\t * @callback StateHandler\n\t * @param {'loading' | 'success' | 'error'} state\n\t */\n\n\t/**\n\t * Gets called when the forms state changes\n\t * @type {StateHandler}\n\t */\n\tset onState(fn) {\n\t\tthis.onStateHandlers.push(fn);\n\t}\n\n\tasync submit(event) {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tconst shouldSubmit = this.beforeSubmitHandlers.reduce((prev, handler) => handler() && prev, true);\n\t\t\tif (!shouldSubmit) return;\n\n\t\t\tthis.setState(\"loading\");\n\n\t\t\tconst payload = await this.createPayload();\n\t\t\tconst url = this.form.action;\n\t\t\tconst method = this.form.method;\n\n\t\t\tconst options = {\n\t\t\t\tmethod: method,\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t};\n\n\t\t\tconst response = await fetch(url, options);\n\n\t\t\tif (response.ok) {\n\t\t\t\tthis.setState(\"success\");\n\t\t\t} else {\n\t\t\t\tthis.setState(\"error\");\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tthis.setState(\"error\");\n\t\t}\n\t}\n\n\tasync createPayload() {\n\t\tlet payload = this.payloadHandlers.reduce((payload, handler) => handler(payload), {});\n\n\t\tconst inputElements = this.elements.filter((el) => el.name !== \"\");\n\t\tfor (const input of inputElements) {\n\t\t\tconst name = input.name;\n\t\t\tlet value = input.value;\n\n\t\t\tfor (const inputHandler of this.inputHandlers) {\n\t\t\t\tvalue = await inputHandler(input, value);\n\t\t\t}\n\n\t\t\tif (value === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (input.type === \"checkbox\") {\n\t\t\t\tvalue = input.checked;\n\t\t\t}\n\n\t\t\tif (input.type === \"radio\" && !input.checked) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (typeof payload[name] !== \"undefined\") {\n\t\t\t\tif (!Array.isArray(payload[name])) {\n\t\t\t\t\tpayload[name] = [payload[name]];\n\t\t\t\t}\n\n\t\t\t\tpayload[name].push(value);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpayload[name] = value;\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * @param {'loading' | 'success' | 'error'} state\n\t */\n\tsetState(state) {\n\t\tswitch (state) {\n\t\t\tcase \"loading\":\n\t\t\t\tthis.form.style.display = null;\n\t\t\t\tthis.formSuccess.style.display = null;\n\t\t\t\tthis.formFail.style.display = null;\n\t\t\t\tthis.elements.forEach((el) => (el.disabled = true));\n\t\t\t\tthis.setSubmitText(this.waitingText);\n\t\t\t\tbreak;\n\t\t\tcase \"success\":\n\t\t\t\tthis.form.style.display = \"none\";\n\t\t\t\tthis.formSuccess.style.display = \"block\";\n\t\t\t\tthis.formFail.style.display = \"none\";\n\t\t\t\tthis.elements.forEach((el) => (el.disabled = false));\n\t\t\t\tthis.setSubmitText(this.buttonText);\n\n\t\t\t\tthis.form.reset();\n\t\t\t\tthis.formSuccess.scrollIntoView({\n\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t\tblock: \"center\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"error\":\n\t\t\t\tthis.form.style.display = null;\n\t\t\t\tthis.formSuccess.style.display = null;\n\t\t\t\tthis.formFail.style.display = \"block\";\n\t\t\t\tthis.elements.forEach((el) => (el.disabled = false));\n\t\t\t\tthis.setSubmitText(this.buttonText);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.onStateHandlers.forEach((handler) => handler(state));\n\t}\n\n\tgetSubmitText() {\n\t\tif (this.submitButton instanceof HTMLInputElement) {\n\t\t\treturn this.submitButton.value;\n\t\t} else {\n\t\t\treturn this.submitButton.textContent;\n\t\t}\n\t}\n\n\tsetSubmitText(value) {\n\t\tif (this.submitButton instanceof HTMLInputElement) {\n\t\t\tthis.submitButton.value = value;\n\t\t} else {\n\t\t\tthis.submitButton.textContent = value;\n\t\t}\n\t}\n\n\tget elements() {\n\t\treturn Array.from(this.form.elements);\n\t}\n}\n\nAsyncForm.refs = {};\n\nwindow.AsyncForm = AsyncForm;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\tArray.from(document.querySelectorAll(\"[c-async-form]\")).forEach((el) => new AsyncForm(el));\n});\n","import { AsyncForm } from \"./async_form.js\";\n\nif (document.querySelector(\"[c-fileupload]\")) {\n\timport(\"./fileupload.js\");\n}\n\nexport { AsyncForm };\n","/*!\n * FilePond 4.30.6\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst isNode = value => value instanceof HTMLElement;\n\nconst createStore = (initialState, queries = [], actions = []) => {\n    // internal state\n    const state = {\n        ...initialState,\n    };\n\n    // contains all actions for next frame, is clear when actions are requested\n    const actionQueue = [];\n    const dispatchQueue = [];\n\n    // returns a duplicate of the current state\n    const getState = () => ({ ...state });\n\n    // returns a duplicate of the actions array and clears the actions array\n    const processActionQueue = () => {\n        // create copy of actions queue\n        const queue = [...actionQueue];\n\n        // clear actions queue (we don't want no double actions)\n        actionQueue.length = 0;\n\n        return queue;\n    };\n\n    // processes actions that might block the main UI thread\n    const processDispatchQueue = () => {\n        // create copy of actions queue\n        const queue = [...dispatchQueue];\n\n        // clear actions queue (we don't want no double actions)\n        dispatchQueue.length = 0;\n\n        // now dispatch these actions\n        queue.forEach(({ type, data }) => {\n            dispatch(type, data);\n        });\n    };\n\n    // adds a new action, calls its handler and\n    const dispatch = (type, data, isBlocking) => {\n        // is blocking action (should never block if document is hidden)\n        if (isBlocking && !document.hidden) {\n            dispatchQueue.push({ type, data });\n            return;\n        }\n\n        // if this action has a handler, handle the action\n        if (actionHandlers[type]) {\n            actionHandlers[type](data);\n        }\n\n        // now add action\n        actionQueue.push({\n            type,\n            data,\n        });\n    };\n\n    const query = (str, ...args) => (queryHandles[str] ? queryHandles[str](...args) : null);\n\n    const api = {\n        getState,\n        processActionQueue,\n        processDispatchQueue,\n        dispatch,\n        query,\n    };\n\n    let queryHandles = {};\n    queries.forEach(query => {\n        queryHandles = {\n            ...query(state),\n            ...queryHandles,\n        };\n    });\n\n    let actionHandlers = {};\n    actions.forEach(action => {\n        actionHandlers = {\n            ...action(dispatch, query, state),\n            ...actionHandlers,\n        };\n    });\n\n    return api;\n};\n\nconst defineProperty = (obj, property, definition) => {\n    if (typeof definition === 'function') {\n        obj[property] = definition;\n        return;\n    }\n    Object.defineProperty(obj, property, { ...definition });\n};\n\nconst forin = (obj, cb) => {\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n            continue;\n        }\n\n        cb(key, obj[key]);\n    }\n};\n\nconst createObject = definition => {\n    const obj = {};\n    forin(definition, property => {\n        defineProperty(obj, property, definition[property]);\n    });\n    return obj;\n};\n\nconst attr = (node, name, value = null) => {\n    if (value === null) {\n        return node.getAttribute(name) || node.hasAttribute(name);\n    }\n    node.setAttribute(name, value);\n};\n\nconst ns = 'http://www.w3.org/2000/svg';\nconst svgElements = ['svg', 'path']; // only svg elements used\n\nconst isSVGElement = tag => svgElements.includes(tag);\n\nconst createElement = (tag, className, attributes = {}) => {\n    if (typeof className === 'object') {\n        attributes = className;\n        className = null;\n    }\n    const element = isSVGElement(tag)\n        ? document.createElementNS(ns, tag)\n        : document.createElement(tag);\n    if (className) {\n        if (isSVGElement(tag)) {\n            attr(element, 'class', className);\n        } else {\n            element.className = className;\n        }\n    }\n    forin(attributes, (name, value) => {\n        attr(element, name, value);\n    });\n    return element;\n};\n\nconst appendChild = parent => (child, index) => {\n    if (typeof index !== 'undefined' && parent.children[index]) {\n        parent.insertBefore(child, parent.children[index]);\n    } else {\n        parent.appendChild(child);\n    }\n};\n\nconst appendChildView = (parent, childViews) => (view, index) => {\n    if (typeof index !== 'undefined') {\n        childViews.splice(index, 0, view);\n    } else {\n        childViews.push(view);\n    }\n\n    return view;\n};\n\nconst removeChildView = (parent, childViews) => view => {\n    // remove from child views\n    childViews.splice(childViews.indexOf(view), 1);\n\n    // remove the element\n    if (view.element.parentNode) {\n        parent.removeChild(view.element);\n    }\n\n    return view;\n};\n\nconst IS_BROWSER = (() =>\n    typeof window !== 'undefined' && typeof window.document !== 'undefined')();\nconst isBrowser = () => IS_BROWSER;\n\nconst testElement = isBrowser() ? createElement('svg') : {};\nconst getChildCount =\n    'children' in testElement ? el => el.children.length : el => el.childNodes.length;\n\nconst getViewRect = (elementRect, childViews, offset, scale) => {\n    const left = offset[0] || elementRect.left;\n    const top = offset[1] || elementRect.top;\n    const right = left + elementRect.width;\n    const bottom = top + elementRect.height * (scale[1] || 1);\n\n    const rect = {\n        // the rectangle of the element itself\n        element: {\n            ...elementRect,\n        },\n\n        // the rectangle of the element expanded to contain its children, does not include any margins\n        inner: {\n            left: elementRect.left,\n            top: elementRect.top,\n            right: elementRect.right,\n            bottom: elementRect.bottom,\n        },\n\n        // the rectangle of the element expanded to contain its children including own margin and child margins\n        // margins will be added after we've recalculated the size\n        outer: {\n            left,\n            top,\n            right,\n            bottom,\n        },\n    };\n\n    // expand rect to fit all child rectangles\n    childViews\n        .filter(childView => !childView.isRectIgnored())\n        .map(childView => childView.rect)\n        .forEach(childViewRect => {\n            expandRect(rect.inner, { ...childViewRect.inner });\n            expandRect(rect.outer, { ...childViewRect.outer });\n        });\n\n    // calculate inner width and height\n    calculateRectSize(rect.inner);\n\n    // append additional margin (top and left margins are included in top and left automatically)\n    rect.outer.bottom += rect.element.marginBottom;\n    rect.outer.right += rect.element.marginRight;\n\n    // calculate outer width and height\n    calculateRectSize(rect.outer);\n\n    return rect;\n};\n\nconst expandRect = (parent, child) => {\n    // adjust for parent offset\n    child.top += parent.top;\n    child.right += parent.left;\n    child.bottom += parent.top;\n    child.left += parent.left;\n\n    if (child.bottom > parent.bottom) {\n        parent.bottom = child.bottom;\n    }\n\n    if (child.right > parent.right) {\n        parent.right = child.right;\n    }\n};\n\nconst calculateRectSize = rect => {\n    rect.width = rect.right - rect.left;\n    rect.height = rect.bottom - rect.top;\n};\n\nconst isNumber = value => typeof value === 'number';\n\n/**\n * Determines if position is at destination\n * @param position\n * @param destination\n * @param velocity\n * @param errorMargin\n * @returns {boolean}\n */\nconst thereYet = (position, destination, velocity, errorMargin = 0.001) => {\n    return Math.abs(position - destination) < errorMargin && Math.abs(velocity) < errorMargin;\n};\n\n/**\n * Spring animation\n */\nconst spring =\n    // default options\n    ({ stiffness = 0.5, damping = 0.75, mass = 10 } = {}) =>\n        // method definition\n        {\n            let target = null;\n            let position = null;\n            let velocity = 0;\n            let resting = false;\n\n            // updates spring state\n            const interpolate = (ts, skipToEndState) => {\n                // in rest, don't animate\n                if (resting) return;\n\n                // need at least a target or position to do springy things\n                if (!(isNumber(target) && isNumber(position))) {\n                    resting = true;\n                    velocity = 0;\n                    return;\n                }\n\n                // calculate spring force\n                const f = -(position - target) * stiffness;\n\n                // update velocity by adding force based on mass\n                velocity += f / mass;\n\n                // update position by adding velocity\n                position += velocity;\n\n                // slow down based on amount of damping\n                velocity *= damping;\n\n                // we've arrived if we're near target and our velocity is near zero\n                if (thereYet(position, target, velocity) || skipToEndState) {\n                    position = target;\n                    velocity = 0;\n                    resting = true;\n\n                    // we done\n                    api.onupdate(position);\n                    api.oncomplete(position);\n                } else {\n                    // progress update\n                    api.onupdate(position);\n                }\n            };\n\n            /**\n             * Set new target value\n             * @param value\n             */\n            const setTarget = value => {\n                // if currently has no position, set target and position to this value\n                if (isNumber(value) && !isNumber(position)) {\n                    position = value;\n                }\n\n                // next target value will not be animated to\n                if (target === null) {\n                    target = value;\n                    position = value;\n                }\n\n                // let start moving to target\n                target = value;\n\n                // already at target\n                if (position === target || typeof target === 'undefined') {\n                    // now resting as target is current position, stop moving\n                    resting = true;\n                    velocity = 0;\n\n                    // done!\n                    api.onupdate(position);\n                    api.oncomplete(position);\n\n                    return;\n                }\n\n                resting = false;\n            };\n\n            // need 'api' to call onupdate callback\n            const api = createObject({\n                interpolate,\n                target: {\n                    set: setTarget,\n                    get: () => target,\n                },\n                resting: {\n                    get: () => resting,\n                },\n                onupdate: value => {},\n                oncomplete: value => {},\n            });\n\n            return api;\n        };\n\nconst easeLinear = t => t;\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\nconst tween =\n    // default values\n    ({ duration = 500, easing = easeInOutQuad, delay = 0 } = {}) =>\n        // method definition\n        {\n            let start = null;\n            let t;\n            let p;\n            let resting = true;\n            let reverse = false;\n            let target = null;\n\n            const interpolate = (ts, skipToEndState) => {\n                if (resting || target === null) return;\n\n                if (start === null) {\n                    start = ts;\n                }\n\n                if (ts - start < delay) return;\n\n                t = ts - start - delay;\n\n                if (t >= duration || skipToEndState) {\n                    t = 1;\n                    p = reverse ? 0 : 1;\n                    api.onupdate(p * target);\n                    api.oncomplete(p * target);\n                    resting = true;\n                } else {\n                    p = t / duration;\n                    api.onupdate((t >= 0 ? easing(reverse ? 1 - p : p) : 0) * target);\n                }\n            };\n\n            // need 'api' to call onupdate callback\n            const api = createObject({\n                interpolate,\n                target: {\n                    get: () => (reverse ? 0 : target),\n                    set: value => {\n                        // is initial value\n                        if (target === null) {\n                            target = value;\n                            api.onupdate(value);\n                            api.oncomplete(value);\n                            return;\n                        }\n\n                        // want to tween to a smaller value and have a current value\n                        if (value < target) {\n                            target = 1;\n                            reverse = true;\n                        } else {\n                            // not tweening to a smaller value\n                            reverse = false;\n                            target = value;\n                        }\n\n                        // let's go!\n                        resting = false;\n                        start = null;\n                    },\n                },\n                resting: {\n                    get: () => resting,\n                },\n                onupdate: value => {},\n                oncomplete: value => {},\n            });\n\n            return api;\n        };\n\nconst animator = {\n    spring,\n    tween,\n};\n\n/*\n { type: 'spring', stiffness: .5, damping: .75, mass: 10 };\n { translation: { type: 'spring', ... }, ... }\n { translation: { x: { type: 'spring', ... } } }\n*/\nconst createAnimator = (definition, category, property) => {\n    // default is single definition\n    // we check if transform is set, if so, we check if property is set\n    const def =\n        definition[category] && typeof definition[category][property] === 'object'\n            ? definition[category][property]\n            : definition[category] || definition;\n\n    const type = typeof def === 'string' ? def : def.type;\n    const props = typeof def === 'object' ? { ...def } : {};\n\n    return animator[type] ? animator[type](props) : null;\n};\n\nconst addGetSet = (keys, obj, props, overwrite = false) => {\n    obj = Array.isArray(obj) ? obj : [obj];\n    obj.forEach(o => {\n        keys.forEach(key => {\n            let name = key;\n            let getter = () => props[key];\n            let setter = value => (props[key] = value);\n\n            if (typeof key === 'object') {\n                name = key.key;\n                getter = key.getter || getter;\n                setter = key.setter || setter;\n            }\n\n            if (o[name] && !overwrite) {\n                return;\n            }\n\n            o[name] = {\n                get: getter,\n                set: setter,\n            };\n        });\n    });\n};\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// setup animators\n\nconst animations = ({ mixinConfig, viewProps, viewInternalAPI, viewExternalAPI }) => {\n    // initial properties\n    const initialProps = { ...viewProps };\n\n    // list of all active animations\n    const animations = [];\n\n    // setup animators\n    forin(mixinConfig, (property, animation) => {\n        const animator = createAnimator(animation);\n        if (!animator) {\n            return;\n        }\n\n        // when the animator updates, update the view state value\n        animator.onupdate = value => {\n            viewProps[property] = value;\n        };\n\n        // set animator target\n        animator.target = initialProps[property];\n\n        // when value is set, set the animator target value\n        const prop = {\n            key: property,\n            setter: value => {\n                // if already at target, we done!\n                if (animator.target === value) {\n                    return;\n                }\n\n                animator.target = value;\n            },\n            getter: () => viewProps[property],\n        };\n\n        // add getters and setters\n        addGetSet([prop], [viewInternalAPI, viewExternalAPI], viewProps, true);\n\n        // add it to the list for easy updating from the _write method\n        animations.push(animator);\n    });\n\n    // expose internal write api\n    return {\n        write: ts => {\n            let skipToEndState = document.hidden;\n            let resting = true;\n            animations.forEach(animation => {\n                if (!animation.resting) resting = false;\n                animation.interpolate(ts, skipToEndState);\n            });\n            return resting;\n        },\n        destroy: () => {},\n    };\n};\n\nconst addEvent = element => (type, fn) => {\n    element.addEventListener(type, fn);\n};\n\nconst removeEvent = element => (type, fn) => {\n    element.removeEventListener(type, fn);\n};\n\n// mixin\nconst listeners = ({\n    mixinConfig,\n    viewProps,\n    viewInternalAPI,\n    viewExternalAPI,\n    viewState,\n    view,\n}) => {\n    const events = [];\n\n    const add = addEvent(view.element);\n    const remove = removeEvent(view.element);\n\n    viewExternalAPI.on = (type, fn) => {\n        events.push({\n            type,\n            fn,\n        });\n        add(type, fn);\n    };\n\n    viewExternalAPI.off = (type, fn) => {\n        events.splice(events.findIndex(event => event.type === type && event.fn === fn), 1);\n        remove(type, fn);\n    };\n\n    return {\n        write: () => {\n            // not busy\n            return true;\n        },\n        destroy: () => {\n            events.forEach(event => {\n                remove(event.type, event.fn);\n            });\n        },\n    };\n};\n\n// add to external api and link to props\n\nconst apis = ({ mixinConfig, viewProps, viewExternalAPI }) => {\n    addGetSet(mixinConfig, viewExternalAPI, viewProps);\n};\n\nconst isDefined = value => value != null;\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// set initial state based on props in viewProps\n// apply as transforms each frame\n\nconst defaults = {\n    opacity: 1,\n    scaleX: 1,\n    scaleY: 1,\n    translateX: 0,\n    translateY: 0,\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    originX: 0,\n    originY: 0,\n};\n\nconst styles = ({ mixinConfig, viewProps, viewInternalAPI, viewExternalAPI, view }) => {\n    // initial props\n    const initialProps = { ...viewProps };\n\n    // current props\n    const currentProps = {};\n\n    // we will add those properties to the external API and link them to the viewState\n    addGetSet(mixinConfig, [viewInternalAPI, viewExternalAPI], viewProps);\n\n    // override rect on internal and external rect getter so it takes in account transforms\n    const getOffset = () => [viewProps['translateX'] || 0, viewProps['translateY'] || 0];\n    const getScale = () => [viewProps['scaleX'] || 0, viewProps['scaleY'] || 0];\n    const getRect = () =>\n        view.rect ? getViewRect(view.rect, view.childViews, getOffset(), getScale()) : null;\n    viewInternalAPI.rect = { get: getRect };\n    viewExternalAPI.rect = { get: getRect };\n\n    // apply view props\n    mixinConfig.forEach(key => {\n        viewProps[key] =\n            typeof initialProps[key] === 'undefined' ? defaults[key] : initialProps[key];\n    });\n\n    // expose api\n    return {\n        write: () => {\n            // see if props have changed\n            if (!propsHaveChanged(currentProps, viewProps)) {\n                return;\n            }\n\n            // moves element to correct position on screen\n            applyStyles(view.element, viewProps);\n\n            // store new transforms\n            Object.assign(currentProps, { ...viewProps });\n\n            // no longer busy\n            return true;\n        },\n        destroy: () => {},\n    };\n};\n\nconst propsHaveChanged = (currentProps, newProps) => {\n    // different amount of keys\n    if (Object.keys(currentProps).length !== Object.keys(newProps).length) {\n        return true;\n    }\n\n    // lets analyze the individual props\n    for (const prop in newProps) {\n        if (newProps[prop] !== currentProps[prop]) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nconst applyStyles = (\n    element,\n    {\n        opacity,\n        perspective,\n        translateX,\n        translateY,\n        scaleX,\n        scaleY,\n        rotateX,\n        rotateY,\n        rotateZ,\n        originX,\n        originY,\n        width,\n        height,\n    }\n) => {\n    let transforms = '';\n    let styles = '';\n\n    // handle transform origin\n    if (isDefined(originX) || isDefined(originY)) {\n        styles += `transform-origin: ${originX || 0}px ${originY || 0}px;`;\n    }\n\n    // transform order is relevant\n    // 0. perspective\n    if (isDefined(perspective)) {\n        transforms += `perspective(${perspective}px) `;\n    }\n\n    // 1. translate\n    if (isDefined(translateX) || isDefined(translateY)) {\n        transforms += `translate3d(${translateX || 0}px, ${translateY || 0}px, 0) `;\n    }\n\n    // 2. scale\n    if (isDefined(scaleX) || isDefined(scaleY)) {\n        transforms += `scale3d(${isDefined(scaleX) ? scaleX : 1}, ${\n            isDefined(scaleY) ? scaleY : 1\n        }, 1) `;\n    }\n\n    // 3. rotate\n    if (isDefined(rotateZ)) {\n        transforms += `rotateZ(${rotateZ}rad) `;\n    }\n\n    if (isDefined(rotateX)) {\n        transforms += `rotateX(${rotateX}rad) `;\n    }\n\n    if (isDefined(rotateY)) {\n        transforms += `rotateY(${rotateY}rad) `;\n    }\n\n    // add transforms\n    if (transforms.length) {\n        styles += `transform:${transforms};`;\n    }\n\n    // add opacity\n    if (isDefined(opacity)) {\n        styles += `opacity:${opacity};`;\n\n        // if we reach zero, we make the element inaccessible\n        if (opacity === 0) {\n            styles += `visibility:hidden;`;\n        }\n\n        // if we're below 100% opacity this element can't be clicked\n        if (opacity < 1) {\n            styles += `pointer-events:none;`;\n        }\n    }\n\n    // add height\n    if (isDefined(height)) {\n        styles += `height:${height}px;`;\n    }\n\n    // add width\n    if (isDefined(width)) {\n        styles += `width:${width}px;`;\n    }\n\n    // apply styles\n    const elementCurrentStyle = element.elementCurrentStyle || '';\n\n    // if new styles does not match current styles, lets update!\n    if (styles.length !== elementCurrentStyle.length || styles !== elementCurrentStyle) {\n        element.style.cssText = styles;\n        // store current styles so we can compare them to new styles later on\n        // _not_ getting the style value is faster\n        element.elementCurrentStyle = styles;\n    }\n};\n\nconst Mixins = {\n    styles,\n    listeners,\n    animations,\n    apis,\n};\n\nconst updateRect = (rect = {}, element = {}, style = {}) => {\n    if (!element.layoutCalculated) {\n        rect.paddingTop = parseInt(style.paddingTop, 10) || 0;\n        rect.marginTop = parseInt(style.marginTop, 10) || 0;\n        rect.marginRight = parseInt(style.marginRight, 10) || 0;\n        rect.marginBottom = parseInt(style.marginBottom, 10) || 0;\n        rect.marginLeft = parseInt(style.marginLeft, 10) || 0;\n        element.layoutCalculated = true;\n    }\n\n    rect.left = element.offsetLeft || 0;\n    rect.top = element.offsetTop || 0;\n    rect.width = element.offsetWidth || 0;\n    rect.height = element.offsetHeight || 0;\n\n    rect.right = rect.left + rect.width;\n    rect.bottom = rect.top + rect.height;\n\n    rect.scrollTop = element.scrollTop;\n\n    rect.hidden = element.offsetParent === null;\n\n    return rect;\n};\n\nconst createView =\n    // default view definition\n    ({\n        // element definition\n        tag = 'div',\n        name = null,\n        attributes = {},\n\n        // view interaction\n        read = () => {},\n        write = () => {},\n        create = () => {},\n        destroy = () => {},\n\n        // hooks\n        filterFrameActionsForChild = (child, actions) => actions,\n        didCreateView = () => {},\n        didWriteView = () => {},\n\n        // rect related\n        ignoreRect = false,\n        ignoreRectUpdate = false,\n\n        // mixins\n        mixins = [],\n    } = {}) => (\n        // each view requires reference to store\n        store,\n        // specific properties for this view\n        props = {}\n    ) => {\n        // root element should not be changed\n        const element = createElement(tag, `filepond--${name}`, attributes);\n\n        // style reference should also not be changed\n        const style = window.getComputedStyle(element, null);\n\n        // element rectangle\n        const rect = updateRect();\n        let frameRect = null;\n\n        // rest state\n        let isResting = false;\n\n        // pretty self explanatory\n        const childViews = [];\n\n        // loaded mixins\n        const activeMixins = [];\n\n        // references to created children\n        const ref = {};\n\n        // state used for each instance\n        const state = {};\n\n        // list of writers that will be called to update this view\n        const writers = [\n            write, // default writer\n        ];\n\n        const readers = [\n            read, // default reader\n        ];\n\n        const destroyers = [\n            destroy, // default destroy\n        ];\n\n        // core view methods\n        const getElement = () => element;\n        const getChildViews = () => childViews.concat();\n        const getReference = () => ref;\n        const createChildView = store => (view, props) => view(store, props);\n        const getRect = () => {\n            if (frameRect) {\n                return frameRect;\n            }\n            frameRect = getViewRect(rect, childViews, [0, 0], [1, 1]);\n            return frameRect;\n        };\n        const getStyle = () => style;\n\n        /**\n         * Read data from DOM\n         * @private\n         */\n        const _read = () => {\n            frameRect = null;\n\n            // read child views\n            childViews.forEach(child => child._read());\n\n            const shouldUpdate = !(ignoreRectUpdate && rect.width && rect.height);\n            if (shouldUpdate) {\n                updateRect(rect, element, style);\n            }\n\n            // readers\n            const api = { root: internalAPI, props, rect };\n            readers.forEach(reader => reader(api));\n        };\n\n        /**\n         * Write data to DOM\n         * @private\n         */\n        const _write = (ts, frameActions, shouldOptimize) => {\n            // if no actions, we assume that the view is resting\n            let resting = frameActions.length === 0;\n\n            // writers\n            writers.forEach(writer => {\n                const writerResting = writer({\n                    props,\n                    root: internalAPI,\n                    actions: frameActions,\n                    timestamp: ts,\n                    shouldOptimize,\n                });\n                if (writerResting === false) {\n                    resting = false;\n                }\n            });\n\n            // run mixins\n            activeMixins.forEach(mixin => {\n                // if one of the mixins is still busy after write operation, we are not resting\n                const mixinResting = mixin.write(ts);\n                if (mixinResting === false) {\n                    resting = false;\n                }\n            });\n\n            // updates child views that are currently attached to the DOM\n            childViews\n                .filter(child => !!child.element.parentNode)\n                .forEach(child => {\n                    // if a child view is not resting, we are not resting\n                    const childResting = child._write(\n                        ts,\n                        filterFrameActionsForChild(child, frameActions),\n                        shouldOptimize\n                    );\n                    if (!childResting) {\n                        resting = false;\n                    }\n                });\n\n            // append new elements to DOM and update those\n            childViews\n                //.filter(child => !child.element.parentNode)\n                .forEach((child, index) => {\n                    // skip\n                    if (child.element.parentNode) {\n                        return;\n                    }\n\n                    // append to DOM\n                    internalAPI.appendChild(child.element, index);\n\n                    // call read (need to know the size of these elements)\n                    child._read();\n\n                    // re-call write\n                    child._write(\n                        ts,\n                        filterFrameActionsForChild(child, frameActions),\n                        shouldOptimize\n                    );\n\n                    // we just added somthing to the dom, no rest\n                    resting = false;\n                });\n\n            // update resting state\n            isResting = resting;\n\n            didWriteView({\n                props,\n                root: internalAPI,\n                actions: frameActions,\n                timestamp: ts,\n            });\n\n            // let parent know if we are resting\n            return resting;\n        };\n\n        const _destroy = () => {\n            activeMixins.forEach(mixin => mixin.destroy());\n            destroyers.forEach(destroyer => {\n                destroyer({ root: internalAPI, props });\n            });\n            childViews.forEach(child => child._destroy());\n        };\n\n        // sharedAPI\n        const sharedAPIDefinition = {\n            element: {\n                get: getElement,\n            },\n            style: {\n                get: getStyle,\n            },\n            childViews: {\n                get: getChildViews,\n            },\n        };\n\n        // private API definition\n        const internalAPIDefinition = {\n            ...sharedAPIDefinition,\n            rect: {\n                get: getRect,\n            },\n\n            // access to custom children references\n            ref: {\n                get: getReference,\n            },\n\n            // dom modifiers\n            is: needle => name === needle,\n            appendChild: appendChild(element),\n            createChildView: createChildView(store),\n            linkView: view => {\n                childViews.push(view);\n                return view;\n            },\n            unlinkView: view => {\n                childViews.splice(childViews.indexOf(view), 1);\n            },\n            appendChildView: appendChildView(element, childViews),\n            removeChildView: removeChildView(element, childViews),\n            registerWriter: writer => writers.push(writer),\n            registerReader: reader => readers.push(reader),\n            registerDestroyer: destroyer => destroyers.push(destroyer),\n            invalidateLayout: () => (element.layoutCalculated = false),\n\n            // access to data store\n            dispatch: store.dispatch,\n            query: store.query,\n        };\n\n        // public view API methods\n        const externalAPIDefinition = {\n            element: {\n                get: getElement,\n            },\n            childViews: {\n                get: getChildViews,\n            },\n            rect: {\n                get: getRect,\n            },\n            resting: {\n                get: () => isResting,\n            },\n            isRectIgnored: () => ignoreRect,\n            _read,\n            _write,\n            _destroy,\n        };\n\n        // mixin API methods\n        const mixinAPIDefinition = {\n            ...sharedAPIDefinition,\n            rect: {\n                get: () => rect,\n            },\n        };\n\n        // add mixin functionality\n        Object.keys(mixins)\n            .sort((a, b) => {\n                // move styles to the back of the mixin list (so adjustments of other mixins are applied to the props correctly)\n                if (a === 'styles') {\n                    return 1;\n                } else if (b === 'styles') {\n                    return -1;\n                }\n                return 0;\n            })\n            .forEach(key => {\n                const mixinAPI = Mixins[key]({\n                    mixinConfig: mixins[key],\n                    viewProps: props,\n                    viewState: state,\n                    viewInternalAPI: internalAPIDefinition,\n                    viewExternalAPI: externalAPIDefinition,\n                    view: createObject(mixinAPIDefinition),\n                });\n\n                if (mixinAPI) {\n                    activeMixins.push(mixinAPI);\n                }\n            });\n\n        // construct private api\n        const internalAPI = createObject(internalAPIDefinition);\n\n        // create the view\n        create({\n            root: internalAPI,\n            props,\n        });\n\n        // append created child views to root node\n        const childCount = getChildCount(element); // need to know the current child count so appending happens in correct order\n        childViews.forEach((child, index) => {\n            internalAPI.appendChild(child.element, childCount + index);\n        });\n\n        // call did create\n        didCreateView(internalAPI);\n\n        // expose public api\n        return createObject(externalAPIDefinition);\n    };\n\nconst createPainter = (read, write, fps = 60) => {\n    const name = '__framePainter';\n\n    // set global painter\n    if (window[name]) {\n        window[name].readers.push(read);\n        window[name].writers.push(write);\n        return;\n    }\n\n    window[name] = {\n        readers: [read],\n        writers: [write],\n    };\n\n    const painter = window[name];\n\n    const interval = 1000 / fps;\n    let last = null;\n    let id = null;\n    let requestTick = null;\n    let cancelTick = null;\n\n    const setTimerType = () => {\n        if (document.hidden) {\n            requestTick = () => window.setTimeout(() => tick(performance.now()), interval);\n            cancelTick = () => window.clearTimeout(id);\n        } else {\n            requestTick = () => window.requestAnimationFrame(tick);\n            cancelTick = () => window.cancelAnimationFrame(id);\n        }\n    };\n\n    document.addEventListener('visibilitychange', () => {\n        if (cancelTick) cancelTick();\n        setTimerType();\n        tick(performance.now());\n    });\n\n    const tick = ts => {\n        // queue next tick\n        id = requestTick(tick);\n\n        // limit fps\n        if (!last) {\n            last = ts;\n        }\n\n        const delta = ts - last;\n\n        if (delta <= interval) {\n            // skip frame\n            return;\n        }\n\n        // align next frame\n        last = ts - (delta % interval);\n\n        // update view\n        painter.readers.forEach(read => read());\n        painter.writers.forEach(write => write(ts));\n    };\n\n    setTimerType();\n    tick(performance.now());\n\n    return {\n        pause: () => {\n            cancelTick(id);\n        },\n    };\n};\n\nconst createRoute = (routes, fn) => ({ root, props, actions = [], timestamp, shouldOptimize }) => {\n    actions\n        .filter(action => routes[action.type])\n        .forEach(action =>\n            routes[action.type]({ root, props, action: action.data, timestamp, shouldOptimize })\n        );\n    if (fn) {\n        fn({ root, props, actions, timestamp, shouldOptimize });\n    }\n};\n\nconst insertBefore = (newNode, referenceNode) =>\n    referenceNode.parentNode.insertBefore(newNode, referenceNode);\n\nconst insertAfter = (newNode, referenceNode) => {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n};\n\nconst isArray = value => Array.isArray(value);\n\nconst isEmpty = value => value == null;\n\nconst trim = str => str.trim();\n\nconst toString = value => '' + value;\n\nconst toArray = (value, splitter = ',') => {\n    if (isEmpty(value)) {\n        return [];\n    }\n    if (isArray(value)) {\n        return value;\n    }\n    return toString(value)\n        .split(splitter)\n        .map(trim)\n        .filter(str => str.length);\n};\n\nconst isBoolean = value => typeof value === 'boolean';\n\nconst toBoolean = value => (isBoolean(value) ? value : value === 'true');\n\nconst isString = value => typeof value === 'string';\n\nconst toNumber = value =>\n    isNumber(value) ? value : isString(value) ? toString(value).replace(/[a-z]+/gi, '') : 0;\n\nconst toInt = value => parseInt(toNumber(value), 10);\n\nconst toFloat = value => parseFloat(toNumber(value));\n\nconst isInt = value => isNumber(value) && isFinite(value) && Math.floor(value) === value;\n\nconst toBytes = (value, base = 1000) => {\n    // is in bytes\n    if (isInt(value)) {\n        return value;\n    }\n\n    // is natural file size\n    let naturalFileSize = toString(value).trim();\n\n    // if is value in megabytes\n    if (/MB$/i.test(naturalFileSize)) {\n        naturalFileSize = naturalFileSize.replace(/MB$i/, '').trim();\n        return toInt(naturalFileSize) * base * base;\n    }\n\n    // if is value in kilobytes\n    if (/KB/i.test(naturalFileSize)) {\n        naturalFileSize = naturalFileSize.replace(/KB$i/, '').trim();\n        return toInt(naturalFileSize) * base;\n    }\n\n    return toInt(naturalFileSize);\n};\n\nconst isFunction = value => typeof value === 'function';\n\nconst toFunctionReference = string => {\n    let ref = self;\n    let levels = string.split('.');\n    let level = null;\n    while ((level = levels.shift())) {\n        ref = ref[level];\n        if (!ref) {\n            return null;\n        }\n    }\n    return ref;\n};\n\nconst methods = {\n    process: 'POST',\n    patch: 'PATCH',\n    revert: 'DELETE',\n    fetch: 'GET',\n    restore: 'GET',\n    load: 'GET',\n};\n\nconst createServerAPI = outline => {\n    const api = {};\n\n    api.url = isString(outline) ? outline : outline.url || '';\n    api.timeout = outline.timeout ? parseInt(outline.timeout, 10) : 0;\n    api.headers = outline.headers ? outline.headers : {};\n\n    forin(methods, key => {\n        api[key] = createAction(key, outline[key], methods[key], api.timeout, api.headers);\n    });\n\n    // remove process if no url or process on outline\n    api.process = outline.process || isString(outline) || outline.url ? api.process : null;\n\n    // special treatment for remove\n    api.remove = outline.remove || null;\n\n    // remove generic headers from api object\n    delete api.headers;\n\n    return api;\n};\n\nconst createAction = (name, outline, method, timeout, headers) => {\n    // is explicitely set to null so disable\n    if (outline === null) {\n        return null;\n    }\n\n    // if is custom function, done! Dev handles everything.\n    if (typeof outline === 'function') {\n        return outline;\n    }\n\n    // build action object\n    const action = {\n        url: method === 'GET' || method === 'PATCH' ? `?${name}=` : '',\n        method,\n        headers,\n        withCredentials: false,\n        timeout,\n        onload: null,\n        ondata: null,\n        onerror: null,\n    };\n\n    // is a single url\n    if (isString(outline)) {\n        action.url = outline;\n        return action;\n    }\n\n    // overwrite\n    Object.assign(action, outline);\n\n    // see if should reformat headers;\n    if (isString(action.headers)) {\n        const parts = action.headers.split(/:(.+)/);\n        action.headers = {\n            header: parts[0],\n            value: parts[1],\n        };\n    }\n\n    // if is bool withCredentials\n    action.withCredentials = toBoolean(action.withCredentials);\n\n    return action;\n};\n\nconst toServerAPI = value => createServerAPI(value);\n\nconst isNull = value => value === null;\n\nconst isObject = value => typeof value === 'object' && value !== null;\n\nconst isAPI = value => {\n    return (\n        isObject(value) &&\n        isString(value.url) &&\n        isObject(value.process) &&\n        isObject(value.revert) &&\n        isObject(value.restore) &&\n        isObject(value.fetch)\n    );\n};\n\nconst getType = value => {\n    if (isArray(value)) {\n        return 'array';\n    }\n\n    if (isNull(value)) {\n        return 'null';\n    }\n\n    if (isInt(value)) {\n        return 'int';\n    }\n\n    if (/^[0-9]+ ?(?:GB|MB|KB)$/gi.test(value)) {\n        return 'bytes';\n    }\n\n    if (isAPI(value)) {\n        return 'api';\n    }\n\n    return typeof value;\n};\n\nconst replaceSingleQuotes = str =>\n    str\n        .replace(/{\\s*'/g, '{\"')\n        .replace(/'\\s*}/g, '\"}')\n        .replace(/'\\s*:/g, '\":')\n        .replace(/:\\s*'/g, ':\"')\n        .replace(/,\\s*'/g, ',\"')\n        .replace(/'\\s*,/g, '\",');\n\nconst conversionTable = {\n    array: toArray,\n    boolean: toBoolean,\n    int: value => (getType(value) === 'bytes' ? toBytes(value) : toInt(value)),\n    number: toFloat,\n    float: toFloat,\n    bytes: toBytes,\n    string: value => (isFunction(value) ? value : toString(value)),\n    function: value => toFunctionReference(value),\n    serverapi: toServerAPI,\n    object: value => {\n        try {\n            return JSON.parse(replaceSingleQuotes(value));\n        } catch (e) {\n            return null;\n        }\n    },\n};\n\nconst convertTo = (value, type) => conversionTable[type](value);\n\nconst getValueByType = (newValue, defaultValue, valueType) => {\n    // can always assign default value\n    if (newValue === defaultValue) {\n        return newValue;\n    }\n\n    // get the type of the new value\n    let newValueType = getType(newValue);\n\n    // is valid type?\n    if (newValueType !== valueType) {\n        // is string input, let's attempt to convert\n        const convertedValue = convertTo(newValue, valueType);\n\n        // what is the type now\n        newValueType = getType(convertedValue);\n\n        // no valid conversions found\n        if (convertedValue === null) {\n            throw `Trying to assign value with incorrect type to \"${option}\", allowed type: \"${valueType}\"`;\n        } else {\n            newValue = convertedValue;\n        }\n    }\n\n    // assign new value\n    return newValue;\n};\n\nconst createOption = (defaultValue, valueType) => {\n    let currentValue = defaultValue;\n    return {\n        enumerable: true,\n        get: () => currentValue,\n        set: newValue => {\n            currentValue = getValueByType(newValue, defaultValue, valueType);\n        },\n    };\n};\n\nconst createOptions = options => {\n    const obj = {};\n    forin(options, prop => {\n        const optionDefinition = options[prop];\n        obj[prop] = createOption(optionDefinition[0], optionDefinition[1]);\n    });\n    return createObject(obj);\n};\n\nconst createInitialState = options => ({\n    // model\n    items: [],\n\n    // timeout used for calling update items\n    listUpdateTimeout: null,\n\n    // timeout used for stacking metadata updates\n    itemUpdateTimeout: null,\n\n    // queue of items waiting to be processed\n    processingQueue: [],\n\n    // options\n    options: createOptions(options),\n});\n\nconst fromCamels = (string, separator = '-') =>\n    string\n        .split(/(?=[A-Z])/)\n        .map(part => part.toLowerCase())\n        .join(separator);\n\nconst createOptionAPI = (store, options) => {\n    const obj = {};\n    forin(options, key => {\n        obj[key] = {\n            get: () => store.getState().options[key],\n            set: value => {\n                store.dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n                    value,\n                });\n            },\n        };\n    });\n    return obj;\n};\n\nconst createOptionActions = options => (dispatch, query, state) => {\n    const obj = {};\n    forin(options, key => {\n        const name = fromCamels(key, '_').toUpperCase();\n\n        obj[`SET_${name}`] = action => {\n            try {\n                state.options[key] = action.value;\n            } catch (e) {\n                // nope, failed\n            }\n\n            // we successfully set the value of this option\n            dispatch(`DID_SET_${name}`, { value: state.options[key] });\n        };\n    });\n    return obj;\n};\n\nconst createOptionQueries = options => state => {\n    const obj = {};\n    forin(options, key => {\n        obj[`GET_${fromCamels(key, '_').toUpperCase()}`] = action => state.options[key];\n    });\n    return obj;\n};\n\nconst InteractionMethod = {\n    API: 1,\n    DROP: 2,\n    BROWSE: 3,\n    PASTE: 4,\n    NONE: 5,\n};\n\nconst getUniqueId = () =>\n    Math.random()\n        .toString(36)\n        .substring(2, 11);\n\nconst arrayRemove = (arr, index) => arr.splice(index, 1);\n\nconst run = (cb, sync) => {\n    if (sync) {\n        cb();\n    } else if (document.hidden) {\n        Promise.resolve(1).then(cb);\n    } else {\n        setTimeout(cb, 0);\n    }\n};\n\nconst on = () => {\n    const listeners = [];\n    const off = (event, cb) => {\n        arrayRemove(\n            listeners,\n            listeners.findIndex(listener => listener.event === event && (listener.cb === cb || !cb))\n        );\n    };\n    const fire = (event, args, sync) => {\n        listeners\n            .filter(listener => listener.event === event)\n            .map(listener => listener.cb)\n            .forEach(cb => run(() => cb(...args), sync));\n    };\n    return {\n        fireSync: (event, ...args) => {\n            fire(event, args, true);\n        },\n        fire: (event, ...args) => {\n            fire(event, args, false);\n        },\n        on: (event, cb) => {\n            listeners.push({ event, cb });\n        },\n        onOnce: (event, cb) => {\n            listeners.push({\n                event,\n                cb: (...args) => {\n                    off(event, cb);\n                    cb(...args);\n                },\n            });\n        },\n        off,\n    };\n};\n\nconst copyObjectPropertiesToObject = (src, target, excluded) => {\n    Object.getOwnPropertyNames(src)\n        .filter(property => !excluded.includes(property))\n        .forEach(key =>\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(src, key))\n        );\n};\n\nconst PRIVATE = [\n    'fire',\n    'process',\n    'revert',\n    'load',\n    'on',\n    'off',\n    'onOnce',\n    'retryLoad',\n    'extend',\n    'archive',\n    'archived',\n    'release',\n    'released',\n    'requestProcessing',\n    'freeze',\n];\n\nconst createItemAPI = item => {\n    const api = {};\n    copyObjectPropertiesToObject(item, api, PRIVATE);\n    return api;\n};\n\nconst removeReleasedItems = items => {\n    items.forEach((item, index) => {\n        if (item.released) {\n            arrayRemove(items, index);\n        }\n    });\n};\n\nconst ItemStatus = {\n    INIT: 1,\n    IDLE: 2,\n    PROCESSING_QUEUED: 9,\n    PROCESSING: 3,\n    PROCESSING_COMPLETE: 5,\n    PROCESSING_ERROR: 6,\n    PROCESSING_REVERT_ERROR: 10,\n    LOADING: 7,\n    LOAD_ERROR: 8,\n};\n\nconst FileOrigin = {\n    INPUT: 1,\n    LIMBO: 2,\n    LOCAL: 3,\n};\n\nconst getNonNumeric = str => /[^0-9]+/.exec(str);\n\nconst getDecimalSeparator = () => getNonNumeric((1.1).toLocaleString())[0];\n\nconst getThousandsSeparator = () => {\n    // Added for browsers that do not return the thousands separator (happend on native browser Android 4.4.4)\n    // We check against the normal toString output and if they're the same return a comma when decimal separator is a dot\n    const decimalSeparator = getDecimalSeparator();\n    const thousandsStringWithSeparator = (1000.0).toLocaleString();\n    const thousandsStringWithoutSeparator = (1000.0).toString();\n    if (thousandsStringWithSeparator !== thousandsStringWithoutSeparator) {\n        return getNonNumeric(thousandsStringWithSeparator)[0];\n    }\n    return decimalSeparator === '.' ? ',' : '.';\n};\n\nconst Type = {\n    BOOLEAN: 'boolean',\n    INT: 'int',\n    NUMBER: 'number',\n    STRING: 'string',\n    ARRAY: 'array',\n    OBJECT: 'object',\n    FUNCTION: 'function',\n    ACTION: 'action',\n    SERVER_API: 'serverapi',\n    REGEX: 'regex',\n};\n\n// all registered filters\nconst filters = [];\n\n// loops over matching filters and passes options to each filter, returning the mapped results\nconst applyFilterChain = (key, value, utils) =>\n    new Promise((resolve, reject) => {\n        // find matching filters for this key\n        const matchingFilters = filters.filter(f => f.key === key).map(f => f.cb);\n\n        // resolve now\n        if (matchingFilters.length === 0) {\n            resolve(value);\n            return;\n        }\n\n        // first filter to kick things of\n        const initialFilter = matchingFilters.shift();\n\n        // chain filters\n        matchingFilters\n            .reduce(\n                // loop over promises passing value to next promise\n                (current, next) => current.then(value => next(value, utils)),\n\n                // call initial filter, will return a promise\n                initialFilter(value, utils)\n\n                // all executed\n            )\n            .then(value => resolve(value))\n            .catch(error => reject(error));\n    });\n\nconst applyFilters = (key, value, utils) =>\n    filters.filter(f => f.key === key).map(f => f.cb(value, utils));\n\n// adds a new filter to the list\nconst addFilter = (key, cb) => filters.push({ key, cb });\n\nconst extendDefaultOptions = additionalOptions => Object.assign(defaultOptions, additionalOptions);\n\nconst getOptions = () => ({ ...defaultOptions });\n\nconst setOptions = opts => {\n    forin(opts, (key, value) => {\n        // key does not exist, so this option cannot be set\n        if (!defaultOptions[key]) {\n            return;\n        }\n        defaultOptions[key][0] = getValueByType(\n            value,\n            defaultOptions[key][0],\n            defaultOptions[key][1]\n        );\n    });\n};\n\n// default options on app\nconst defaultOptions = {\n    // the id to add to the root element\n    id: [null, Type.STRING],\n\n    // input field name to use\n    name: ['filepond', Type.STRING],\n\n    // disable the field\n    disabled: [false, Type.BOOLEAN],\n\n    // classname to put on wrapper\n    className: [null, Type.STRING],\n\n    // is the field required\n    required: [false, Type.BOOLEAN],\n\n    // Allow media capture when value is set\n    captureMethod: [null, Type.STRING],\n    // - \"camera\", \"microphone\" or \"camcorder\",\n    // - Does not work with multiple on apple devices\n    // - If set, acceptedFileTypes must be made to match with media wildcard \"image/*\", \"audio/*\" or \"video/*\"\n\n    // sync `acceptedFileTypes` property with `accept` attribute\n    allowSyncAcceptAttribute: [true, Type.BOOLEAN],\n\n    // Feature toggles\n    allowDrop: [true, Type.BOOLEAN], // Allow dropping of files\n    allowBrowse: [true, Type.BOOLEAN], // Allow browsing the file system\n    allowPaste: [true, Type.BOOLEAN], // Allow pasting files\n    allowMultiple: [false, Type.BOOLEAN], // Allow multiple files (disabled by default, as multiple attribute is also required on input to allow multiple)\n    allowReplace: [true, Type.BOOLEAN], // Allow dropping a file on other file to replace it (only works when multiple is set to false)\n    allowRevert: [true, Type.BOOLEAN], // Allows user to revert file upload\n    allowRemove: [true, Type.BOOLEAN], // Allow user to remove a file\n    allowProcess: [true, Type.BOOLEAN], // Allows user to process a file, when set to false, this removes the file upload button\n    allowReorder: [false, Type.BOOLEAN], // Allow reordering of files\n    allowDirectoriesOnly: [false, Type.BOOLEAN], // Allow only selecting directories with browse (no support for filtering dnd at this point)\n\n    // Try store file if `server` not set\n    storeAsFile: [false, Type.BOOLEAN],\n\n    // Revert mode\n    forceRevert: [false, Type.BOOLEAN], // Set to 'force' to require the file to be reverted before removal\n\n    // Input requirements\n    maxFiles: [null, Type.INT], // Max number of files\n    checkValidity: [false, Type.BOOLEAN], // Enables custom validity messages\n\n    // Where to put file\n    itemInsertLocationFreedom: [true, Type.BOOLEAN], // Set to false to always add items to begin or end of list\n    itemInsertLocation: ['before', Type.STRING], // Default index in list to add items that have been dropped at the top of the list\n    itemInsertInterval: [75, Type.INT],\n\n    // Drag 'n Drop related\n    dropOnPage: [false, Type.BOOLEAN], // Allow dropping of files anywhere on page (prevents browser from opening file if dropped outside of Up)\n    dropOnElement: [true, Type.BOOLEAN], // Drop needs to happen on element (set to false to also load drops outside of Up)\n    dropValidation: [false, Type.BOOLEAN], // Enable or disable validating files on drop\n    ignoredFiles: [['.ds_store', 'thumbs.db', 'desktop.ini'], Type.ARRAY],\n\n    // Upload related\n    instantUpload: [true, Type.BOOLEAN], // Should upload files immediately on drop\n    maxParallelUploads: [2, Type.INT], // Maximum files to upload in parallel\n    allowMinimumUploadDuration: [true, Type.BOOLEAN], // if true uploads take at least 750 ms, this ensures the user sees the upload progress giving trust the upload actually happened\n\n    // Chunks\n    chunkUploads: [false, Type.BOOLEAN], // Enable chunked uploads\n    chunkForce: [false, Type.BOOLEAN], // Force use of chunk uploads even for files smaller than chunk size\n    chunkSize: [5000000, Type.INT], // Size of chunks (5MB default)\n    chunkRetryDelays: [[500, 1000, 3000], Type.ARRAY], // Amount of times to retry upload of a chunk when it fails\n\n    // The server api end points to use for uploading (see docs)\n    server: [null, Type.SERVER_API],\n\n    // File size calculations, can set to 1024, this is only used for display, properties use file size base 1000\n    fileSizeBase: [1000, Type.INT],\n\n    // Labels and status messages\n    labelFileSizeBytes: ['bytes', Type.STRING],\n    labelFileSizeKilobytes: ['KB', Type.STRING],\n    labelFileSizeMegabytes: ['MB', Type.STRING],\n    labelFileSizeGigabytes: ['GB', Type.STRING],\n\n    labelDecimalSeparator: [getDecimalSeparator(), Type.STRING], // Default is locale separator\n    labelThousandsSeparator: [getThousandsSeparator(), Type.STRING], // Default is locale separator\n\n    labelIdle: [\n        'Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>',\n        Type.STRING,\n    ],\n    labelInvalidField: ['Field contains invalid files', Type.STRING],\n    labelFileWaitingForSize: ['Waiting for size', Type.STRING],\n    labelFileSizeNotAvailable: ['Size not available', Type.STRING],\n    labelFileCountSingular: ['file in list', Type.STRING],\n    labelFileCountPlural: ['files in list', Type.STRING],\n    labelFileLoading: ['Loading', Type.STRING],\n    labelFileAdded: ['Added', Type.STRING], // assistive only\n    labelFileLoadError: ['Error during load', Type.STRING],\n    labelFileRemoved: ['Removed', Type.STRING], // assistive only\n    labelFileRemoveError: ['Error during remove', Type.STRING],\n    labelFileProcessing: ['Uploading', Type.STRING],\n    labelFileProcessingComplete: ['Upload complete', Type.STRING],\n    labelFileProcessingAborted: ['Upload cancelled', Type.STRING],\n    labelFileProcessingError: ['Error during upload', Type.STRING],\n    labelFileProcessingRevertError: ['Error during revert', Type.STRING],\n\n    labelTapToCancel: ['tap to cancel', Type.STRING],\n    labelTapToRetry: ['tap to retry', Type.STRING],\n    labelTapToUndo: ['tap to undo', Type.STRING],\n\n    labelButtonRemoveItem: ['Remove', Type.STRING],\n    labelButtonAbortItemLoad: ['Abort', Type.STRING],\n    labelButtonRetryItemLoad: ['Retry', Type.STRING],\n    labelButtonAbortItemProcessing: ['Cancel', Type.STRING],\n    labelButtonUndoItemProcessing: ['Undo', Type.STRING],\n    labelButtonRetryItemProcessing: ['Retry', Type.STRING],\n    labelButtonProcessItem: ['Upload', Type.STRING],\n\n    // make sure width and height plus viewpox are even numbers so icons are nicely centered\n    iconRemove: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.586 13l-2.293 2.293a1 1 0 0 0 1.414 1.414L13 14.414l2.293 2.293a1 1 0 0 0 1.414-1.414L14.414 13l2.293-2.293a1 1 0 0 0-1.414-1.414L13 11.586l-2.293-2.293a1 1 0 0 0-1.414 1.414L11.586 13z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconProcess: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 10.414v3.585a1 1 0 0 1-2 0v-3.585l-1.293 1.293a1 1 0 0 1-1.414-1.415l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.415L14 10.414zM9 18a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2H9z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>',\n        Type.STRING,\n    ],\n    iconRetry: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.81 9.185l-.038.02A4.997 4.997 0 0 0 8 13.683a5 5 0 0 0 5 5 5 5 0 0 0 5-5 1 1 0 0 1 2 0A7 7 0 1 1 9.722 7.496l-.842-.21a.999.999 0 1 1 .484-1.94l3.23.806c.535.133.86.675.73 1.21l-.804 3.233a.997.997 0 0 1-1.21.73.997.997 0 0 1-.73-1.21l.23-.928v-.002z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconUndo: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.185 10.81l.02-.038A4.997 4.997 0 0 1 13.683 8a5 5 0 0 1 5 5 5 5 0 0 1-5 5 1 1 0 0 0 0 2A7 7 0 1 0 7.496 9.722l-.21-.842a.999.999 0 1 0-1.94.484l.806 3.23c.133.535.675.86 1.21.73l3.233-.803a.997.997 0 0 0 .73-1.21.997.997 0 0 0-1.21-.73l-.928.23-.002-.001z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconDone: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.293 9.293a1 1 0 0 1 1.414 1.414l-7.002 7a1 1 0 0 1-1.414 0l-3.998-4a1 1 0 1 1 1.414-1.414L12 15.586l6.294-6.293z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n\n    // event handlers\n    oninit: [null, Type.FUNCTION],\n    onwarning: [null, Type.FUNCTION],\n    onerror: [null, Type.FUNCTION],\n    onactivatefile: [null, Type.FUNCTION],\n    oninitfile: [null, Type.FUNCTION],\n    onaddfilestart: [null, Type.FUNCTION],\n    onaddfileprogress: [null, Type.FUNCTION],\n    onaddfile: [null, Type.FUNCTION],\n    onprocessfilestart: [null, Type.FUNCTION],\n    onprocessfileprogress: [null, Type.FUNCTION],\n    onprocessfileabort: [null, Type.FUNCTION],\n    onprocessfilerevert: [null, Type.FUNCTION],\n    onprocessfile: [null, Type.FUNCTION],\n    onprocessfiles: [null, Type.FUNCTION],\n    onremovefile: [null, Type.FUNCTION],\n    onpreparefile: [null, Type.FUNCTION],\n    onupdatefiles: [null, Type.FUNCTION],\n    onreorderfiles: [null, Type.FUNCTION],\n\n    // hooks\n    beforeDropFile: [null, Type.FUNCTION],\n    beforeAddFile: [null, Type.FUNCTION],\n    beforeRemoveFile: [null, Type.FUNCTION],\n    beforePrepareFile: [null, Type.FUNCTION],\n\n    // styles\n    stylePanelLayout: [null, Type.STRING], // null 'integrated', 'compact', 'circle'\n    stylePanelAspectRatio: [null, Type.STRING], // null or '3:2' or 1\n    styleItemPanelAspectRatio: [null, Type.STRING],\n    styleButtonRemoveItemPosition: ['left', Type.STRING],\n    styleButtonProcessItemPosition: ['right', Type.STRING],\n    styleLoadIndicatorPosition: ['right', Type.STRING],\n    styleProgressIndicatorPosition: ['right', Type.STRING],\n    styleButtonRemoveItemAlign: [false, Type.BOOLEAN],\n\n    // custom initial files array\n    files: [[], Type.ARRAY],\n\n    // show support by displaying credits\n    credits: [['https://pqina.nl/', 'Powered by PQINA'], Type.ARRAY],\n};\n\nconst getItemByQuery = (items, query) => {\n    // just return first index\n    if (isEmpty(query)) {\n        return items[0] || null;\n    }\n\n    // query is index\n    if (isInt(query)) {\n        return items[query] || null;\n    }\n\n    // if query is item, get the id\n    if (typeof query === 'object') {\n        query = query.id;\n    }\n\n    // assume query is a string and return item by id\n    return items.find(item => item.id === query) || null;\n};\n\nconst getNumericAspectRatioFromString = aspectRatio => {\n    if (isEmpty(aspectRatio)) {\n        return aspectRatio;\n    }\n    if (/:/.test(aspectRatio)) {\n        const parts = aspectRatio.split(':');\n        return parts[1] / parts[0];\n    }\n    return parseFloat(aspectRatio);\n};\n\nconst getActiveItems = items => items.filter(item => !item.archived);\n\nconst Status = {\n    EMPTY: 0,\n    IDLE: 1, // waiting\n    ERROR: 2, // a file is in error state\n    BUSY: 3, // busy processing or loading\n    READY: 4, // all files uploaded\n};\n\nlet res = null;\nconst canUpdateFileInput = () => {\n    if (res === null) {\n        try {\n            const dataTransfer = new DataTransfer();\n            dataTransfer.items.add(new File(['hello world'], 'This_Works.txt'));\n            const el = document.createElement('input');\n            el.setAttribute('type', 'file');\n            el.files = dataTransfer.files;\n            res = el.files.length === 1;\n        } catch (err) {\n            res = false;\n        }\n    }\n    return res;\n};\n\nconst ITEM_ERROR = [\n    ItemStatus.LOAD_ERROR,\n    ItemStatus.PROCESSING_ERROR,\n    ItemStatus.PROCESSING_REVERT_ERROR,\n];\nconst ITEM_BUSY = [\n    ItemStatus.LOADING,\n    ItemStatus.PROCESSING,\n    ItemStatus.PROCESSING_QUEUED,\n    ItemStatus.INIT,\n];\nconst ITEM_READY = [ItemStatus.PROCESSING_COMPLETE];\n\nconst isItemInErrorState = item => ITEM_ERROR.includes(item.status);\nconst isItemInBusyState = item => ITEM_BUSY.includes(item.status);\nconst isItemInReadyState = item => ITEM_READY.includes(item.status);\n\nconst isAsync = state =>\n    isObject(state.options.server) &&\n    (isObject(state.options.server.process) || isFunction(state.options.server.process));\n\nconst queries = state => ({\n    GET_STATUS: () => {\n        const items = getActiveItems(state.items);\n\n        const { EMPTY, ERROR, BUSY, IDLE, READY } = Status;\n\n        if (items.length === 0) return EMPTY;\n\n        if (items.some(isItemInErrorState)) return ERROR;\n\n        if (items.some(isItemInBusyState)) return BUSY;\n\n        if (items.some(isItemInReadyState)) return READY;\n\n        return IDLE;\n    },\n\n    GET_ITEM: query => getItemByQuery(state.items, query),\n\n    GET_ACTIVE_ITEM: query => getItemByQuery(getActiveItems(state.items), query),\n\n    GET_ACTIVE_ITEMS: () => getActiveItems(state.items),\n\n    GET_ITEMS: () => state.items,\n\n    GET_ITEM_NAME: query => {\n        const item = getItemByQuery(state.items, query);\n        return item ? item.filename : null;\n    },\n\n    GET_ITEM_SIZE: query => {\n        const item = getItemByQuery(state.items, query);\n        return item ? item.fileSize : null;\n    },\n\n    GET_STYLES: () =>\n        Object.keys(state.options)\n            .filter(key => /^style/.test(key))\n            .map(option => ({\n                name: option,\n                value: state.options[option],\n            })),\n\n    GET_PANEL_ASPECT_RATIO: () => {\n        const isShapeCircle = /circle/.test(state.options.stylePanelLayout);\n        const aspectRatio = isShapeCircle\n            ? 1\n            : getNumericAspectRatioFromString(state.options.stylePanelAspectRatio);\n        return aspectRatio;\n    },\n\n    GET_ITEM_PANEL_ASPECT_RATIO: () => state.options.styleItemPanelAspectRatio,\n\n    GET_ITEMS_BY_STATUS: status =>\n        getActiveItems(state.items).filter(item => item.status === status),\n\n    GET_TOTAL_ITEMS: () => getActiveItems(state.items).length,\n\n    SHOULD_UPDATE_FILE_INPUT: () =>\n        state.options.storeAsFile && canUpdateFileInput() && !isAsync(state),\n\n    IS_ASYNC: () => isAsync(state),\n\n    GET_FILE_SIZE_LABELS: query => ({\n        labelBytes: query('GET_LABEL_FILE_SIZE_BYTES') || undefined,\n        labelKilobytes: query('GET_LABEL_FILE_SIZE_KILOBYTES') || undefined,\n        labelMegabytes: query('GET_LABEL_FILE_SIZE_MEGABYTES') || undefined,\n        labelGigabytes: query('GET_LABEL_FILE_SIZE_GIGABYTES') || undefined,\n    }),\n});\n\nconst hasRoomForItem = state => {\n    const count = getActiveItems(state.items).length;\n\n    // if cannot have multiple items, to add one item it should currently not contain items\n    if (!state.options.allowMultiple) {\n        return count === 0;\n    }\n\n    // if allows multiple items, we check if a max item count has been set, if not, there's no limit\n    const maxFileCount = state.options.maxFiles;\n    if (maxFileCount === null) {\n        return true;\n    }\n\n    // we check if the current count is smaller than the max count, if so, another file can still be added\n    if (count < maxFileCount) {\n        return true;\n    }\n\n    // no more room for another file\n    return false;\n};\n\nconst limit = (value, min, max) => Math.max(Math.min(max, value), min);\n\nconst arrayInsert = (arr, index, item) => arr.splice(index, 0, item);\n\nconst insertItem = (items, item, index) => {\n    if (isEmpty(item)) {\n        return null;\n    }\n\n    // if index is undefined, append\n    if (typeof index === 'undefined') {\n        items.push(item);\n        return item;\n    }\n\n    // limit the index to the size of the items array\n    index = limit(index, 0, items.length);\n\n    // add item to array\n    arrayInsert(items, index, item);\n\n    // expose\n    return item;\n};\n\nconst isBase64DataURI = str =>\n    /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i.test(\n        str\n    );\n\nconst getFilenameFromURL = url =>\n    `${url}`\n        .split('/')\n        .pop()\n        .split('?')\n        .shift();\n\nconst getExtensionFromFilename = name => name.split('.').pop();\n\nconst guesstimateExtension = type => {\n    // if no extension supplied, exit here\n    if (typeof type !== 'string') {\n        return '';\n    }\n\n    // get subtype\n    const subtype = type.split('/').pop();\n\n    // is svg subtype\n    if (/svg/.test(subtype)) {\n        return 'svg';\n    }\n\n    if (/zip|compressed/.test(subtype)) {\n        return 'zip';\n    }\n\n    if (/plain/.test(subtype)) {\n        return 'txt';\n    }\n\n    if (/msword/.test(subtype)) {\n        return 'doc';\n    }\n\n    // if is valid subtype\n    if (/[a-z]+/.test(subtype)) {\n        // always use jpg extension\n        if (subtype === 'jpeg') {\n            return 'jpg';\n        }\n\n        // return subtype\n        return subtype;\n    }\n\n    return '';\n};\n\nconst leftPad = (value, padding = '') => (padding + value).slice(-padding.length);\n\nconst getDateString = (date = new Date()) =>\n    `${date.getFullYear()}-${leftPad(date.getMonth() + 1, '00')}-${leftPad(\n        date.getDate(),\n        '00'\n    )}_${leftPad(date.getHours(), '00')}-${leftPad(date.getMinutes(), '00')}-${leftPad(\n        date.getSeconds(),\n        '00'\n    )}`;\n\nconst getFileFromBlob = (blob, filename, type = null, extension = null) => {\n    const file =\n        typeof type === 'string'\n            ? blob.slice(0, blob.size, type)\n            : blob.slice(0, blob.size, blob.type);\n    file.lastModifiedDate = new Date();\n\n    // copy relative path\n    if (blob._relativePath) file._relativePath = blob._relativePath;\n\n    // if blob has name property, use as filename if no filename supplied\n    if (!isString(filename)) {\n        filename = getDateString();\n    }\n\n    // if filename supplied but no extension and filename has extension\n    if (filename && extension === null && getExtensionFromFilename(filename)) {\n        file.name = filename;\n    } else {\n        extension = extension || guesstimateExtension(file.type);\n        file.name = filename + (extension ? '.' + extension : '');\n    }\n\n    return file;\n};\n\nconst getBlobBuilder = () => {\n    return (window.BlobBuilder =\n        window.BlobBuilder ||\n        window.WebKitBlobBuilder ||\n        window.MozBlobBuilder ||\n        window.MSBlobBuilder);\n};\n\nconst createBlob = (arrayBuffer, mimeType) => {\n    const BB = getBlobBuilder();\n\n    if (BB) {\n        const bb = new BB();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mimeType);\n    }\n\n    return new Blob([arrayBuffer], {\n        type: mimeType,\n    });\n};\n\nconst getBlobFromByteStringWithMimeType = (byteString, mimeType) => {\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    return createBlob(ab, mimeType);\n};\n\nconst getMimeTypeFromBase64DataURI = dataURI => {\n    return (/^data:(.+);/.exec(dataURI) || [])[1] || null;\n};\n\nconst getBase64DataFromBase64DataURI = dataURI => {\n    // get data part of string (remove data:image/jpeg...,)\n    const data = dataURI.split(',')[1];\n\n    // remove any whitespace as that causes InvalidCharacterError in IE\n    return data.replace(/\\s/g, '');\n};\n\nconst getByteStringFromBase64DataURI = dataURI => {\n    return atob(getBase64DataFromBase64DataURI(dataURI));\n};\n\nconst getBlobFromBase64DataURI = dataURI => {\n    const mimeType = getMimeTypeFromBase64DataURI(dataURI);\n    const byteString = getByteStringFromBase64DataURI(dataURI);\n\n    return getBlobFromByteStringWithMimeType(byteString, mimeType);\n};\n\nconst getFileFromBase64DataURI = (dataURI, filename, extension) => {\n    return getFileFromBlob(getBlobFromBase64DataURI(dataURI), filename, null, extension);\n};\n\nconst getFileNameFromHeader = header => {\n    // test if is content disposition header, if not exit\n    if (!/^content-disposition:/i.test(header)) return null;\n\n    // get filename parts\n    const matches = header\n        .split(/filename=|filename\\*=.+''/)\n        .splice(1)\n        .map(name => name.trim().replace(/^[\"']|[;\"']{0,2}$/g, ''))\n        .filter(name => name.length);\n\n    return matches.length ? decodeURI(matches[matches.length - 1]) : null;\n};\n\nconst getFileSizeFromHeader = header => {\n    if (/content-length:/i.test(header)) {\n        const size = header.match(/[0-9]+/)[0];\n        return size ? parseInt(size, 10) : null;\n    }\n    return null;\n};\n\nconst getTranfserIdFromHeader = header => {\n    if (/x-content-transfer-id:/i.test(header)) {\n        const id = (header.split(':')[1] || '').trim();\n        return id || null;\n    }\n    return null;\n};\n\nconst getFileInfoFromHeaders = headers => {\n    const info = {\n        source: null,\n        name: null,\n        size: null,\n    };\n\n    const rows = headers.split('\\n');\n    for (let header of rows) {\n        const name = getFileNameFromHeader(header);\n        if (name) {\n            info.name = name;\n            continue;\n        }\n\n        const size = getFileSizeFromHeader(header);\n        if (size) {\n            info.size = size;\n            continue;\n        }\n\n        const source = getTranfserIdFromHeader(header);\n        if (source) {\n            info.source = source;\n            continue;\n        }\n    }\n\n    return info;\n};\n\nconst createFileLoader = fetchFn => {\n    const state = {\n        source: null,\n        complete: false,\n        progress: 0,\n        size: null,\n        timestamp: null,\n        duration: 0,\n        request: null,\n    };\n\n    const getProgress = () => state.progress;\n    const abort = () => {\n        if (state.request && state.request.abort) {\n            state.request.abort();\n        }\n    };\n\n    // load source\n    const load = () => {\n        // get quick reference\n        const source = state.source;\n\n        api.fire('init', source);\n\n        // Load Files\n        if (source instanceof File) {\n            api.fire('load', source);\n        } else if (source instanceof Blob) {\n            // Load blobs, set default name to current date\n            api.fire('load', getFileFromBlob(source, source.name));\n        } else if (isBase64DataURI(source)) {\n            // Load base 64, set default name to current date\n            api.fire('load', getFileFromBase64DataURI(source));\n        } else {\n            // Deal as if is external URL, let's load it!\n            loadURL(source);\n        }\n    };\n\n    // loads a url\n    const loadURL = url => {\n        // is remote url and no fetch method supplied\n        if (!fetchFn) {\n            api.fire('error', {\n                type: 'error',\n                body: \"Can't load URL\",\n                code: 400,\n            });\n            return;\n        }\n\n        // set request start\n        state.timestamp = Date.now();\n\n        // load file\n        state.request = fetchFn(\n            url,\n            response => {\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // done!\n                state.complete = true;\n\n                // turn blob response into a file\n                if (response instanceof Blob) {\n                    response = getFileFromBlob(response, response.name || getFilenameFromURL(url));\n                }\n\n                api.fire(\n                    'load',\n                    // if has received blob, we go with blob, if no response, we return null\n                    response instanceof Blob ? response : response ? response.body : null\n                );\n            },\n            error => {\n                api.fire(\n                    'error',\n                    typeof error === 'string'\n                        ? {\n                              type: 'error',\n                              code: 0,\n                              body: error,\n                          }\n                        : error\n                );\n            },\n            (computable, current, total) => {\n                // collected some meta data already\n                if (total) {\n                    state.size = total;\n                }\n\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // if we can't compute progress, we're not going to fire progress events\n                if (!computable) {\n                    state.progress = null;\n                    return;\n                }\n\n                // update progress percentage\n                state.progress = current / total;\n\n                // expose\n                api.fire('progress', state.progress);\n            },\n            () => {\n                api.fire('abort');\n            },\n            response => {\n                const fileinfo = getFileInfoFromHeaders(\n                    typeof response === 'string' ? response : response.headers\n                );\n                api.fire('meta', {\n                    size: state.size || fileinfo.size,\n                    filename: fileinfo.name,\n                    source: fileinfo.source,\n                });\n            }\n        );\n    };\n\n    const api = {\n        ...on(),\n        setSource: source => (state.source = source),\n        getProgress, // file load progress\n        abort, // abort file load\n        load, // start load\n    };\n\n    return api;\n};\n\nconst isGet = method => /GET|HEAD/.test(method);\n\nconst sendRequest = (data, url, options) => {\n    const api = {\n        onheaders: () => {},\n        onprogress: () => {},\n        onload: () => {},\n        ontimeout: () => {},\n        onerror: () => {},\n        onabort: () => {},\n        abort: () => {\n            aborted = true;\n            xhr.abort();\n        },\n    };\n\n    // timeout identifier, only used when timeout is defined\n    let aborted = false;\n    let headersReceived = false;\n\n    // set default options\n    options = {\n        method: 'POST',\n        headers: {},\n        withCredentials: false,\n        ...options,\n    };\n\n    // encode url\n    url = encodeURI(url);\n\n    // if method is GET, add any received data to url\n\n    if (isGet(options.method) && data) {\n        url = `${url}${encodeURIComponent(typeof data === 'string' ? data : JSON.stringify(data))}`;\n    }\n\n    // create request\n    const xhr = new XMLHttpRequest();\n\n    // progress of load\n    const process = isGet(options.method) ? xhr : xhr.upload;\n    process.onprogress = e => {\n        // no progress event when aborted ( onprogress is called once after abort() )\n        if (aborted) {\n            return;\n        }\n\n        api.onprogress(e.lengthComputable, e.loaded, e.total);\n    };\n\n    // tries to get header info to the app as fast as possible\n    xhr.onreadystatechange = () => {\n        // not interesting in these states ('unsent' and 'openend' as they don't give us any additional info)\n        if (xhr.readyState < 2) {\n            return;\n        }\n\n        // no server response\n        if (xhr.readyState === 4 && xhr.status === 0) {\n            return;\n        }\n\n        if (headersReceived) {\n            return;\n        }\n\n        headersReceived = true;\n\n        // we've probably received some useful data in response headers\n        api.onheaders(xhr);\n    };\n\n    // load successful\n    xhr.onload = () => {\n        // is classified as valid response\n        if (xhr.status >= 200 && xhr.status < 300) {\n            api.onload(xhr);\n        } else {\n            api.onerror(xhr);\n        }\n    };\n\n    // error during load\n    xhr.onerror = () => api.onerror(xhr);\n\n    // request aborted\n    xhr.onabort = () => {\n        aborted = true;\n        api.onabort();\n    };\n\n    // request timeout\n    xhr.ontimeout = () => api.ontimeout(xhr);\n\n    // open up open up!\n    xhr.open(options.method, url, true);\n\n    // set timeout if defined (do it after open so IE11 plays ball)\n    if (isInt(options.timeout)) {\n        xhr.timeout = options.timeout;\n    }\n\n    // add headers\n    Object.keys(options.headers).forEach(key => {\n        const value = unescape(encodeURIComponent(options.headers[key]));\n        xhr.setRequestHeader(key, value);\n    });\n\n    // set type of response\n    if (options.responseType) {\n        xhr.responseType = options.responseType;\n    }\n\n    // set credentials\n    if (options.withCredentials) {\n        xhr.withCredentials = true;\n    }\n\n    // let's send our data\n    xhr.send(data);\n\n    return api;\n};\n\nconst createResponse = (type, code, body, headers) => ({\n    type,\n    code,\n    body,\n    headers,\n});\n\nconst createTimeoutResponse = cb => xhr => {\n    cb(createResponse('error', 0, 'Timeout', xhr.getAllResponseHeaders()));\n};\n\nconst hasQS = str => /\\?/.test(str);\nconst buildURL = (...parts) => {\n    let url = '';\n    parts.forEach(part => {\n        url += hasQS(url) && hasQS(part) ? part.replace(/\\?/, '&') : part;\n    });\n    return url;\n};\n\nconst createFetchFunction = (apiUrl = '', action) => {\n    // custom handler (should also handle file, load, error, progress and abort)\n    if (typeof action === 'function') {\n        return action;\n    }\n\n    // no action supplied\n    if (!action || !isString(action.url)) {\n        return null;\n    }\n\n    // set onload hanlder\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    // internal handler\n    return (url, load, error, progress, abort, headers) => {\n        // do local or remote request based on if the url is external\n        const request = sendRequest(url, buildURL(apiUrl, action.url), {\n            ...action,\n            responseType: 'blob',\n        });\n\n        request.onload = xhr => {\n            // get headers\n            const headers = xhr.getAllResponseHeaders();\n\n            // get filename\n            const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n            // create response\n            load(\n                createResponse(\n                    'load',\n                    xhr.status,\n                    action.method === 'HEAD'\n                        ? null\n                        : getFileFromBlob(onload(xhr.response), filename),\n                    headers\n                )\n            );\n        };\n\n        request.onerror = xhr => {\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.onheaders = xhr => {\n            headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n        };\n\n        request.ontimeout = createTimeoutResponse(error);\n        request.onprogress = progress;\n        request.onabort = abort;\n\n        // should return request\n        return request;\n    };\n};\n\nconst ChunkStatus = {\n    QUEUED: 0,\n    COMPLETE: 1,\n    PROCESSING: 2,\n    ERROR: 3,\n    WAITING: 4,\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort, transfer, options) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\n\n// apiUrl, action, name, file, metadata, load, error, progress, abort, transfer, options\nconst processFileChunked = (\n    apiUrl,\n    action,\n    name,\n    file,\n    metadata,\n    load,\n    error,\n    progress,\n    abort,\n    transfer,\n    options\n) => {\n    // all chunks\n    const chunks = [];\n    const { chunkTransferId, chunkServer, chunkSize, chunkRetryDelays } = options;\n\n    // default state\n    const state = {\n        serverId: chunkTransferId,\n        aborted: false,\n    };\n\n    // set onload handlers\n    const ondata = action.ondata || (fd => fd);\n    const onload =\n        action.onload ||\n        ((xhr, method) =>\n            method === 'HEAD' ? xhr.getResponseHeader('Upload-Offset') : xhr.response);\n    const onerror = action.onerror || (res => null);\n\n    // create server hook\n    const requestTransferId = cb => {\n        const formData = new FormData();\n\n        // add metadata under same name\n        if (isObject(metadata)) formData.append(name, JSON.stringify(metadata));\n\n        const headers =\n            typeof action.headers === 'function'\n                ? action.headers(file, metadata)\n                : {\n                      ...action.headers,\n                      'Upload-Length': file.size,\n                  };\n\n        const requestParams = {\n            ...action,\n            headers,\n        };\n\n        // send request object\n        const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n\n        request.onload = xhr => cb(onload(xhr, requestParams.method));\n\n        request.onerror = xhr =>\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n\n        request.ontimeout = createTimeoutResponse(error);\n    };\n\n    const requestTransferOffset = cb => {\n        const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n\n        const headers =\n            typeof action.headers === 'function'\n                ? action.headers(state.serverId)\n                : {\n                      ...action.headers,\n                  };\n\n        const requestParams = {\n            headers,\n            method: 'HEAD',\n        };\n\n        const request = sendRequest(null, requestUrl, requestParams);\n\n        request.onload = xhr => cb(onload(xhr, requestParams.method));\n\n        request.onerror = xhr =>\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n\n        request.ontimeout = createTimeoutResponse(error);\n    };\n\n    // create chunks\n    const lastChunkIndex = Math.floor(file.size / chunkSize);\n    for (let i = 0; i <= lastChunkIndex; i++) {\n        const offset = i * chunkSize;\n        const data = file.slice(offset, offset + chunkSize, 'application/offset+octet-stream');\n        chunks[i] = {\n            index: i,\n            size: data.size,\n            offset,\n            data,\n            file,\n            progress: 0,\n            retries: [...chunkRetryDelays],\n            status: ChunkStatus.QUEUED,\n            error: null,\n            request: null,\n            timeout: null,\n        };\n    }\n\n    const completeProcessingChunks = () => load(state.serverId);\n\n    const canProcessChunk = chunk =>\n        chunk.status === ChunkStatus.QUEUED || chunk.status === ChunkStatus.ERROR;\n\n    const processChunk = chunk => {\n        // processing is paused, wait here\n        if (state.aborted) return;\n\n        // get next chunk to process\n        chunk = chunk || chunks.find(canProcessChunk);\n\n        // no more chunks to process\n        if (!chunk) {\n            // all done?\n            if (chunks.every(chunk => chunk.status === ChunkStatus.COMPLETE)) {\n                completeProcessingChunks();\n            }\n\n            // no chunk to handle\n            return;\n        }\n\n        // now processing this chunk\n        chunk.status = ChunkStatus.PROCESSING;\n        chunk.progress = null;\n\n        // allow parsing of formdata\n        const ondata = chunkServer.ondata || (fd => fd);\n        const onerror = chunkServer.onerror || (res => null);\n\n        // send request object\n        const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n\n        const headers =\n            typeof chunkServer.headers === 'function'\n                ? chunkServer.headers(chunk)\n                : {\n                      ...chunkServer.headers,\n                      'Content-Type': 'application/offset+octet-stream',\n                      'Upload-Offset': chunk.offset,\n                      'Upload-Length': file.size,\n                      'Upload-Name': file.name,\n                  };\n\n        const request = (chunk.request = sendRequest(ondata(chunk.data), requestUrl, {\n            ...chunkServer,\n            headers,\n        }));\n\n        request.onload = () => {\n            // done!\n            chunk.status = ChunkStatus.COMPLETE;\n\n            // remove request reference\n            chunk.request = null;\n\n            // start processing more chunks\n            processChunks();\n        };\n\n        request.onprogress = (lengthComputable, loaded, total) => {\n            chunk.progress = lengthComputable ? loaded : null;\n            updateTotalProgress();\n        };\n\n        request.onerror = xhr => {\n            chunk.status = ChunkStatus.ERROR;\n            chunk.request = null;\n            chunk.error = onerror(xhr.response) || xhr.statusText;\n            if (!retryProcessChunk(chunk)) {\n                error(\n                    createResponse(\n                        'error',\n                        xhr.status,\n                        onerror(xhr.response) || xhr.statusText,\n                        xhr.getAllResponseHeaders()\n                    )\n                );\n            }\n        };\n\n        request.ontimeout = xhr => {\n            chunk.status = ChunkStatus.ERROR;\n            chunk.request = null;\n            if (!retryProcessChunk(chunk)) {\n                createTimeoutResponse(error)(xhr);\n            }\n        };\n\n        request.onabort = () => {\n            chunk.status = ChunkStatus.QUEUED;\n            chunk.request = null;\n            abort();\n        };\n    };\n\n    const retryProcessChunk = chunk => {\n        // no more retries left\n        if (chunk.retries.length === 0) return false;\n\n        // new retry\n        chunk.status = ChunkStatus.WAITING;\n        clearTimeout(chunk.timeout);\n        chunk.timeout = setTimeout(() => {\n            processChunk(chunk);\n        }, chunk.retries.shift());\n\n        // we're going to retry\n        return true;\n    };\n\n    const updateTotalProgress = () => {\n        // calculate total progress fraction\n        const totalBytesTransfered = chunks.reduce((p, chunk) => {\n            if (p === null || chunk.progress === null) return null;\n            return p + chunk.progress;\n        }, 0);\n\n        // can't compute progress\n        if (totalBytesTransfered === null) return progress(false, 0, 0);\n\n        // calculate progress values\n        const totalSize = chunks.reduce((total, chunk) => total + chunk.size, 0);\n\n        // can update progress indicator\n        progress(true, totalBytesTransfered, totalSize);\n    };\n\n    // process new chunks\n    const processChunks = () => {\n        const totalProcessing = chunks.filter(chunk => chunk.status === ChunkStatus.PROCESSING)\n            .length;\n        if (totalProcessing >= 1) return;\n        processChunk();\n    };\n\n    const abortChunks = () => {\n        chunks.forEach(chunk => {\n            clearTimeout(chunk.timeout);\n            if (chunk.request) {\n                chunk.request.abort();\n            }\n        });\n    };\n\n    // let's go!\n    if (!state.serverId) {\n        requestTransferId(serverId => {\n            // stop here if aborted, might have happened in between request and callback\n            if (state.aborted) return;\n\n            // pass back to item so we can use it if something goes wrong\n            transfer(serverId);\n\n            // store internally\n            state.serverId = serverId;\n            processChunks();\n        });\n    } else {\n        requestTransferOffset(offset => {\n            // stop here if aborted, might have happened in between request and callback\n            if (state.aborted) return;\n\n            // mark chunks with lower offset as complete\n            chunks\n                .filter(chunk => chunk.offset < offset)\n                .forEach(chunk => {\n                    chunk.status = ChunkStatus.COMPLETE;\n                    chunk.progress = chunk.size;\n                });\n\n            // continue processing\n            processChunks();\n        });\n    }\n\n    return {\n        abort: () => {\n            state.aborted = true;\n            abortChunks();\n        },\n    };\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\nconst createFileProcessorFunction = (apiUrl, action, name, options) => (\n    file,\n    metadata,\n    load,\n    error,\n    progress,\n    abort,\n    transfer\n) => {\n    // no file received\n    if (!file) return;\n\n    // if was passed a file, and we can chunk it, exit here\n    const canChunkUpload = options.chunkUploads;\n    const shouldChunkUpload = canChunkUpload && file.size > options.chunkSize;\n    const willChunkUpload = canChunkUpload && (shouldChunkUpload || options.chunkForce);\n    if (file instanceof Blob && willChunkUpload)\n        return processFileChunked(\n            apiUrl,\n            action,\n            name,\n            file,\n            metadata,\n            load,\n            error,\n            progress,\n            abort,\n            transfer,\n            options\n        );\n\n    // set handlers\n    const ondata = action.ondata || (fd => fd);\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    const headers =\n        typeof action.headers === 'function'\n            ? action.headers(file, metadata) || {}\n            : {\n                  ...action.headers,\n              };\n\n    const requestParams = {\n        ...action,\n        headers,\n    };\n\n    // create formdata object\n    var formData = new FormData();\n\n    // add metadata under same name\n    if (isObject(metadata)) {\n        formData.append(name, JSON.stringify(metadata));\n    }\n\n    // Turn into an array of objects so no matter what the input, we can handle it the same way\n    (file instanceof Blob ? [{ name: null, file }] : file).forEach(item => {\n        formData.append(\n            name,\n            item.file,\n            item.name === null ? item.file.name : `${item.name}${item.file.name}`\n        );\n    });\n\n    // send request object\n    const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n    request.onload = xhr => {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n    };\n\n    request.onerror = xhr => {\n        error(\n            createResponse(\n                'error',\n                xhr.status,\n                onerror(xhr.response) || xhr.statusText,\n                xhr.getAllResponseHeaders()\n            )\n        );\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n};\n\nconst createProcessorFunction = (apiUrl = '', action, name, options) => {\n    // custom handler (should also handle file, load, error, progress and abort)\n    if (typeof action === 'function') return (...params) => action(name, ...params, options);\n\n    // no action supplied\n    if (!action || !isString(action.url)) return null;\n\n    // internal handler\n    return createFileProcessorFunction(apiUrl, action, name, options);\n};\n\n/*\n function signature:\n (uniqueFileId, load, error) => { }\n */\nconst createRevertFunction = (apiUrl = '', action) => {\n    // is custom implementation\n    if (typeof action === 'function') {\n        return action;\n    }\n\n    // no action supplied, return stub function, interface will work, but file won't be removed\n    if (!action || !isString(action.url)) {\n        return (uniqueFileId, load) => load();\n    }\n\n    // set onload hanlder\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    // internal implementation\n    return (uniqueFileId, load, error) => {\n        const request = sendRequest(\n            uniqueFileId,\n            apiUrl + action.url,\n            action // contains method, headers and withCredentials properties\n        );\n        request.onload = xhr => {\n            load(\n                createResponse(\n                    'load',\n                    xhr.status,\n                    onload(xhr.response),\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.onerror = xhr => {\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.ontimeout = createTimeoutResponse(error);\n\n        return request;\n    };\n};\n\nconst getRandomNumber = (min = 0, max = 1) => min + Math.random() * (max - min);\n\nconst createPerceivedPerformanceUpdater = (\n    cb,\n    duration = 1000,\n    offset = 0,\n    tickMin = 25,\n    tickMax = 250\n) => {\n    let timeout = null;\n    const start = Date.now();\n\n    const tick = () => {\n        let runtime = Date.now() - start;\n        let delay = getRandomNumber(tickMin, tickMax);\n\n        if (runtime + delay > duration) {\n            delay = runtime + delay - duration;\n        }\n\n        let progress = runtime / duration;\n        if (progress >= 1 || document.hidden) {\n            cb(1);\n            return;\n        }\n\n        cb(progress);\n\n        timeout = setTimeout(tick, delay);\n    };\n\n    if (duration > 0) tick();\n\n    return {\n        clear: () => {\n            clearTimeout(timeout);\n        },\n    };\n};\n\nconst createFileProcessor = (processFn, options) => {\n    const state = {\n        complete: false,\n        perceivedProgress: 0,\n        perceivedPerformanceUpdater: null,\n        progress: null,\n        timestamp: null,\n        perceivedDuration: 0,\n        duration: 0,\n        request: null,\n        response: null,\n    };\n\n    const { allowMinimumUploadDuration } = options;\n\n    const process = (file, metadata) => {\n        const progressFn = () => {\n            // we've not yet started the real download, stop here\n            // the request might not go through, for instance, there might be some server trouble\n            // if state.progress is null, the server does not allow computing progress and we show the spinner instead\n            if (state.duration === 0 || state.progress === null) return;\n\n            // as we're now processing, fire the progress event\n            api.fire('progress', api.getProgress());\n        };\n\n        const completeFn = () => {\n            state.complete = true;\n            api.fire('load-perceived', state.response.body);\n        };\n\n        // let's start processing\n        api.fire('start');\n\n        // set request start\n        state.timestamp = Date.now();\n\n        // create perceived performance progress indicator\n        state.perceivedPerformanceUpdater = createPerceivedPerformanceUpdater(\n            progress => {\n                state.perceivedProgress = progress;\n                state.perceivedDuration = Date.now() - state.timestamp;\n\n                progressFn();\n\n                // if fake progress is done, and a response has been received,\n                // and we've not yet called the complete method\n                if (state.response && state.perceivedProgress === 1 && !state.complete) {\n                    // we done!\n                    completeFn();\n                }\n            },\n            // random delay as in a list of files you start noticing\n            // files uploading at the exact same speed\n            allowMinimumUploadDuration ? getRandomNumber(750, 1500) : 0\n        );\n\n        // remember request so we can abort it later\n        state.request = processFn(\n            // the file to process\n            file,\n\n            // the metadata to send along\n            metadata,\n\n            // callbacks (load, error, progress, abort, transfer)\n            // load expects the body to be a server id if\n            // you want to make use of revert\n            response => {\n                // we put the response in state so we can access\n                // it outside of this method\n                state.response = isObject(response)\n                    ? response\n                    : {\n                          type: 'load',\n                          code: 200,\n                          body: `${response}`,\n                          headers: {},\n                      };\n\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // force progress to 1 as we're now done\n                state.progress = 1;\n\n                // actual load is done let's share results\n                api.fire('load', state.response.body);\n\n                // we are really done\n                // if perceived progress is 1 ( wait for perceived progress to complete )\n                // or if server does not support progress ( null )\n                if (\n                    !allowMinimumUploadDuration ||\n                    (allowMinimumUploadDuration && state.perceivedProgress === 1)\n                ) {\n                    completeFn();\n                }\n            },\n\n            // error is expected to be an object with type, code, body\n            error => {\n                // cancel updater\n                state.perceivedPerformanceUpdater.clear();\n\n                // update others about this error\n                api.fire(\n                    'error',\n                    isObject(error)\n                        ? error\n                        : {\n                              type: 'error',\n                              code: 0,\n                              body: `${error}`,\n                          }\n                );\n            },\n\n            // actual processing progress\n            (computable, current, total) => {\n                // update actual duration\n                state.duration = Date.now() - state.timestamp;\n\n                // update actual progress\n                state.progress = computable ? current / total : null;\n\n                progressFn();\n            },\n\n            // abort does not expect a value\n            () => {\n                // stop updater\n                state.perceivedPerformanceUpdater.clear();\n\n                // fire the abort event so we can switch visuals\n                api.fire('abort', state.response ? state.response.body : null);\n            },\n\n            // register the id for this transfer\n            transferId => {\n                api.fire('transfer', transferId);\n            }\n        );\n    };\n\n    const abort = () => {\n        // no request running, can't abort\n        if (!state.request) return;\n\n        // stop updater\n        state.perceivedPerformanceUpdater.clear();\n\n        // abort actual request\n        if (state.request.abort) state.request.abort();\n\n        // if has response object, we've completed the request\n        state.complete = true;\n    };\n\n    const reset = () => {\n        abort();\n        state.complete = false;\n        state.perceivedProgress = 0;\n        state.progress = 0;\n        state.timestamp = null;\n        state.perceivedDuration = 0;\n        state.duration = 0;\n        state.request = null;\n        state.response = null;\n    };\n\n    const getProgress = allowMinimumUploadDuration\n        ? () => (state.progress ? Math.min(state.progress, state.perceivedProgress) : null)\n        : () => state.progress || null;\n\n    const getDuration = allowMinimumUploadDuration\n        ? () => Math.min(state.duration, state.perceivedDuration)\n        : () => state.duration;\n\n    const api = {\n        ...on(),\n        process, // start processing file\n        abort, // abort active process request\n        getProgress,\n        getDuration,\n        reset,\n    };\n\n    return api;\n};\n\nconst getFilenameWithoutExtension = name => name.substring(0, name.lastIndexOf('.')) || name;\n\nconst createFileStub = source => {\n    let data = [source.name, source.size, source.type];\n\n    // is blob or base64, then we need to set the name\n    if (source instanceof Blob || isBase64DataURI(source)) {\n        data[0] = source.name || getDateString();\n    } else if (isBase64DataURI(source)) {\n        // if is base64 data uri we need to determine the average size and type\n        data[1] = source.length;\n        data[2] = getMimeTypeFromBase64DataURI(source);\n    } else if (isString(source)) {\n        // url\n        data[0] = getFilenameFromURL(source);\n        data[1] = 0;\n        data[2] = 'application/octet-stream';\n    }\n\n    return {\n        name: data[0],\n        size: data[1],\n        type: data[2],\n    };\n};\n\nconst isFile = value => !!(value instanceof File || (value instanceof Blob && value.name));\n\nconst deepCloneObject = src => {\n    if (!isObject(src)) return src;\n    const target = isArray(src) ? [] : {};\n    for (const key in src) {\n        if (!src.hasOwnProperty(key)) continue;\n        const v = src[key];\n        target[key] = v && isObject(v) ? deepCloneObject(v) : v;\n    }\n    return target;\n};\n\nconst createItem = (origin = null, serverFileReference = null, file = null) => {\n    // unique id for this item, is used to identify the item across views\n    const id = getUniqueId();\n\n    /**\n     * Internal item state\n     */\n    const state = {\n        // is archived\n        archived: false,\n\n        // if is frozen, no longer fires events\n        frozen: false,\n\n        // removed from view\n        released: false,\n\n        // original source\n        source: null,\n\n        // file model reference\n        file,\n\n        // id of file on server\n        serverFileReference,\n\n        // id of file transfer on server\n        transferId: null,\n\n        // is aborted\n        processingAborted: false,\n\n        // current item status\n        status: serverFileReference ? ItemStatus.PROCESSING_COMPLETE : ItemStatus.INIT,\n\n        // active processes\n        activeLoader: null,\n        activeProcessor: null,\n    };\n\n    // callback used when abort processing is called to link back to the resolve method\n    let abortProcessingRequestComplete = null;\n\n    /**\n     * Externally added item metadata\n     */\n    const metadata = {};\n\n    // item data\n    const setStatus = status => (state.status = status);\n\n    // fire event unless the item has been archived\n    const fire = (event, ...params) => {\n        if (state.released || state.frozen) return;\n        api.fire(event, ...params);\n    };\n\n    // file data\n    const getFileExtension = () => getExtensionFromFilename(state.file.name);\n    const getFileType = () => state.file.type;\n    const getFileSize = () => state.file.size;\n    const getFile = () => state.file;\n\n    //\n    // logic to load a file\n    //\n    const load = (source, loader, onload) => {\n        // remember the original item source\n        state.source = source;\n\n        // source is known\n        api.fireSync('init');\n\n        // file stub is already there\n        if (state.file) {\n            api.fireSync('load-skip');\n            return;\n        }\n\n        // set a stub file object while loading the actual data\n        state.file = createFileStub(source);\n\n        // starts loading\n        loader.on('init', () => {\n            fire('load-init');\n        });\n\n        // we'eve received a size indication, let's update the stub\n        loader.on('meta', meta => {\n            // set size of file stub\n            state.file.size = meta.size;\n\n            // set name of file stub\n            state.file.filename = meta.filename;\n\n            // if has received source, we done\n            if (meta.source) {\n                origin = FileOrigin.LIMBO;\n                state.serverFileReference = meta.source;\n                state.status = ItemStatus.PROCESSING_COMPLETE;\n            }\n\n            // size has been updated\n            fire('load-meta');\n        });\n\n        // the file is now loading we need to update the progress indicators\n        loader.on('progress', progress => {\n            setStatus(ItemStatus.LOADING);\n\n            fire('load-progress', progress);\n        });\n\n        // an error was thrown while loading the file, we need to switch to error state\n        loader.on('error', error => {\n            setStatus(ItemStatus.LOAD_ERROR);\n\n            fire('load-request-error', error);\n        });\n\n        // user or another process aborted the file load (cannot retry)\n        loader.on('abort', () => {\n            setStatus(ItemStatus.INIT);\n            fire('load-abort');\n        });\n\n        // done loading\n        loader.on('load', file => {\n            // as we've now loaded the file the loader is no longer required\n            state.activeLoader = null;\n\n            // called when file has loaded succesfully\n            const success = result => {\n                // set (possibly) transformed file\n                state.file = isFile(result) ? result : state.file;\n\n                // file received\n                if (origin === FileOrigin.LIMBO && state.serverFileReference) {\n                    setStatus(ItemStatus.PROCESSING_COMPLETE);\n                } else {\n                    setStatus(ItemStatus.IDLE);\n                }\n\n                fire('load');\n            };\n\n            const error = result => {\n                // set original file\n                state.file = file;\n                fire('load-meta');\n\n                setStatus(ItemStatus.LOAD_ERROR);\n                fire('load-file-error', result);\n            };\n\n            // if we already have a server file reference, we don't need to call the onload method\n            if (state.serverFileReference) {\n                success(file);\n                return;\n            }\n\n            // no server id, let's give this file the full treatment\n            onload(file, success, error);\n        });\n\n        // set loader source data\n        loader.setSource(source);\n\n        // set as active loader\n        state.activeLoader = loader;\n\n        // load the source data\n        loader.load();\n    };\n\n    const retryLoad = () => {\n        if (!state.activeLoader) {\n            return;\n        }\n        state.activeLoader.load();\n    };\n\n    const abortLoad = () => {\n        if (state.activeLoader) {\n            state.activeLoader.abort();\n            return;\n        }\n        setStatus(ItemStatus.INIT);\n        fire('load-abort');\n    };\n\n    //\n    // logic to process a file\n    //\n    const process = (processor, onprocess) => {\n        // processing was aborted\n        if (state.processingAborted) {\n            state.processingAborted = false;\n            return;\n        }\n\n        // now processing\n        setStatus(ItemStatus.PROCESSING);\n\n        // reset abort callback\n        abortProcessingRequestComplete = null;\n\n        // if no file loaded we'll wait for the load event\n        if (!(state.file instanceof Blob)) {\n            api.on('load', () => {\n                process(processor, onprocess);\n            });\n            return;\n        }\n\n        // setup processor\n        processor.on('load', serverFileReference => {\n            // need this id to be able to revert the upload\n            state.transferId = null;\n            state.serverFileReference = serverFileReference;\n        });\n\n        // register transfer id\n        processor.on('transfer', transferId => {\n            // need this id to be able to revert the upload\n            state.transferId = transferId;\n        });\n\n        processor.on('load-perceived', serverFileReference => {\n            // no longer required\n            state.activeProcessor = null;\n\n            // need this id to be able to rever the upload\n            state.transferId = null;\n            state.serverFileReference = serverFileReference;\n\n            setStatus(ItemStatus.PROCESSING_COMPLETE);\n            fire('process-complete', serverFileReference);\n        });\n\n        processor.on('start', () => {\n            fire('process-start');\n        });\n\n        processor.on('error', error => {\n            state.activeProcessor = null;\n            setStatus(ItemStatus.PROCESSING_ERROR);\n            fire('process-error', error);\n        });\n\n        processor.on('abort', serverFileReference => {\n            state.activeProcessor = null;\n\n            // if file was uploaded but processing was cancelled during perceived processor time store file reference\n            state.serverFileReference = serverFileReference;\n\n            setStatus(ItemStatus.IDLE);\n            fire('process-abort');\n\n            // has timeout so doesn't interfere with remove action\n            if (abortProcessingRequestComplete) {\n                abortProcessingRequestComplete();\n            }\n        });\n\n        processor.on('progress', progress => {\n            fire('process-progress', progress);\n        });\n\n        // when successfully transformed\n        const success = file => {\n            // if was archived in the mean time, don't process\n            if (state.archived) return;\n\n            // process file!\n            processor.process(file, { ...metadata });\n        };\n\n        // something went wrong during transform phase\n        const error = console.error;\n\n        // start processing the file\n        onprocess(state.file, success, error);\n\n        // set as active processor\n        state.activeProcessor = processor;\n    };\n\n    const requestProcessing = () => {\n        state.processingAborted = false;\n        setStatus(ItemStatus.PROCESSING_QUEUED);\n    };\n\n    const abortProcessing = () =>\n        new Promise(resolve => {\n            if (!state.activeProcessor) {\n                state.processingAborted = true;\n\n                setStatus(ItemStatus.IDLE);\n                fire('process-abort');\n\n                resolve();\n                return;\n            }\n\n            abortProcessingRequestComplete = () => {\n                resolve();\n            };\n\n            state.activeProcessor.abort();\n        });\n\n    //\n    // logic to revert a processed file\n    //\n    const revert = (revertFileUpload, forceRevert) =>\n        new Promise((resolve, reject) => {\n            // a completed upload will have a serverFileReference, a failed chunked upload where\n            // getting a serverId succeeded but >=0 chunks have been uploaded will have transferId set\n            const serverTransferId =\n                state.serverFileReference !== null ? state.serverFileReference : state.transferId;\n\n            // cannot revert without a server id for this process\n            if (serverTransferId === null) {\n                resolve();\n                return;\n            }\n\n            // revert the upload (fire and forget)\n            revertFileUpload(\n                serverTransferId,\n                () => {\n                    // reset file server id and transfer id as now it's not available on the server\n                    state.serverFileReference = null;\n                    state.transferId = null;\n                    resolve();\n                },\n                error => {\n                    // don't set error state when reverting is optional, it will always resolve\n                    if (!forceRevert) {\n                        resolve();\n                        return;\n                    }\n\n                    // oh no errors\n                    setStatus(ItemStatus.PROCESSING_REVERT_ERROR);\n                    fire('process-revert-error');\n                    reject(error);\n                }\n            );\n\n            // fire event\n            setStatus(ItemStatus.IDLE);\n            fire('process-revert');\n        });\n\n    // exposed methods\n    const setMetadata = (key, value, silent) => {\n        const keys = key.split('.');\n        const root = keys[0];\n        const last = keys.pop();\n        let data = metadata;\n        keys.forEach(key => (data = data[key]));\n\n        // compare old value against new value, if they're the same, we're not updating\n        if (JSON.stringify(data[last]) === JSON.stringify(value)) return;\n\n        // update value\n        data[last] = value;\n\n        // fire update\n        fire('metadata-update', {\n            key: root,\n            value: metadata[root],\n            silent,\n        });\n    };\n\n    const getMetadata = key => deepCloneObject(key ? metadata[key] : metadata);\n\n    const api = {\n        id: { get: () => id },\n        origin: { get: () => origin, set: value => (origin = value) },\n        serverId: { get: () => state.serverFileReference },\n        transferId: { get: () => state.transferId },\n        status: { get: () => state.status },\n        filename: { get: () => state.file.name },\n        filenameWithoutExtension: { get: () => getFilenameWithoutExtension(state.file.name) },\n        fileExtension: { get: getFileExtension },\n        fileType: { get: getFileType },\n        fileSize: { get: getFileSize },\n        file: { get: getFile },\n        relativePath: { get: () => state.file._relativePath },\n\n        source: { get: () => state.source },\n\n        getMetadata,\n        setMetadata: (key, value, silent) => {\n            if (isObject(key)) {\n                const data = key;\n                Object.keys(data).forEach(key => {\n                    setMetadata(key, data[key], value);\n                });\n                return key;\n            }\n            setMetadata(key, value, silent);\n            return value;\n        },\n\n        extend: (name, handler) => (itemAPI[name] = handler),\n\n        abortLoad,\n        retryLoad,\n        requestProcessing,\n        abortProcessing,\n\n        load,\n        process,\n        revert,\n\n        ...on(),\n\n        freeze: () => (state.frozen = true),\n\n        release: () => (state.released = true),\n        released: { get: () => state.released },\n\n        archive: () => (state.archived = true),\n        archived: { get: () => state.archived },\n    };\n\n    // create it here instead of returning it instantly so we can extend it later\n    const itemAPI = createObject(api);\n\n    return itemAPI;\n};\n\nconst getItemIndexByQuery = (items, query) => {\n    // just return first index\n    if (isEmpty(query)) {\n        return 0;\n    }\n\n    // invalid queries\n    if (!isString(query)) {\n        return -1;\n    }\n\n    // return item by id (or -1 if not found)\n    return items.findIndex(item => item.id === query);\n};\n\nconst getItemById = (items, itemId) => {\n    const index = getItemIndexByQuery(items, itemId);\n    if (index < 0) {\n        return;\n    }\n    return items[index] || null;\n};\n\nconst fetchBlob = (url, load, error, progress, abort, headers) => {\n    const request = sendRequest(null, url, {\n        method: 'GET',\n        responseType: 'blob',\n    });\n\n    request.onload = xhr => {\n        // get headers\n        const headers = xhr.getAllResponseHeaders();\n\n        // get filename\n        const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n        // create response\n        load(createResponse('load', xhr.status, getFileFromBlob(xhr.response, filename), headers));\n    };\n\n    request.onerror = xhr => {\n        error(createResponse('error', xhr.status, xhr.statusText, xhr.getAllResponseHeaders()));\n    };\n\n    request.onheaders = xhr => {\n        headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n};\n\nconst getDomainFromURL = url => {\n    if (url.indexOf('//') === 0) {\n        url = location.protocol + url;\n    }\n    return url\n        .toLowerCase()\n        .replace('blob:', '')\n        .replace(/([a-z])?:\\/\\//, '$1')\n        .split('/')[0];\n};\n\nconst isExternalURL = url =>\n    (url.indexOf(':') > -1 || url.indexOf('//') > -1) &&\n    getDomainFromURL(location.href) !== getDomainFromURL(url);\n\nconst dynamicLabel = label => (...params) => (isFunction(label) ? label(...params) : label);\n\nconst isMockItem = item => !isFile(item.file);\n\nconst listUpdated = (dispatch, state) => {\n    clearTimeout(state.listUpdateTimeout);\n    state.listUpdateTimeout = setTimeout(() => {\n        dispatch('DID_UPDATE_ITEMS', { items: getActiveItems(state.items) });\n    }, 0);\n};\n\nconst optionalPromise = (fn, ...params) =>\n    new Promise(resolve => {\n        if (!fn) {\n            return resolve(true);\n        }\n\n        const result = fn(...params);\n\n        if (result == null) {\n            return resolve(true);\n        }\n\n        if (typeof result === 'boolean') {\n            return resolve(result);\n        }\n\n        if (typeof result.then === 'function') {\n            result.then(resolve);\n        }\n    });\n\nconst sortItems = (state, compare) => {\n    state.items.sort((a, b) => compare(createItemAPI(a), createItemAPI(b)));\n};\n\n// returns item based on state\nconst getItemByQueryFromState = (state, itemHandler) => ({\n    query,\n    success = () => {},\n    failure = () => {},\n    ...options\n} = {}) => {\n    const item = getItemByQuery(state.items, query);\n    if (!item) {\n        failure({\n            error: createResponse('error', 0, 'Item not found'),\n            file: null,\n        });\n        return;\n    }\n    itemHandler(item, success, failure, options || {});\n};\n\nconst actions = (dispatch, query, state) => ({\n    /**\n     * Aborts all ongoing processes\n     */\n    ABORT_ALL: () => {\n        getActiveItems(state.items).forEach(item => {\n            item.freeze();\n            item.abortLoad();\n            item.abortProcessing();\n        });\n    },\n\n    /**\n     * Sets initial files\n     */\n    DID_SET_FILES: ({ value = [] }) => {\n        // map values to file objects\n        const files = value.map(file => ({\n            source: file.source ? file.source : file,\n            options: file.options,\n        }));\n\n        // loop over files, if file is in list, leave it be, if not, remove\n        // test if items should be moved\n        let activeItems = getActiveItems(state.items);\n\n        activeItems.forEach(item => {\n            // if item not is in new value, remove\n            if (!files.find(file => file.source === item.source || file.source === item.file)) {\n                dispatch('REMOVE_ITEM', { query: item, remove: false });\n            }\n        });\n\n        // add new files\n        activeItems = getActiveItems(state.items);\n        files.forEach((file, index) => {\n            // if file is already in list\n            if (activeItems.find(item => item.source === file.source || item.file === file.source))\n                return;\n\n            // not in list, add\n            dispatch('ADD_ITEM', {\n                ...file,\n                interactionMethod: InteractionMethod.NONE,\n                index,\n            });\n        });\n    },\n\n    DID_UPDATE_ITEM_METADATA: ({ id, action, change }) => {\n        // don't do anything\n        if (change.silent) return;\n\n        // if is called multiple times in close succession we combined all calls together to save resources\n        clearTimeout(state.itemUpdateTimeout);\n        state.itemUpdateTimeout = setTimeout(() => {\n            const item = getItemById(state.items, id);\n\n            // only revert and attempt to upload when we're uploading to a server\n            if (!query('IS_ASYNC')) {\n                // should we update the output data\n                applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n                    item,\n                    query,\n                    action,\n                    change,\n                }).then(shouldPrepareOutput => {\n                    // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n                    const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n                    if (beforePrepareFile)\n                        shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n\n                    if (!shouldPrepareOutput) return;\n\n                    dispatch(\n                        'REQUEST_PREPARE_OUTPUT',\n                        {\n                            query: id,\n                            item,\n                            success: file => {\n                                dispatch('DID_PREPARE_OUTPUT', { id, file });\n                            },\n                        },\n                        true\n                    );\n                });\n\n                return;\n            }\n\n            // if is local item we need to enable upload button so change can be propagated to server\n            if (item.origin === FileOrigin.LOCAL) {\n                dispatch('DID_LOAD_ITEM', {\n                    id: item.id,\n                    error: null,\n                    serverFileReference: item.source,\n                });\n            }\n\n            // for async scenarios\n            const upload = () => {\n                // we push this forward a bit so the interface is updated correctly\n                setTimeout(() => {\n                    dispatch('REQUEST_ITEM_PROCESSING', { query: id });\n                }, 32);\n            };\n\n            const revert = doUpload => {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                )\n                    .then(doUpload ? upload : () => {})\n                    .catch(() => {});\n            };\n\n            const abort = doUpload => {\n                item.abortProcessing().then(doUpload ? upload : () => {});\n            };\n\n            // if we should re-upload the file immediately\n            if (item.status === ItemStatus.PROCESSING_COMPLETE) {\n                return revert(state.options.instantUpload);\n            }\n\n            // if currently uploading, cancel upload\n            if (item.status === ItemStatus.PROCESSING) {\n                return abort(state.options.instantUpload);\n            }\n\n            if (state.options.instantUpload) {\n                upload();\n            }\n        }, 0);\n    },\n\n    MOVE_ITEM: ({ query, index }) => {\n        const item = getItemByQuery(state.items, query);\n        if (!item) return;\n        const currentIndex = state.items.indexOf(item);\n        index = limit(index, 0, state.items.length - 1);\n        if (currentIndex === index) return;\n        state.items.splice(index, 0, state.items.splice(currentIndex, 1)[0]);\n    },\n\n    SORT: ({ compare }) => {\n        sortItems(state, compare);\n        dispatch('DID_SORT_ITEMS', {\n            items: query('GET_ACTIVE_ITEMS'),\n        });\n    },\n\n    ADD_ITEMS: ({ items, index, interactionMethod, success = () => {}, failure = () => {} }) => {\n        let currentIndex = index;\n\n        if (index === -1 || typeof index === 'undefined') {\n            const insertLocation = query('GET_ITEM_INSERT_LOCATION');\n            const totalItems = query('GET_TOTAL_ITEMS');\n            currentIndex = insertLocation === 'before' ? 0 : totalItems;\n        }\n\n        const ignoredFiles = query('GET_IGNORED_FILES');\n        const isValidFile = source =>\n            isFile(source) ? !ignoredFiles.includes(source.name.toLowerCase()) : !isEmpty(source);\n        const validItems = items.filter(isValidFile);\n\n        const promises = validItems.map(\n            source =>\n                new Promise((resolve, reject) => {\n                    dispatch('ADD_ITEM', {\n                        interactionMethod,\n                        source: source.source || source,\n                        success: resolve,\n                        failure: reject,\n                        index: currentIndex++,\n                        options: source.options || {},\n                    });\n                })\n        );\n\n        Promise.all(promises)\n            .then(success)\n            .catch(failure);\n    },\n\n    /**\n     * @param source\n     * @param index\n     * @param interactionMethod\n     */\n    ADD_ITEM: ({\n        source,\n        index = -1,\n        interactionMethod,\n        success = () => {},\n        failure = () => {},\n        options = {},\n    }) => {\n        // if no source supplied\n        if (isEmpty(source)) {\n            failure({\n                error: createResponse('error', 0, 'No source'),\n                file: null,\n            });\n            return;\n        }\n\n        // filter out invalid file items, used to filter dropped directory contents\n        if (isFile(source) && state.options.ignoredFiles.includes(source.name.toLowerCase())) {\n            // fail silently\n            return;\n        }\n\n        // test if there's still room in the list of files\n        if (!hasRoomForItem(state)) {\n            // if multiple allowed, we can't replace\n            // or if only a single item is allowed but we're not allowed to replace it we exit\n            if (\n                state.options.allowMultiple ||\n                (!state.options.allowMultiple && !state.options.allowReplace)\n            ) {\n                const error = createResponse('warning', 0, 'Max files');\n\n                dispatch('DID_THROW_MAX_FILES', {\n                    source,\n                    error,\n                });\n\n                failure({ error, file: null });\n\n                return;\n            }\n\n            // let's replace the item\n            // id of first item we're about to remove\n            const item = getActiveItems(state.items)[0];\n\n            // if has been processed remove it from the server as well\n            if (\n                item.status === ItemStatus.PROCESSING_COMPLETE ||\n                item.status === ItemStatus.PROCESSING_REVERT_ERROR\n            ) {\n                const forceRevert = query('GET_FORCE_REVERT');\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    forceRevert\n                )\n                    .then(() => {\n                        if (!forceRevert) return;\n\n                        // try to add now\n                        dispatch('ADD_ITEM', {\n                            source,\n                            index,\n                            interactionMethod,\n                            success,\n                            failure,\n                            options,\n                        });\n                    })\n                    .catch(() => {}); // no need to handle this catch state for now\n\n                if (forceRevert) return;\n            }\n\n            // remove first item as it will be replaced by this item\n            dispatch('REMOVE_ITEM', { query: item.id });\n        }\n\n        // where did the file originate\n        const origin =\n            options.type === 'local'\n                ? FileOrigin.LOCAL\n                : options.type === 'limbo'\n                ? FileOrigin.LIMBO\n                : FileOrigin.INPUT;\n\n        // create a new blank item\n        const item = createItem(\n            // where did this file come from\n            origin,\n\n            // an input file never has a server file reference\n            origin === FileOrigin.INPUT ? null : source,\n\n            // file mock data, if defined\n            options.file\n        );\n\n        // set initial meta data\n        Object.keys(options.metadata || {}).forEach(key => {\n            item.setMetadata(key, options.metadata[key]);\n        });\n\n        // created the item, let plugins add methods\n        applyFilters('DID_CREATE_ITEM', item, { query, dispatch });\n\n        // where to insert new items\n        const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n\n        // adjust index if is not allowed to pick location\n        if (!state.options.itemInsertLocationFreedom) {\n            index = itemInsertLocation === 'before' ? -1 : state.items.length;\n        }\n\n        // add item to list\n        insertItem(state.items, item, index);\n\n        // sort items in list\n        if (isFunction(itemInsertLocation) && source) {\n            sortItems(state, itemInsertLocation);\n        }\n\n        // get a quick reference to the item id\n        const id = item.id;\n\n        // observe item events\n        item.on('init', () => {\n            dispatch('DID_INIT_ITEM', { id });\n        });\n\n        item.on('load-init', () => {\n            dispatch('DID_START_ITEM_LOAD', { id });\n        });\n\n        item.on('load-meta', () => {\n            dispatch('DID_UPDATE_ITEM_META', { id });\n        });\n\n        item.on('load-progress', progress => {\n            dispatch('DID_UPDATE_ITEM_LOAD_PROGRESS', { id, progress });\n        });\n\n        item.on('load-request-error', error => {\n            const mainStatus = dynamicLabel(state.options.labelFileLoadError)(error);\n\n            // is client error, no way to recover\n            if (error.code >= 400 && error.code < 500) {\n                dispatch('DID_THROW_ITEM_INVALID', {\n                    id,\n                    error,\n                    status: {\n                        main: mainStatus,\n                        sub: `${error.code} (${error.body})`,\n                    },\n                });\n\n                // reject the file so can be dealt with through API\n                failure({ error, file: createItemAPI(item) });\n                return;\n            }\n\n            // is possible server error, so might be possible to retry\n            dispatch('DID_THROW_ITEM_LOAD_ERROR', {\n                id,\n                error,\n                status: {\n                    main: mainStatus,\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('load-file-error', error => {\n            dispatch('DID_THROW_ITEM_INVALID', {\n                id,\n                error: error.status,\n                status: error.status,\n            });\n            failure({ error: error.status, file: createItemAPI(item) });\n        });\n\n        item.on('load-abort', () => {\n            dispatch('REMOVE_ITEM', { query: id });\n        });\n\n        item.on('load-skip', () => {\n            dispatch('COMPLETE_LOAD_ITEM', {\n                query: id,\n                item,\n                data: {\n                    source,\n                    success,\n                },\n            });\n        });\n\n        item.on('load', () => {\n            const handleAdd = shouldAdd => {\n                // no should not add this file\n                if (!shouldAdd) {\n                    dispatch('REMOVE_ITEM', {\n                        query: id,\n                    });\n                    return;\n                }\n\n                // now interested in metadata updates\n                item.on('metadata-update', change => {\n                    dispatch('DID_UPDATE_ITEM_METADATA', { id, change });\n                });\n\n                // let plugins decide if the output data should be prepared at this point\n                // means we'll do this and wait for idle state\n                applyFilterChain('SHOULD_PREPARE_OUTPUT', false, { item, query }).then(\n                    shouldPrepareOutput => {\n                        // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n                        const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n                        if (beforePrepareFile)\n                            shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n\n                        const loadComplete = () => {\n                            dispatch('COMPLETE_LOAD_ITEM', {\n                                query: id,\n                                item,\n                                data: {\n                                    source,\n                                    success,\n                                },\n                            });\n\n                            listUpdated(dispatch, state);\n                        };\n\n                        // exit\n                        if (shouldPrepareOutput) {\n                            // wait for idle state and then run PREPARE_OUTPUT\n                            dispatch(\n                                'REQUEST_PREPARE_OUTPUT',\n                                {\n                                    query: id,\n                                    item,\n                                    success: file => {\n                                        dispatch('DID_PREPARE_OUTPUT', { id, file });\n                                        loadComplete();\n                                    },\n                                },\n                                true\n                            );\n\n                            return;\n                        }\n\n                        loadComplete();\n                    }\n                );\n            };\n\n            // item loaded, allow plugins to\n            // - read data (quickly)\n            // - add metadata\n            applyFilterChain('DID_LOAD_ITEM', item, { query, dispatch })\n                .then(() => {\n                    optionalPromise(query('GET_BEFORE_ADD_FILE'), createItemAPI(item)).then(\n                        handleAdd\n                    );\n                })\n                .catch(e => {\n                    if (!e || !e.error || !e.status) return handleAdd(false);\n                    dispatch('DID_THROW_ITEM_INVALID', {\n                        id,\n                        error: e.error,\n                        status: e.status,\n                    });\n                });\n        });\n\n        item.on('process-start', () => {\n            dispatch('DID_START_ITEM_PROCESSING', { id });\n        });\n\n        item.on('process-progress', progress => {\n            dispatch('DID_UPDATE_ITEM_PROCESS_PROGRESS', { id, progress });\n        });\n\n        item.on('process-error', error => {\n            dispatch('DID_THROW_ITEM_PROCESSING_ERROR', {\n                id,\n                error,\n                status: {\n                    main: dynamicLabel(state.options.labelFileProcessingError)(error),\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('process-revert-error', error => {\n            dispatch('DID_THROW_ITEM_PROCESSING_REVERT_ERROR', {\n                id,\n                error,\n                status: {\n                    main: dynamicLabel(state.options.labelFileProcessingRevertError)(error),\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('process-complete', serverFileReference => {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n                id,\n                error: null,\n                serverFileReference,\n            });\n            dispatch('DID_DEFINE_VALUE', { id, value: serverFileReference });\n        });\n\n        item.on('process-abort', () => {\n            dispatch('DID_ABORT_ITEM_PROCESSING', { id });\n        });\n\n        item.on('process-revert', () => {\n            dispatch('DID_REVERT_ITEM_PROCESSING', { id });\n            dispatch('DID_DEFINE_VALUE', { id, value: null });\n        });\n\n        // let view know the item has been inserted\n        dispatch('DID_ADD_ITEM', { id, index, interactionMethod });\n\n        listUpdated(dispatch, state);\n\n        // start loading the source\n        const { url, load, restore, fetch } = state.options.server || {};\n\n        item.load(\n            source,\n\n            // this creates a function that loads the file based on the type of file (string, base64, blob, file) and location of file (local, remote, limbo)\n            createFileLoader(\n                origin === FileOrigin.INPUT\n                    ? // input, if is remote, see if should use custom fetch, else use default fetchBlob\n                      isString(source) && isExternalURL(source)\n                        ? fetch\n                            ? createFetchFunction(url, fetch)\n                            : fetchBlob // remote url\n                        : fetchBlob // try to fetch url\n                    : // limbo or local\n                    origin === FileOrigin.LIMBO\n                    ? createFetchFunction(url, restore) // limbo\n                    : createFetchFunction(url, load) // local\n            ),\n\n            // called when the file is loaded so it can be piped through the filters\n            (file, success, error) => {\n                // let's process the file\n                applyFilterChain('LOAD_FILE', file, { query })\n                    .then(success)\n                    .catch(error);\n            }\n        );\n    },\n\n    REQUEST_PREPARE_OUTPUT: ({ item, success, failure = () => {} }) => {\n        // error response if item archived\n        const err = {\n            error: createResponse('error', 0, 'Item not found'),\n            file: null,\n        };\n\n        // don't handle archived items, an item could have been archived (load aborted) while waiting to be prepared\n        if (item.archived) return failure(err);\n\n        // allow plugins to alter the file data\n        applyFilterChain('PREPARE_OUTPUT', item.file, { query, item }).then(result => {\n            applyFilterChain('COMPLETE_PREPARE_OUTPUT', result, { query, item }).then(result => {\n                // don't handle archived items, an item could have been archived (load aborted) while being prepared\n                if (item.archived) return failure(err);\n\n                // we done!\n                success(result);\n            });\n        });\n    },\n\n    COMPLETE_LOAD_ITEM: ({ item, data }) => {\n        const { success, source } = data;\n\n        // sort items in list\n        const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n        if (isFunction(itemInsertLocation) && source) {\n            sortItems(state, itemInsertLocation);\n        }\n\n        // let interface know the item has loaded\n        dispatch('DID_LOAD_ITEM', {\n            id: item.id,\n            error: null,\n            serverFileReference: item.origin === FileOrigin.INPUT ? null : source,\n        });\n\n        // item has been successfully loaded and added to the\n        // list of items so can now be safely returned for use\n        success(createItemAPI(item));\n\n        // if this is a local server file we need to show a different state\n        if (item.origin === FileOrigin.LOCAL) {\n            dispatch('DID_LOAD_LOCAL_ITEM', { id: item.id });\n            return;\n        }\n\n        // if is a temp server file we prevent async upload call here (as the file is already on the server)\n        if (item.origin === FileOrigin.LIMBO) {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n                id: item.id,\n                error: null,\n                serverFileReference: source,\n            });\n\n            dispatch('DID_DEFINE_VALUE', {\n                id: item.id,\n                value: item.serverId || source,\n            });\n            return;\n        }\n\n        // id we are allowed to upload the file immediately, lets do it\n        if (query('IS_ASYNC') && state.options.instantUpload) {\n            dispatch('REQUEST_ITEM_PROCESSING', { query: item.id });\n        }\n    },\n\n    RETRY_ITEM_LOAD: getItemByQueryFromState(state, item => {\n        // try loading the source one more time\n        item.retryLoad();\n    }),\n\n    REQUEST_ITEM_PREPARE: getItemByQueryFromState(state, (item, success, failure) => {\n        dispatch(\n            'REQUEST_PREPARE_OUTPUT',\n            {\n                query: item.id,\n                item,\n                success: file => {\n                    dispatch('DID_PREPARE_OUTPUT', { id: item.id, file });\n                    success({\n                        file: item,\n                        output: file,\n                    });\n                },\n                failure,\n            },\n            true\n        );\n    }),\n\n    REQUEST_ITEM_PROCESSING: getItemByQueryFromState(state, (item, success, failure) => {\n        // cannot be queued (or is already queued)\n        const itemCanBeQueuedForProcessing =\n            // waiting for something\n            item.status === ItemStatus.IDLE ||\n            // processing went wrong earlier\n            item.status === ItemStatus.PROCESSING_ERROR;\n\n        // not ready to be processed\n        if (!itemCanBeQueuedForProcessing) {\n            const processNow = () =>\n                dispatch('REQUEST_ITEM_PROCESSING', { query: item, success, failure });\n\n            const process = () => (document.hidden ? processNow() : setTimeout(processNow, 32));\n\n            // if already done processing or tried to revert but didn't work, try again\n            if (\n                item.status === ItemStatus.PROCESSING_COMPLETE ||\n                item.status === ItemStatus.PROCESSING_REVERT_ERROR\n            ) {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                )\n                    .then(process)\n                    .catch(() => {}); // don't continue with processing if something went wrong\n            } else if (item.status === ItemStatus.PROCESSING) {\n                item.abortProcessing().then(process);\n            }\n\n            return;\n        }\n\n        // already queued for processing\n        if (item.status === ItemStatus.PROCESSING_QUEUED) return;\n\n        item.requestProcessing();\n\n        dispatch('DID_REQUEST_ITEM_PROCESSING', { id: item.id });\n\n        dispatch('PROCESS_ITEM', { query: item, success, failure }, true);\n    }),\n\n    PROCESS_ITEM: getItemByQueryFromState(state, (item, success, failure) => {\n        const maxParallelUploads = query('GET_MAX_PARALLEL_UPLOADS');\n        const totalCurrentUploads = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING).length;\n\n        // queue and wait till queue is freed up\n        if (totalCurrentUploads === maxParallelUploads) {\n            // queue for later processing\n            state.processingQueue.push({\n                id: item.id,\n                success,\n                failure,\n            });\n\n            // stop it!\n            return;\n        }\n\n        // if was not queued or is already processing exit here\n        if (item.status === ItemStatus.PROCESSING) return;\n\n        const processNext = () => {\n            // process queueud items\n            const queueEntry = state.processingQueue.shift();\n\n            // no items left\n            if (!queueEntry) return;\n\n            // get item reference\n            const { id, success, failure } = queueEntry;\n            const itemReference = getItemByQuery(state.items, id);\n\n            // if item was archived while in queue, jump to next\n            if (!itemReference || itemReference.archived) {\n                processNext();\n                return;\n            }\n\n            // process queued item\n            dispatch('PROCESS_ITEM', { query: id, success, failure }, true);\n        };\n\n        // we done function\n        item.onOnce('process-complete', () => {\n            success(createItemAPI(item));\n            processNext();\n\n            // if origin is local, and we're instant uploading, trigger remove of original\n            // as revert will remove file from list\n            const server = state.options.server;\n            const instantUpload = state.options.instantUpload;\n            if (instantUpload && item.origin === FileOrigin.LOCAL && isFunction(server.remove)) {\n                const noop = () => {};\n                item.origin = FileOrigin.LIMBO;\n                state.options.server.remove(item.source, noop, noop);\n            }\n\n            // All items processed? No errors?\n            const allItemsProcessed =\n                query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING_COMPLETE).length ===\n                state.items.length;\n            if (allItemsProcessed) {\n                dispatch('DID_COMPLETE_ITEM_PROCESSING_ALL');\n            }\n        });\n\n        // we error function\n        item.onOnce('process-error', error => {\n            failure({ error, file: createItemAPI(item) });\n            processNext();\n        });\n\n        // start file processing\n        const options = state.options;\n        item.process(\n            createFileProcessor(\n                createProcessorFunction(options.server.url, options.server.process, options.name, {\n                    chunkTransferId: item.transferId,\n                    chunkServer: options.server.patch,\n                    chunkUploads: options.chunkUploads,\n                    chunkForce: options.chunkForce,\n                    chunkSize: options.chunkSize,\n                    chunkRetryDelays: options.chunkRetryDelays,\n                }),\n                {\n                    allowMinimumUploadDuration: query('GET_ALLOW_MINIMUM_UPLOAD_DURATION'),\n                }\n            ),\n            // called when the file is about to be processed so it can be piped through the transform filters\n            (file, success, error) => {\n                // allow plugins to alter the file data\n                applyFilterChain('PREPARE_OUTPUT', file, { query, item })\n                    .then(file => {\n                        dispatch('DID_PREPARE_OUTPUT', { id: item.id, file });\n\n                        success(file);\n                    })\n                    .catch(error);\n            }\n        );\n    }),\n\n    RETRY_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        dispatch('REQUEST_ITEM_PROCESSING', { query: item });\n    }),\n\n    REQUEST_REMOVE_ITEM: getItemByQueryFromState(state, item => {\n        optionalPromise(query('GET_BEFORE_REMOVE_FILE'), createItemAPI(item)).then(shouldRemove => {\n            if (!shouldRemove) {\n                return;\n            }\n            dispatch('REMOVE_ITEM', { query: item });\n        });\n    }),\n\n    RELEASE_ITEM: getItemByQueryFromState(state, item => {\n        item.release();\n    }),\n\n    REMOVE_ITEM: getItemByQueryFromState(state, (item, success, failure, options) => {\n        const removeFromView = () => {\n            // get id reference\n            const id = item.id;\n\n            // archive the item, this does not remove it from the list\n            getItemById(state.items, id).archive();\n\n            // tell the view the item has been removed\n            dispatch('DID_REMOVE_ITEM', { error: null, id, item });\n\n            // now the list has been modified\n            listUpdated(dispatch, state);\n\n            // correctly removed\n            success(createItemAPI(item));\n        };\n\n        // if this is a local file and the `server.remove` function has been configured,\n        // send source there so dev can remove file from server\n        const server = state.options.server;\n        if (\n            item.origin === FileOrigin.LOCAL &&\n            server &&\n            isFunction(server.remove) &&\n            options.remove !== false\n        ) {\n            dispatch('DID_START_ITEM_REMOVE', { id: item.id });\n\n            server.remove(\n                item.source,\n                () => removeFromView(),\n                status => {\n                    dispatch('DID_THROW_ITEM_REMOVE_ERROR', {\n                        id: item.id,\n                        error: createResponse('error', 0, status, null),\n                        status: {\n                            main: dynamicLabel(state.options.labelFileRemoveError)(status),\n                            sub: state.options.labelTapToRetry,\n                        },\n                    });\n                }\n            );\n        } else {\n            // if is requesting revert and can revert need to call revert handler (not calling request_ because that would also trigger beforeRemoveHook)\n            if (\n                (options.revert && item.origin !== FileOrigin.LOCAL && item.serverId !== null) ||\n                // if chunked uploads are enabled and we're uploading in chunks for this specific file\n                // or if the file isn't big enough for chunked uploads but chunkForce is set then call\n                // revert before removing from the view...\n                (state.options.chunkUploads && item.file.size > state.options.chunkSize) ||\n                (state.options.chunkUploads && state.options.chunkForce)\n            ) {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                );\n            }\n\n            // can now safely remove from view\n            removeFromView();\n        }\n    }),\n\n    ABORT_ITEM_LOAD: getItemByQueryFromState(state, item => {\n        item.abortLoad();\n    }),\n\n    ABORT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        // test if is already processed\n        if (item.serverId) {\n            dispatch('REVERT_ITEM_PROCESSING', { id: item.id });\n            return;\n        }\n\n        // abort\n        item.abortProcessing().then(() => {\n            const shouldRemove = state.options.instantUpload;\n            if (shouldRemove) {\n                dispatch('REMOVE_ITEM', { query: item.id });\n            }\n        });\n    }),\n\n    REQUEST_REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        // not instant uploading, revert immediately\n        if (!state.options.instantUpload) {\n            dispatch('REVERT_ITEM_PROCESSING', { query: item });\n            return;\n        }\n\n        // if we're instant uploading the file will also be removed if we revert,\n        // so if a before remove file hook is defined we need to run it now\n        const handleRevert = shouldRevert => {\n            if (!shouldRevert) return;\n            dispatch('REVERT_ITEM_PROCESSING', { query: item });\n        };\n\n        const fn = query('GET_BEFORE_REMOVE_FILE');\n        if (!fn) {\n            return handleRevert(true);\n        }\n\n        const requestRemoveResult = fn(createItemAPI(item));\n        if (requestRemoveResult == null) {\n            // undefined or null\n            return handleRevert(true);\n        }\n\n        if (typeof requestRemoveResult === 'boolean') {\n            return handleRevert(requestRemoveResult);\n        }\n\n        if (typeof requestRemoveResult.then === 'function') {\n            requestRemoveResult.then(handleRevert);\n        }\n    }),\n\n    REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        item.revert(\n            createRevertFunction(state.options.server.url, state.options.server.revert),\n            query('GET_FORCE_REVERT')\n        )\n            .then(() => {\n                const shouldRemove = state.options.instantUpload || isMockItem(item);\n                if (shouldRemove) {\n                    dispatch('REMOVE_ITEM', { query: item.id });\n                }\n            })\n            .catch(() => {});\n    }),\n\n    SET_OPTIONS: ({ options }) => {\n        // get all keys passed\n        const optionKeys = Object.keys(options);\n\n        // get prioritized keyed to include (remove once not in options object)\n        const prioritizedOptionKeys = PrioritizedOptions.filter(key => optionKeys.includes(key));\n\n        // order the keys, prioritized first, then rest\n        const orderedOptionKeys = [\n            // add prioritized first if passed to options, else remove\n            ...prioritizedOptionKeys,\n\n            // prevent duplicate keys\n            ...Object.keys(options).filter(key => !prioritizedOptionKeys.includes(key)),\n        ];\n\n        // dispatch set event for each option\n        orderedOptionKeys.forEach(key => {\n            dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n                value: options[key],\n            });\n        });\n    },\n});\n\nconst PrioritizedOptions = [\n    'server', // must be processed before \"files\"\n];\n\nconst formatFilename = name => name;\n\nconst createElement$1 = tagName => {\n    return document.createElement(tagName);\n};\n\nconst text = (node, value) => {\n    let textNode = node.childNodes[0];\n    if (!textNode) {\n        textNode = document.createTextNode(value);\n        node.appendChild(textNode);\n    } else if (value !== textNode.nodeValue) {\n        textNode.nodeValue = value;\n    }\n};\n\nconst polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n    const angleInRadians = (((angleInDegrees % 360) - 90) * Math.PI) / 180.0;\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians),\n    };\n};\n\nconst describeArc = (x, y, radius, startAngle, endAngle, arcSweep) => {\n    const start = polarToCartesian(x, y, radius, endAngle);\n    const end = polarToCartesian(x, y, radius, startAngle);\n    return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\n};\n\nconst percentageArc = (x, y, radius, from, to) => {\n    let arcSweep = 1;\n    if (to > from && to - from <= 0.5) {\n        arcSweep = 0;\n    }\n    if (from > to && from - to >= 0.5) {\n        arcSweep = 0;\n    }\n    return describeArc(\n        x,\n        y,\n        radius,\n        Math.min(0.9999, from) * 360,\n        Math.min(0.9999, to) * 360,\n        arcSweep\n    );\n};\n\nconst create = ({ root, props }) => {\n    // start at 0\n    props.spin = false;\n    props.progress = 0;\n    props.opacity = 0;\n\n    // svg\n    const svg = createElement('svg');\n    root.ref.path = createElement('path', {\n        'stroke-width': 2,\n        'stroke-linecap': 'round',\n    });\n    svg.appendChild(root.ref.path);\n\n    root.ref.svg = svg;\n\n    root.appendChild(svg);\n};\n\nconst write = ({ root, props }) => {\n    if (props.opacity === 0) {\n        return;\n    }\n\n    if (props.align) {\n        root.element.dataset.align = props.align;\n    }\n\n    // get width of stroke\n    const ringStrokeWidth = parseInt(attr(root.ref.path, 'stroke-width'), 10);\n\n    // calculate size of ring\n    const size = root.rect.element.width * 0.5;\n\n    // ring state\n    let ringFrom = 0;\n    let ringTo = 0;\n\n    // now in busy mode\n    if (props.spin) {\n        ringFrom = 0;\n        ringTo = 0.5;\n    } else {\n        ringFrom = 0;\n        ringTo = props.progress;\n    }\n\n    // get arc path\n    const coordinates = percentageArc(size, size, size - ringStrokeWidth, ringFrom, ringTo);\n\n    // update progress bar\n    attr(root.ref.path, 'd', coordinates);\n\n    // hide while contains 0 value\n    attr(root.ref.path, 'stroke-opacity', props.spin || props.progress > 0 ? 1 : 0);\n};\n\nconst progressIndicator = createView({\n    tag: 'div',\n    name: 'progress-indicator',\n    ignoreRectUpdate: true,\n    ignoreRect: true,\n    create,\n    write,\n    mixins: {\n        apis: ['progress', 'spin', 'align'],\n        styles: ['opacity'],\n        animations: {\n            opacity: { type: 'tween', duration: 500 },\n            progress: {\n                type: 'spring',\n                stiffness: 0.95,\n                damping: 0.65,\n                mass: 10,\n            },\n        },\n    },\n});\n\nconst create$1 = ({ root, props }) => {\n    root.element.innerHTML = (props.icon || '') + `<span>${props.label}</span>`;\n\n    props.isDisabled = false;\n};\n\nconst write$1 = ({ root, props }) => {\n    const { isDisabled } = props;\n    const shouldDisable = root.query('GET_DISABLED') || props.opacity === 0;\n\n    if (shouldDisable && !isDisabled) {\n        props.isDisabled = true;\n        attr(root.element, 'disabled', 'disabled');\n    } else if (!shouldDisable && isDisabled) {\n        props.isDisabled = false;\n        root.element.removeAttribute('disabled');\n    }\n};\n\nconst fileActionButton = createView({\n    tag: 'button',\n    attributes: {\n        type: 'button',\n    },\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'file-action-button',\n    mixins: {\n        apis: ['label'],\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            translateX: 'spring',\n            translateY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n        listeners: true,\n    },\n    create: create$1,\n    write: write$1,\n});\n\nconst toNaturalFileSize = (bytes, decimalSeparator = '.', base = 1000, options = {}) => {\n    const {\n        labelBytes = 'bytes',\n        labelKilobytes = 'KB',\n        labelMegabytes = 'MB',\n        labelGigabytes = 'GB',\n    } = options;\n\n    // no negative byte sizes\n    bytes = Math.round(Math.abs(bytes));\n\n    const KB = base;\n    const MB = base * base;\n    const GB = base * base * base;\n\n    // just bytes\n    if (bytes < KB) {\n        return `${bytes} ${labelBytes}`;\n    }\n\n    // kilobytes\n    if (bytes < MB) {\n        return `${Math.floor(bytes / KB)} ${labelKilobytes}`;\n    }\n\n    // megabytes\n    if (bytes < GB) {\n        return `${removeDecimalsWhenZero(bytes / MB, 1, decimalSeparator)} ${labelMegabytes}`;\n    }\n\n    // gigabytes\n    return `${removeDecimalsWhenZero(bytes / GB, 2, decimalSeparator)} ${labelGigabytes}`;\n};\n\nconst removeDecimalsWhenZero = (value, decimalCount, separator) => {\n    return value\n        .toFixed(decimalCount)\n        .split('.')\n        .filter(part => part !== '0')\n        .join(separator);\n};\n\nconst create$2 = ({ root, props }) => {\n    // filename\n    const fileName = createElement$1('span');\n    fileName.className = 'filepond--file-info-main';\n    // hide for screenreaders\n    // the file is contained in a fieldset with legend that contains the filename\n    // no need to read it twice\n    attr(fileName, 'aria-hidden', 'true');\n    root.appendChild(fileName);\n    root.ref.fileName = fileName;\n\n    // filesize\n    const fileSize = createElement$1('span');\n    fileSize.className = 'filepond--file-info-sub';\n    root.appendChild(fileSize);\n    root.ref.fileSize = fileSize;\n\n    // set initial values\n    text(fileSize, root.query('GET_LABEL_FILE_WAITING_FOR_SIZE'));\n    text(fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst updateFile = ({ root, props }) => {\n    text(\n        root.ref.fileSize,\n        toNaturalFileSize(\n            root.query('GET_ITEM_SIZE', props.id),\n            '.',\n            root.query('GET_FILE_SIZE_BASE'),\n            root.query('GET_FILE_SIZE_LABELS', root.query)\n        )\n    );\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst updateFileSizeOnError = ({ root, props }) => {\n    // if size is available don't fallback to unknown size message\n    if (isInt(root.query('GET_ITEM_SIZE', props.id))) {\n        updateFile({ root, props });\n        return;\n    }\n\n    text(root.ref.fileSize, root.query('GET_LABEL_FILE_SIZE_NOT_AVAILABLE'));\n};\n\nconst fileInfo = createView({\n    name: 'file-info',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: updateFile,\n        DID_UPDATE_ITEM_META: updateFile,\n        DID_THROW_ITEM_LOAD_ERROR: updateFileSizeOnError,\n        DID_THROW_ITEM_INVALID: updateFileSizeOnError,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    create: create$2,\n    mixins: {\n        styles: ['translateX', 'translateY'],\n        animations: {\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\nconst toPercentage = value => Math.round(value * 100);\n\nconst create$3 = ({ root }) => {\n    // main status\n    const main = createElement$1('span');\n    main.className = 'filepond--file-status-main';\n    root.appendChild(main);\n    root.ref.main = main;\n\n    // sub status\n    const sub = createElement$1('span');\n    sub.className = 'filepond--file-status-sub';\n    root.appendChild(sub);\n    root.ref.sub = sub;\n\n    didSetItemLoadProgress({ root, action: { progress: null } });\n};\n\nconst didSetItemLoadProgress = ({ root, action }) => {\n    const title =\n        action.progress === null\n            ? root.query('GET_LABEL_FILE_LOADING')\n            : `${root.query('GET_LABEL_FILE_LOADING')} ${toPercentage(action.progress)}%`;\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didSetItemProcessProgress = ({ root, action }) => {\n    const title =\n        action.progress === null\n            ? root.query('GET_LABEL_FILE_PROCESSING')\n            : `${root.query('GET_LABEL_FILE_PROCESSING')} ${toPercentage(action.progress)}%`;\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didRequestItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didAbortItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_ABORTED'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_RETRY'));\n};\n\nconst didCompleteItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_COMPLETE'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_UNDO'));\n};\n\nconst clear = ({ root }) => {\n    text(root.ref.main, '');\n    text(root.ref.sub, '');\n};\n\nconst error = ({ root, action }) => {\n    text(root.ref.main, action.status.main);\n    text(root.ref.sub, action.status.sub);\n};\n\nconst fileStatus = createView({\n    name: 'file-status',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: clear,\n        DID_REVERT_ITEM_PROCESSING: clear,\n        DID_REQUEST_ITEM_PROCESSING: didRequestItemProcessing,\n        DID_ABORT_ITEM_PROCESSING: didAbortItemProcessing,\n        DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing,\n        DID_UPDATE_ITEM_PROCESS_PROGRESS: didSetItemProcessProgress,\n        DID_UPDATE_ITEM_LOAD_PROGRESS: didSetItemLoadProgress,\n        DID_THROW_ITEM_LOAD_ERROR: error,\n        DID_THROW_ITEM_INVALID: error,\n        DID_THROW_ITEM_PROCESSING_ERROR: error,\n        DID_THROW_ITEM_PROCESSING_REVERT_ERROR: error,\n        DID_THROW_ITEM_REMOVE_ERROR: error,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    create: create$3,\n    mixins: {\n        styles: ['translateX', 'translateY', 'opacity'],\n        animations: {\n            opacity: { type: 'tween', duration: 250 },\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\n/**\n * Button definitions for the file view\n */\n\nconst Buttons = {\n    AbortItemLoad: {\n        label: 'GET_LABEL_BUTTON_ABORT_ITEM_LOAD',\n        action: 'ABORT_ITEM_LOAD',\n        className: 'filepond--action-abort-item-load',\n        align: 'LOAD_INDICATOR_POSITION', // right\n    },\n    RetryItemLoad: {\n        label: 'GET_LABEL_BUTTON_RETRY_ITEM_LOAD',\n        action: 'RETRY_ITEM_LOAD',\n        icon: 'GET_ICON_RETRY',\n        className: 'filepond--action-retry-item-load',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RemoveItem: {\n        label: 'GET_LABEL_BUTTON_REMOVE_ITEM',\n        action: 'REQUEST_REMOVE_ITEM',\n        icon: 'GET_ICON_REMOVE',\n        className: 'filepond--action-remove-item',\n        align: 'BUTTON_REMOVE_ITEM_POSITION', // left\n    },\n    ProcessItem: {\n        label: 'GET_LABEL_BUTTON_PROCESS_ITEM',\n        action: 'REQUEST_ITEM_PROCESSING',\n        icon: 'GET_ICON_PROCESS',\n        className: 'filepond--action-process-item',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    AbortItemProcessing: {\n        label: 'GET_LABEL_BUTTON_ABORT_ITEM_PROCESSING',\n        action: 'ABORT_ITEM_PROCESSING',\n        className: 'filepond--action-abort-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RetryItemProcessing: {\n        label: 'GET_LABEL_BUTTON_RETRY_ITEM_PROCESSING',\n        action: 'RETRY_ITEM_PROCESSING',\n        icon: 'GET_ICON_RETRY',\n        className: 'filepond--action-retry-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RevertItemProcessing: {\n        label: 'GET_LABEL_BUTTON_UNDO_ITEM_PROCESSING',\n        action: 'REQUEST_REVERT_ITEM_PROCESSING',\n        icon: 'GET_ICON_UNDO',\n        className: 'filepond--action-revert-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n};\n\n// make a list of buttons, we can then remove buttons from this list if they're disabled\nconst ButtonKeys = [];\nforin(Buttons, key => {\n    ButtonKeys.push(key);\n});\n\nconst calculateFileInfoOffset = root => {\n    if (getRemoveIndicatorAligment(root) === 'right') return 0;\n    const buttonRect = root.ref.buttonRemoveItem.rect.element;\n    return buttonRect.hidden ? null : buttonRect.width + buttonRect.left;\n};\n\nconst calculateButtonWidth = root => {\n    const buttonRect = root.ref.buttonAbortItemLoad.rect.element;\n    return buttonRect.width;\n};\n\n// Force on full pixels so text stays crips\nconst calculateFileVerticalCenterOffset = root =>\n    Math.floor(root.ref.buttonRemoveItem.rect.element.height / 4);\nconst calculateFileHorizontalCenterOffset = root =>\n    Math.floor(root.ref.buttonRemoveItem.rect.element.left / 2);\n\nconst getLoadIndicatorAlignment = root => root.query('GET_STYLE_LOAD_INDICATOR_POSITION');\nconst getProcessIndicatorAlignment = root => root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION');\nconst getRemoveIndicatorAligment = root => root.query('GET_STYLE_BUTTON_REMOVE_ITEM_POSITION');\n\nconst DefaultStyle = {\n    buttonAbortItemLoad: { opacity: 0 },\n    buttonRetryItemLoad: { opacity: 0 },\n    buttonRemoveItem: { opacity: 0 },\n    buttonProcessItem: { opacity: 0 },\n    buttonAbortItemProcessing: { opacity: 0 },\n    buttonRetryItemProcessing: { opacity: 0 },\n    buttonRevertItemProcessing: { opacity: 0 },\n    loadProgressIndicator: { opacity: 0, align: getLoadIndicatorAlignment },\n    processProgressIndicator: { opacity: 0, align: getProcessIndicatorAlignment },\n    processingCompleteIndicator: { opacity: 0, scaleX: 0.75, scaleY: 0.75 },\n    info: { translateX: 0, translateY: 0, opacity: 0 },\n    status: { translateX: 0, translateY: 0, opacity: 0 },\n};\n\nconst IdleStyle = {\n    buttonRemoveItem: { opacity: 1 },\n    buttonProcessItem: { opacity: 1 },\n    info: { translateX: calculateFileInfoOffset },\n    status: { translateX: calculateFileInfoOffset },\n};\n\nconst ProcessingStyle = {\n    buttonAbortItemProcessing: { opacity: 1 },\n    processProgressIndicator: { opacity: 1 },\n    status: { opacity: 1 },\n};\n\nconst StyleMap = {\n    DID_THROW_ITEM_INVALID: {\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { translateX: calculateFileInfoOffset, opacity: 1 },\n    },\n    DID_START_ITEM_LOAD: {\n        buttonAbortItemLoad: { opacity: 1 },\n        loadProgressIndicator: { opacity: 1 },\n        status: { opacity: 1 },\n    },\n    DID_THROW_ITEM_LOAD_ERROR: {\n        buttonRetryItemLoad: { opacity: 1 },\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1 },\n    },\n    DID_START_ITEM_REMOVE: {\n        processProgressIndicator: { opacity: 1, align: getRemoveIndicatorAligment },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 0 },\n    },\n    DID_THROW_ITEM_REMOVE_ERROR: {\n        processProgressIndicator: { opacity: 0, align: getRemoveIndicatorAligment },\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1, translateX: calculateFileInfoOffset },\n    },\n    DID_LOAD_ITEM: IdleStyle,\n    DID_LOAD_LOCAL_ITEM: {\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { translateX: calculateFileInfoOffset },\n    },\n    DID_START_ITEM_PROCESSING: ProcessingStyle,\n    DID_REQUEST_ITEM_PROCESSING: ProcessingStyle,\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ProcessingStyle,\n    DID_COMPLETE_ITEM_PROCESSING: {\n        buttonRevertItemProcessing: { opacity: 1 },\n        info: { opacity: 1 },\n        status: { opacity: 1 },\n    },\n    DID_THROW_ITEM_PROCESSING_ERROR: {\n        buttonRemoveItem: { opacity: 1 },\n        buttonRetryItemProcessing: { opacity: 1 },\n        status: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n    },\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: {\n        buttonRevertItemProcessing: { opacity: 1 },\n        status: { opacity: 1 },\n        info: { opacity: 1 },\n    },\n    DID_ABORT_ITEM_PROCESSING: {\n        buttonRemoveItem: { opacity: 1 },\n        buttonProcessItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1 },\n    },\n    DID_REVERT_ITEM_PROCESSING: IdleStyle,\n};\n\n// complete indicator view\nconst processingCompleteIndicatorView = createView({\n    create: ({ root }) => {\n        root.element.innerHTML = root.query('GET_ICON_DONE');\n    },\n    name: 'processing-complete-indicator',\n    ignoreRect: true,\n    mixins: {\n        styles: ['scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n    },\n});\n\n/**\n * Creates the file view\n */\nconst create$4 = ({ root, props }) => {\n    // copy Buttons object\n    const LocalButtons = Object.keys(Buttons).reduce((prev, curr) => {\n        prev[curr] = { ...Buttons[curr] };\n        return prev;\n    }, {});\n\n    const { id } = props;\n\n    // allow reverting upload\n    const allowRevert = root.query('GET_ALLOW_REVERT');\n\n    // allow remove file\n    const allowRemove = root.query('GET_ALLOW_REMOVE');\n\n    // allow processing upload\n    const allowProcess = root.query('GET_ALLOW_PROCESS');\n\n    // is instant uploading, need this to determine the icon of the undo button\n    const instantUpload = root.query('GET_INSTANT_UPLOAD');\n\n    // is async set up\n    const isAsync = root.query('IS_ASYNC');\n\n    // should align remove item buttons\n    const alignRemoveItemButton = root.query('GET_STYLE_BUTTON_REMOVE_ITEM_ALIGN');\n\n    // enabled buttons array\n    let buttonFilter;\n    if (isAsync) {\n        if (allowProcess && !allowRevert) {\n            // only remove revert button\n            buttonFilter = key => !/RevertItemProcessing/.test(key);\n        } else if (!allowProcess && allowRevert) {\n            // only remove process button\n            buttonFilter = key => !/ProcessItem|RetryItemProcessing|AbortItemProcessing/.test(key);\n        } else if (!allowProcess && !allowRevert) {\n            // remove all process buttons\n            buttonFilter = key => !/Process/.test(key);\n        }\n    } else {\n        // no process controls available\n        buttonFilter = key => !/Process/.test(key);\n    }\n\n    const enabledButtons = buttonFilter ? ButtonKeys.filter(buttonFilter) : ButtonKeys.concat();\n\n    // update icon and label for revert button when instant uploading\n    if (instantUpload && allowRevert) {\n        LocalButtons['RevertItemProcessing'].label = 'GET_LABEL_BUTTON_REMOVE_ITEM';\n        LocalButtons['RevertItemProcessing'].icon = 'GET_ICON_REMOVE';\n    }\n\n    // remove last button (revert) if not allowed\n    if (isAsync && !allowRevert) {\n        const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n        map.info.translateX = calculateFileHorizontalCenterOffset;\n        map.info.translateY = calculateFileVerticalCenterOffset;\n        map.status.translateY = calculateFileVerticalCenterOffset;\n        map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };\n    }\n\n    // should align center\n    if (isAsync && !allowProcess) {\n        [\n            'DID_START_ITEM_PROCESSING',\n            'DID_REQUEST_ITEM_PROCESSING',\n            'DID_UPDATE_ITEM_PROCESS_PROGRESS',\n            'DID_THROW_ITEM_PROCESSING_ERROR',\n        ].forEach(key => {\n            StyleMap[key].status.translateY = calculateFileVerticalCenterOffset;\n        });\n        StyleMap['DID_THROW_ITEM_PROCESSING_ERROR'].status.translateX = calculateButtonWidth;\n    }\n\n    // move remove button to right\n    if (alignRemoveItemButton && allowRevert) {\n        LocalButtons['RevertItemProcessing'].align = 'BUTTON_REMOVE_ITEM_POSITION';\n        const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n        map.info.translateX = calculateFileInfoOffset;\n        map.status.translateY = calculateFileVerticalCenterOffset;\n        map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };\n    }\n\n    // show/hide RemoveItem button\n    if (!allowRemove) {\n        LocalButtons['RemoveItem'].disabled = true;\n    }\n\n    // create the button views\n    forin(LocalButtons, (key, definition) => {\n        // create button\n        const buttonView = root.createChildView(fileActionButton, {\n            label: root.query(definition.label),\n            icon: root.query(definition.icon),\n            opacity: 0,\n        });\n\n        // should be appended?\n        if (enabledButtons.includes(key)) {\n            root.appendChildView(buttonView);\n        }\n\n        // toggle\n        if (definition.disabled) {\n            buttonView.element.setAttribute('disabled', 'disabled');\n            buttonView.element.setAttribute('hidden', 'hidden');\n        }\n\n        // add position attribute\n        buttonView.element.dataset.align = root.query(`GET_STYLE_${definition.align}`);\n\n        // add class\n        buttonView.element.classList.add(definition.className);\n\n        // handle interactions\n        buttonView.on('click', e => {\n            e.stopPropagation();\n            if (definition.disabled) return;\n            root.dispatch(definition.action, { query: id });\n        });\n\n        // set reference\n        root.ref[`button${key}`] = buttonView;\n    });\n\n    // checkmark\n    root.ref.processingCompleteIndicator = root.appendChildView(\n        root.createChildView(processingCompleteIndicatorView)\n    );\n    root.ref.processingCompleteIndicator.element.dataset.align = root.query(\n        `GET_STYLE_BUTTON_PROCESS_ITEM_POSITION`\n    );\n\n    // create file info view\n    root.ref.info = root.appendChildView(root.createChildView(fileInfo, { id }));\n\n    // create file status view\n    root.ref.status = root.appendChildView(root.createChildView(fileStatus, { id }));\n\n    // add progress indicators\n    const loadIndicatorView = root.appendChildView(\n        root.createChildView(progressIndicator, {\n            opacity: 0,\n            align: root.query(`GET_STYLE_LOAD_INDICATOR_POSITION`),\n        })\n    );\n    loadIndicatorView.element.classList.add('filepond--load-indicator');\n    root.ref.loadProgressIndicator = loadIndicatorView;\n\n    const progressIndicatorView = root.appendChildView(\n        root.createChildView(progressIndicator, {\n            opacity: 0,\n            align: root.query(`GET_STYLE_PROGRESS_INDICATOR_POSITION`),\n        })\n    );\n    progressIndicatorView.element.classList.add('filepond--process-indicator');\n    root.ref.processProgressIndicator = progressIndicatorView;\n\n    // current active styles\n    root.ref.activeStyles = [];\n};\n\nconst write$2 = ({ root, actions, props }) => {\n    // route actions\n    route({ root, actions, props });\n\n    // select last state change action\n    let action = actions\n        .concat()\n        .filter(action => /^DID_/.test(action.type))\n        .reverse()\n        .find(action => StyleMap[action.type]);\n\n    // a new action happened, let's get the matching styles\n    if (action) {\n        // define new active styles\n        root.ref.activeStyles = [];\n\n        const stylesToApply = StyleMap[action.type];\n        forin(DefaultStyle, (name, defaultStyles) => {\n            // get reference to control\n            const control = root.ref[name];\n\n            // loop over all styles for this control\n            forin(defaultStyles, (key, defaultValue) => {\n                const value =\n                    stylesToApply[name] && typeof stylesToApply[name][key] !== 'undefined'\n                        ? stylesToApply[name][key]\n                        : defaultValue;\n                root.ref.activeStyles.push({ control, key, value });\n            });\n        });\n    }\n\n    // apply active styles to element\n    root.ref.activeStyles.forEach(({ control, key, value }) => {\n        control[key] = typeof value === 'function' ? value(root) : value;\n    });\n};\n\nconst route = createRoute({\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING: ({ root, action }) => {\n        root.ref.buttonAbortItemProcessing.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD: ({ root, action }) => {\n        root.ref.buttonAbortItemLoad.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL: ({ root, action }) => {\n        root.ref.buttonAbortItemRemoval.label = action.value;\n    },\n    DID_REQUEST_ITEM_PROCESSING: ({ root }) => {\n        root.ref.processProgressIndicator.spin = true;\n        root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_LOAD: ({ root }) => {\n        root.ref.loadProgressIndicator.spin = true;\n        root.ref.loadProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_REMOVE: ({ root }) => {\n        root.ref.processProgressIndicator.spin = true;\n        root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_UPDATE_ITEM_LOAD_PROGRESS: ({ root, action }) => {\n        root.ref.loadProgressIndicator.spin = false;\n        root.ref.loadProgressIndicator.progress = action.progress;\n    },\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ({ root, action }) => {\n        root.ref.processProgressIndicator.spin = false;\n        root.ref.processProgressIndicator.progress = action.progress;\n    },\n});\n\nconst file = createView({\n    create: create$4,\n    write: write$2,\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    name: 'file',\n});\n\n/**\n * Creates the file view\n */\nconst create$5 = ({ root, props }) => {\n    // filename\n    root.ref.fileName = createElement$1('legend');\n    root.appendChild(root.ref.fileName);\n\n    // file appended\n    root.ref.file = root.appendChildView(root.createChildView(file, { id: props.id }));\n\n    // data has moved to data.js\n    root.ref.data = false;\n};\n\n/**\n * Data storage\n */\nconst didLoadItem = ({ root, props }) => {\n    // updates the legend of the fieldset so screenreaders can better group buttons\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst fileWrapper = createView({\n    create: create$5,\n    ignoreRect: true,\n    write: createRoute({\n        DID_LOAD_ITEM: didLoadItem,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    tag: 'fieldset',\n    name: 'file-wrapper',\n});\n\nconst PANEL_SPRING_PROPS = { type: 'spring', damping: 0.6, mass: 7 };\n\nconst create$6 = ({ root, props }) => {\n    [\n        {\n            name: 'top',\n        },\n        {\n            name: 'center',\n            props: {\n                translateY: null,\n                scaleY: null,\n            },\n            mixins: {\n                animations: {\n                    scaleY: PANEL_SPRING_PROPS,\n                },\n                styles: ['translateY', 'scaleY'],\n            },\n        },\n        {\n            name: 'bottom',\n            props: {\n                translateY: null,\n            },\n            mixins: {\n                animations: {\n                    translateY: PANEL_SPRING_PROPS,\n                },\n                styles: ['translateY'],\n            },\n        },\n    ].forEach(section => {\n        createSection(root, section, props.name);\n    });\n\n    root.element.classList.add(`filepond--${props.name}`);\n\n    root.ref.scalable = null;\n};\n\nconst createSection = (root, section, className) => {\n    const viewConstructor = createView({\n        name: `panel-${section.name} filepond--${className}`,\n        mixins: section.mixins,\n        ignoreRectUpdate: true,\n    });\n\n    const view = root.createChildView(viewConstructor, section.props);\n\n    root.ref[section.name] = root.appendChildView(view);\n};\n\nconst write$3 = ({ root, props }) => {\n    // update scalable state\n    if (root.ref.scalable === null || props.scalable !== root.ref.scalable) {\n        root.ref.scalable = isBoolean(props.scalable) ? props.scalable : true;\n        root.element.dataset.scalable = root.ref.scalable;\n    }\n\n    // no height, can't set\n    if (!props.height) return;\n\n    // get child rects\n    const topRect = root.ref.top.rect.element;\n    const bottomRect = root.ref.bottom.rect.element;\n\n    // make sure height never is smaller than bottom and top seciton heights combined (will probably never happen, but who knows)\n    const height = Math.max(topRect.height + bottomRect.height, props.height);\n\n    // offset center part\n    root.ref.center.translateY = topRect.height;\n\n    // scale center part\n    // use math ceil to prevent transparent lines because of rounding errors\n    root.ref.center.scaleY = (height - topRect.height - bottomRect.height) / 100;\n\n    // offset bottom part\n    root.ref.bottom.translateY = height - bottomRect.height;\n};\n\nconst panel = createView({\n    name: 'panel',\n    read: ({ root, props }) => (props.heightCurrent = root.ref.bottom.translateY),\n    write: write$3,\n    create: create$6,\n    ignoreRect: true,\n    mixins: {\n        apis: ['height', 'heightCurrent', 'scalable'],\n    },\n});\n\nconst createDragHelper = items => {\n    const itemIds = items.map(item => item.id);\n    let prevIndex = undefined;\n    return {\n        setIndex: index => {\n            prevIndex = index;\n        },\n        getIndex: () => prevIndex,\n        getItemIndex: item => itemIds.indexOf(item.id),\n    };\n};\n\nconst ITEM_TRANSLATE_SPRING = {\n    type: 'spring',\n    stiffness: 0.75,\n    damping: 0.45,\n    mass: 10,\n};\n\nconst ITEM_SCALE_SPRING = 'spring';\n\nconst StateMap = {\n    DID_START_ITEM_LOAD: 'busy',\n    DID_UPDATE_ITEM_LOAD_PROGRESS: 'loading',\n    DID_THROW_ITEM_INVALID: 'load-invalid',\n    DID_THROW_ITEM_LOAD_ERROR: 'load-error',\n    DID_LOAD_ITEM: 'idle',\n    DID_THROW_ITEM_REMOVE_ERROR: 'remove-error',\n    DID_START_ITEM_REMOVE: 'busy',\n    DID_START_ITEM_PROCESSING: 'busy processing',\n    DID_REQUEST_ITEM_PROCESSING: 'busy processing',\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: 'processing',\n    DID_COMPLETE_ITEM_PROCESSING: 'processing-complete',\n    DID_THROW_ITEM_PROCESSING_ERROR: 'processing-error',\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: 'processing-revert-error',\n    DID_ABORT_ITEM_PROCESSING: 'cancelled',\n    DID_REVERT_ITEM_PROCESSING: 'idle',\n};\n\n/**\n * Creates the file view\n */\nconst create$7 = ({ root, props }) => {\n    // select\n    root.ref.handleClick = e => root.dispatch('DID_ACTIVATE_ITEM', { id: props.id });\n\n    // set id\n    root.element.id = `filepond--item-${props.id}`;\n    root.element.addEventListener('click', root.ref.handleClick);\n\n    // file view\n    root.ref.container = root.appendChildView(root.createChildView(fileWrapper, { id: props.id }));\n\n    // file panel\n    root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'item-panel' }));\n\n    // default start height\n    root.ref.panel.height = null;\n\n    // by default not marked for removal\n    props.markedForRemoval = false;\n\n    // if not allowed to reorder file items, exit here\n    if (!root.query('GET_ALLOW_REORDER')) return;\n\n    // set to idle so shows grab cursor\n    root.element.dataset.dragState = 'idle';\n\n    const grab = e => {\n        if (!e.isPrimary) return;\n\n        let removedActivateListener = false;\n\n        const origin = {\n            x: e.pageX,\n            y: e.pageY,\n        };\n\n        props.dragOrigin = {\n            x: root.translateX,\n            y: root.translateY,\n        };\n\n        props.dragCenter = {\n            x: e.offsetX,\n            y: e.offsetY,\n        };\n\n        const dragState = createDragHelper(root.query('GET_ACTIVE_ITEMS'));\n\n        root.dispatch('DID_GRAB_ITEM', { id: props.id, dragState });\n\n        const drag = e => {\n            if (!e.isPrimary) return;\n\n            e.stopPropagation();\n            e.preventDefault();\n\n            props.dragOffset = {\n                x: e.pageX - origin.x,\n                y: e.pageY - origin.y,\n            };\n\n            // if dragged stop listening to clicks, will re-add when done dragging\n            const dist =\n                props.dragOffset.x * props.dragOffset.x + props.dragOffset.y * props.dragOffset.y;\n            if (dist > 16 && !removedActivateListener) {\n                removedActivateListener = true;\n                root.element.removeEventListener('click', root.ref.handleClick);\n            }\n\n            root.dispatch('DID_DRAG_ITEM', { id: props.id, dragState });\n        };\n\n        const drop = e => {\n            if (!e.isPrimary) return;\n\n            document.removeEventListener('pointermove', drag);\n            document.removeEventListener('pointerup', drop);\n\n            props.dragOffset = {\n                x: e.pageX - origin.x,\n                y: e.pageY - origin.y,\n            };\n\n            root.dispatch('DID_DROP_ITEM', { id: props.id, dragState });\n\n            // start listening to clicks again\n            if (removedActivateListener) {\n                setTimeout(() => root.element.addEventListener('click', root.ref.handleClick), 0);\n            }\n        };\n\n        document.addEventListener('pointermove', drag);\n        document.addEventListener('pointerup', drop);\n    };\n\n    root.element.addEventListener('pointerdown', grab);\n};\n\nconst route$1 = createRoute({\n    DID_UPDATE_PANEL_HEIGHT: ({ root, action }) => {\n        root.height = action.height;\n    },\n});\n\nconst write$4 = createRoute(\n    {\n        DID_GRAB_ITEM: ({ root, props }) => {\n            props.dragOrigin = {\n                x: root.translateX,\n                y: root.translateY,\n            };\n        },\n        DID_DRAG_ITEM: ({ root }) => {\n            root.element.dataset.dragState = 'drag';\n        },\n        DID_DROP_ITEM: ({ root, props }) => {\n            props.dragOffset = null;\n            props.dragOrigin = null;\n            root.element.dataset.dragState = 'drop';\n        },\n    },\n    ({ root, actions, props, shouldOptimize }) => {\n        if (root.element.dataset.dragState === 'drop') {\n            if (root.scaleX <= 1) {\n                root.element.dataset.dragState = 'idle';\n            }\n        }\n\n        // select last state change action\n        let action = actions\n            .concat()\n            .filter(action => /^DID_/.test(action.type))\n            .reverse()\n            .find(action => StateMap[action.type]);\n\n        // no need to set same state twice\n        if (action && action.type !== props.currentState) {\n            // set current state\n            props.currentState = action.type;\n\n            // set state\n            root.element.dataset.filepondItemState = StateMap[props.currentState] || '';\n        }\n\n        // route actions\n        const aspectRatio =\n            root.query('GET_ITEM_PANEL_ASPECT_RATIO') || root.query('GET_PANEL_ASPECT_RATIO');\n        if (!aspectRatio) {\n            route$1({ root, actions, props });\n            if (!root.height && root.ref.container.rect.element.height > 0) {\n                root.height = root.ref.container.rect.element.height;\n            }\n        } else if (!shouldOptimize) {\n            root.height = root.rect.element.width * aspectRatio;\n        }\n\n        // sync panel height with item height\n        if (shouldOptimize) {\n            root.ref.panel.height = null;\n        }\n\n        root.ref.panel.height = root.height;\n    }\n);\n\nconst item = createView({\n    create: create$7,\n    write: write$4,\n    destroy: ({ root, props }) => {\n        root.element.removeEventListener('click', root.ref.handleClick);\n        root.dispatch('RELEASE_ITEM', { query: props.id });\n    },\n    tag: 'li',\n    name: 'item',\n    mixins: {\n        apis: [\n            'id',\n            'interactionMethod',\n            'markedForRemoval',\n            'spawnDate',\n            'dragCenter',\n            'dragOrigin',\n            'dragOffset',\n        ],\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity', 'height'],\n        animations: {\n            scaleX: ITEM_SCALE_SPRING,\n            scaleY: ITEM_SCALE_SPRING,\n            translateX: ITEM_TRANSLATE_SPRING,\n            translateY: ITEM_TRANSLATE_SPRING,\n            opacity: { type: 'tween', duration: 150 },\n        },\n    },\n});\n\nvar getItemsPerRow = (horizontalSpace, itemWidth) => {\n    // add one pixel leeway, when using percentages for item width total items can be 1.99 per row\n\n    return Math.max(1, Math.floor((horizontalSpace + 1) / itemWidth));\n};\n\nconst getItemIndexByPosition = (view, children, positionInView) => {\n    if (!positionInView) return;\n\n    const horizontalSpace = view.rect.element.width;\n    // const children = view.childViews;\n    const l = children.length;\n    let last = null;\n\n    // -1, don't move items to accomodate (either add to top or bottom)\n    if (l === 0 || positionInView.top < children[0].rect.element.top) return -1;\n\n    // let's get the item width\n    const item = children[0];\n    const itemRect = item.rect.element;\n    const itemHorizontalMargin = itemRect.marginLeft + itemRect.marginRight;\n    const itemWidth = itemRect.width + itemHorizontalMargin;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        for (let index = 0; index < l; index++) {\n            const child = children[index];\n            const childMid = child.rect.outer.top + child.rect.element.height * 0.5;\n            if (positionInView.top < childMid) {\n                return index;\n            }\n        }\n        return l;\n    }\n\n    // grid\n    const itemVerticalMargin = itemRect.marginTop + itemRect.marginBottom;\n    const itemHeight = itemRect.height + itemVerticalMargin;\n    for (let index = 0; index < l; index++) {\n        const indexX = index % itemsPerRow;\n        const indexY = Math.floor(index / itemsPerRow);\n\n        const offsetX = indexX * itemWidth;\n        const offsetY = indexY * itemHeight;\n\n        const itemTop = offsetY - itemRect.marginTop;\n        const itemRight = offsetX + itemWidth;\n        const itemBottom = offsetY + itemHeight + itemRect.marginBottom;\n\n        if (positionInView.top < itemBottom && positionInView.top > itemTop) {\n            if (positionInView.left < itemRight) {\n                return index;\n            } else if (index !== l - 1) {\n                last = index;\n            } else {\n                last = null;\n            }\n        }\n    }\n\n    if (last !== null) {\n        return last;\n    }\n\n    return l;\n};\n\nconst dropAreaDimensions = {\n    height: 0,\n    width: 0,\n    get getHeight() {\n        return this.height;\n    },\n    set setHeight(val) {\n        if (this.height === 0 || val === 0) this.height = val;\n    },\n    get getWidth() {\n        return this.width;\n    },\n    set setWidth(val) {\n        if (this.width === 0 || val === 0) this.width = val;\n    },\n    setDimensions: function(height, width) {\n        if (this.height === 0 || height === 0) this.height = height;\n        if (this.width === 0 || width === 0) this.width = width;\n    },\n};\n\nconst create$8 = ({ root }) => {\n    // need to set role to list as otherwise it won't be read as a list by VoiceOver\n    attr(root.element, 'role', 'list');\n\n    root.ref.lastItemSpanwDate = Date.now();\n};\n\n/**\n * Inserts a new item\n * @param root\n * @param action\n */\nconst addItemView = ({ root, action }) => {\n    const { id, index, interactionMethod } = action;\n\n    root.ref.addIndex = index;\n\n    const now = Date.now();\n    let spawnDate = now;\n    let opacity = 1;\n\n    if (interactionMethod !== InteractionMethod.NONE) {\n        opacity = 0;\n        const cooldown = root.query('GET_ITEM_INSERT_INTERVAL');\n        const dist = now - root.ref.lastItemSpanwDate;\n        spawnDate = dist < cooldown ? now + (cooldown - dist) : now;\n    }\n\n    root.ref.lastItemSpanwDate = spawnDate;\n\n    root.appendChildView(\n        root.createChildView(\n            // view type\n            item,\n\n            // props\n            {\n                spawnDate,\n                id,\n                opacity,\n                interactionMethod,\n            }\n        ),\n        index\n    );\n};\n\nconst moveItem = (item, x, y, vx = 0, vy = 1) => {\n    // set to null to remove animation while dragging\n    if (item.dragOffset) {\n        item.translateX = null;\n        item.translateY = null;\n        item.translateX = item.dragOrigin.x + item.dragOffset.x;\n        item.translateY = item.dragOrigin.y + item.dragOffset.y;\n        item.scaleX = 1.025;\n        item.scaleY = 1.025;\n    } else {\n        item.translateX = x;\n        item.translateY = y;\n\n        if (Date.now() > item.spawnDate) {\n            // reveal element\n            if (item.opacity === 0) {\n                introItemView(item, x, y, vx, vy);\n            }\n\n            // make sure is default scale every frame\n            item.scaleX = 1;\n            item.scaleY = 1;\n            item.opacity = 1;\n        }\n    }\n};\n\nconst introItemView = (item, x, y, vx, vy) => {\n    if (item.interactionMethod === InteractionMethod.NONE) {\n        item.translateX = null;\n        item.translateX = x;\n        item.translateY = null;\n        item.translateY = y;\n    } else if (item.interactionMethod === InteractionMethod.DROP) {\n        item.translateX = null;\n        item.translateX = x - vx * 20;\n\n        item.translateY = null;\n        item.translateY = y - vy * 10;\n\n        item.scaleX = 0.8;\n        item.scaleY = 0.8;\n    } else if (item.interactionMethod === InteractionMethod.BROWSE) {\n        item.translateY = null;\n        item.translateY = y - 30;\n    } else if (item.interactionMethod === InteractionMethod.API) {\n        item.translateX = null;\n        item.translateX = x - 30;\n        item.translateY = null;\n    }\n};\n\n/**\n * Removes an existing item\n * @param root\n * @param action\n */\nconst removeItemView = ({ root, action }) => {\n    const { id } = action;\n\n    // get the view matching the given id\n    const view = root.childViews.find(child => child.id === id);\n\n    // if no view found, exit\n    if (!view) {\n        return;\n    }\n\n    // animate view out of view\n    view.scaleX = 0.9;\n    view.scaleY = 0.9;\n    view.opacity = 0;\n\n    // mark for removal\n    view.markedForRemoval = true;\n};\n\nconst getItemHeight = child =>\n    child.rect.element.height +\n    child.rect.element.marginBottom * 0.5 +\n    child.rect.element.marginTop * 0.5;\nconst getItemWidth = child =>\n    child.rect.element.width +\n    child.rect.element.marginLeft * 0.5 +\n    child.rect.element.marginRight * 0.5;\n\nconst dragItem = ({ root, action }) => {\n    const { id, dragState } = action;\n\n    // reference to item\n    const item = root.query('GET_ITEM', { id });\n\n    // get the view matching the given id\n    const view = root.childViews.find(child => child.id === id);\n\n    const numItems = root.childViews.length;\n    const oldIndex = dragState.getItemIndex(item);\n\n    // if no view found, exit\n    if (!view) return;\n\n    const dragPosition = {\n        x: view.dragOrigin.x + view.dragOffset.x + view.dragCenter.x,\n        y: view.dragOrigin.y + view.dragOffset.y + view.dragCenter.y,\n    };\n\n    // get drag area dimensions\n    const dragHeight = getItemHeight(view);\n    const dragWidth = getItemWidth(view);\n\n    // get rows and columns (There will always be at least one row and one column if a file is present)\n    let cols = Math.floor(root.rect.outer.width / dragWidth);\n    if (cols > numItems) cols = numItems;\n\n    // rows are used to find when we have left the preview area bounding box\n    const rows = Math.floor(numItems / cols + 1);\n\n    dropAreaDimensions.setHeight = dragHeight * rows;\n    dropAreaDimensions.setWidth = dragWidth * cols;\n\n    // get new index of dragged item\n    var location = {\n        y: Math.floor(dragPosition.y / dragHeight),\n        x: Math.floor(dragPosition.x / dragWidth),\n        getGridIndex: function getGridIndex() {\n            if (\n                dragPosition.y > dropAreaDimensions.getHeight ||\n                dragPosition.y < 0 ||\n                dragPosition.x > dropAreaDimensions.getWidth ||\n                dragPosition.x < 0\n            )\n                return oldIndex;\n            return this.y * cols + this.x;\n        },\n        getColIndex: function getColIndex() {\n            const items = root.query('GET_ACTIVE_ITEMS');\n            const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n            const children = items.map(item =>\n                visibleChildren.find(childView => childView.id === item.id)\n            );\n            const currentIndex = children.findIndex(child => child === view);\n            const dragHeight = getItemHeight(view);\n            const l = children.length;\n            let idx = l;\n            let childHeight = 0;\n            let childBottom = 0;\n            let childTop = 0;\n            for (let i = 0; i < l; i++) {\n                childHeight = getItemHeight(children[i]);\n                childTop = childBottom;\n                childBottom = childTop + childHeight;\n                if (dragPosition.y < childBottom) {\n                    if (currentIndex > i) {\n                        if (dragPosition.y < childTop + dragHeight) {\n                            idx = i;\n                            break;\n                        }\n                        continue;\n                    }\n                    idx = i;\n                    break;\n                }\n            }\n            return idx;\n        },\n    };\n\n    // get new index\n    const index = cols > 1 ? location.getGridIndex() : location.getColIndex();\n    root.dispatch('MOVE_ITEM', { query: view, index });\n\n    // if the index of the item changed, dispatch reorder action\n    const currentIndex = dragState.getIndex();\n\n    if (currentIndex === undefined || currentIndex !== index) {\n        dragState.setIndex(index);\n\n        if (currentIndex === undefined) return;\n\n        root.dispatch('DID_REORDER_ITEMS', {\n            items: root.query('GET_ACTIVE_ITEMS'),\n            origin: oldIndex,\n            target: index,\n        });\n    }\n};\n\n/**\n * Setup action routes\n */\nconst route$2 = createRoute({\n    DID_ADD_ITEM: addItemView,\n    DID_REMOVE_ITEM: removeItemView,\n    DID_DRAG_ITEM: dragItem,\n});\n\n/**\n * Write to view\n * @param root\n * @param actions\n * @param props\n */\nconst write$5 = ({ root, props, actions, shouldOptimize }) => {\n    // route actions\n    route$2({ root, props, actions });\n\n    const { dragCoordinates } = props;\n\n    // available space on horizontal axis\n    const horizontalSpace = root.rect.element.width;\n\n    // only draw children that have dimensions\n    const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n\n    // sort based on current active items\n    const children = root\n        .query('GET_ACTIVE_ITEMS')\n        .map(item => visibleChildren.find(child => child.id === item.id))\n        .filter(item => item);\n\n    // get index\n    const dragIndex = dragCoordinates\n        ? getItemIndexByPosition(root, children, dragCoordinates)\n        : null;\n\n    // add index is used to reserve the dropped/added item index till the actual item is rendered\n    const addIndex = root.ref.addIndex || null;\n\n    // add index no longer needed till possibly next draw\n    root.ref.addIndex = null;\n\n    let dragIndexOffset = 0;\n    let removeIndexOffset = 0;\n    let addIndexOffset = 0;\n\n    if (children.length === 0) return;\n\n    const childRect = children[0].rect.element;\n    const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n    const itemWidth = childRect.width + itemHorizontalMargin;\n    const itemHeight = childRect.height + itemVerticalMargin;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        let offsetY = 0;\n        let dragOffset = 0;\n\n        children.forEach((child, index) => {\n            if (dragIndex) {\n                let dist = index - dragIndex;\n                if (dist === -2) {\n                    dragOffset = -itemVerticalMargin * 0.25;\n                } else if (dist === -1) {\n                    dragOffset = -itemVerticalMargin * 0.75;\n                } else if (dist === 0) {\n                    dragOffset = itemVerticalMargin * 0.75;\n                } else if (dist === 1) {\n                    dragOffset = itemVerticalMargin * 0.25;\n                } else {\n                    dragOffset = 0;\n                }\n            }\n\n            if (shouldOptimize) {\n                child.translateX = null;\n                child.translateY = null;\n            }\n\n            if (!child.markedForRemoval) {\n                moveItem(child, 0, offsetY + dragOffset);\n            }\n\n            let itemHeight = child.rect.element.height + itemVerticalMargin;\n\n            let visualHeight = itemHeight * (child.markedForRemoval ? child.opacity : 1);\n\n            offsetY += visualHeight;\n        });\n    }\n    // grid\n    else {\n        let prevX = 0;\n        let prevY = 0;\n\n        children.forEach((child, index) => {\n            if (index === dragIndex) {\n                dragIndexOffset = 1;\n            }\n\n            if (index === addIndex) {\n                addIndexOffset += 1;\n            }\n\n            if (child.markedForRemoval && child.opacity < 0.5) {\n                removeIndexOffset -= 1;\n            }\n\n            const visualIndex = index + addIndexOffset + dragIndexOffset + removeIndexOffset;\n\n            const indexX = visualIndex % itemsPerRow;\n            const indexY = Math.floor(visualIndex / itemsPerRow);\n\n            const offsetX = indexX * itemWidth;\n            const offsetY = indexY * itemHeight;\n\n            const vectorX = Math.sign(offsetX - prevX);\n            const vectorY = Math.sign(offsetY - prevY);\n\n            prevX = offsetX;\n            prevY = offsetY;\n\n            if (child.markedForRemoval) return;\n\n            if (shouldOptimize) {\n                child.translateX = null;\n                child.translateY = null;\n            }\n\n            moveItem(child, offsetX, offsetY, vectorX, vectorY);\n        });\n    }\n};\n\n/**\n * Filters actions that are meant specifically for a certain child of the list\n * @param child\n * @param actions\n */\nconst filterSetItemActions = (child, actions) =>\n    actions.filter(action => {\n        // if action has an id, filter out actions that don't have this child id\n        if (action.data && action.data.id) {\n            return child.id === action.data.id;\n        }\n\n        // allow all other actions\n        return true;\n    });\n\nconst list = createView({\n    create: create$8,\n    write: write$5,\n    tag: 'ul',\n    name: 'list',\n    didWriteView: ({ root }) => {\n        root.childViews\n            .filter(view => view.markedForRemoval && view.opacity === 0 && view.resting)\n            .forEach(view => {\n                view._destroy();\n                root.removeChildView(view);\n            });\n    },\n    filterFrameActionsForChild: filterSetItemActions,\n    mixins: {\n        apis: ['dragCoordinates'],\n    },\n});\n\nconst create$9 = ({ root, props }) => {\n    root.ref.list = root.appendChildView(root.createChildView(list));\n    props.dragCoordinates = null;\n    props.overflowing = false;\n};\n\nconst storeDragCoordinates = ({ root, props, action }) => {\n    if (!root.query('GET_ITEM_INSERT_LOCATION_FREEDOM')) return;\n    props.dragCoordinates = {\n        left: action.position.scopeLeft - root.ref.list.rect.element.left,\n        top:\n            action.position.scopeTop -\n            (root.rect.outer.top + root.rect.element.marginTop + root.rect.element.scrollTop),\n    };\n};\n\nconst clearDragCoordinates = ({ props }) => {\n    props.dragCoordinates = null;\n};\n\nconst route$3 = createRoute({\n    DID_DRAG: storeDragCoordinates,\n    DID_END_DRAG: clearDragCoordinates,\n});\n\nconst write$6 = ({ root, props, actions }) => {\n    // route actions\n    route$3({ root, props, actions });\n\n    // current drag position\n    root.ref.list.dragCoordinates = props.dragCoordinates;\n\n    // if currently overflowing but no longer received overflow\n    if (props.overflowing && !props.overflow) {\n        props.overflowing = false;\n\n        // reset overflow state\n        root.element.dataset.state = '';\n        root.height = null;\n    }\n\n    // if is not overflowing currently but does receive overflow value\n    if (props.overflow) {\n        const newHeight = Math.round(props.overflow);\n        if (newHeight !== root.height) {\n            props.overflowing = true;\n            root.element.dataset.state = 'overflow';\n            root.height = newHeight;\n        }\n    }\n};\n\nconst listScroller = createView({\n    create: create$9,\n    write: write$6,\n    name: 'list-scroller',\n    mixins: {\n        apis: ['overflow', 'dragCoordinates'],\n        styles: ['height', 'translateY'],\n        animations: {\n            translateY: 'spring',\n        },\n    },\n});\n\nconst attrToggle = (element, name, state, enabledValue = '') => {\n    if (state) {\n        attr(element, name, enabledValue);\n    } else {\n        element.removeAttribute(name);\n    }\n};\n\nconst resetFileInput = input => {\n    // no value, no need to reset\n    if (!input || input.value === '') {\n        return;\n    }\n\n    try {\n        // for modern browsers\n        input.value = '';\n    } catch (err) {}\n\n    // for IE10\n    if (input.value) {\n        // quickly append input to temp form and reset form\n        const form = createElement$1('form');\n        const parentNode = input.parentNode;\n        const ref = input.nextSibling;\n        form.appendChild(input);\n        form.reset();\n\n        // re-inject input where it originally was\n        if (ref) {\n            parentNode.insertBefore(input, ref);\n        } else {\n            parentNode.appendChild(input);\n        }\n    }\n};\n\nconst create$a = ({ root, props }) => {\n    // set id so can be referenced from outside labels\n    root.element.id = `filepond--browser-${props.id}`;\n\n    // set name of element (is removed when a value is set)\n    attr(root.element, 'name', root.query('GET_NAME'));\n\n    // we have to link this element to the status element\n    attr(root.element, 'aria-controls', `filepond--assistant-${props.id}`);\n\n    // set label, we use labelled by as otherwise the screenreader does not read the \"browse\" text in the label (as it has tabindex: 0)\n    attr(root.element, 'aria-labelledby', `filepond--drop-label-${props.id}`);\n\n    // set configurable props\n    setAcceptedFileTypes({ root, action: { value: root.query('GET_ACCEPTED_FILE_TYPES') } });\n    toggleAllowMultiple({ root, action: { value: root.query('GET_ALLOW_MULTIPLE') } });\n    toggleDirectoryFilter({ root, action: { value: root.query('GET_ALLOW_DIRECTORIES_ONLY') } });\n    toggleDisabled({ root });\n    toggleRequired({ root, action: { value: root.query('GET_REQUIRED') } });\n    setCaptureMethod({ root, action: { value: root.query('GET_CAPTURE_METHOD') } });\n\n    // handle changes to the input field\n    root.ref.handleChange = e => {\n        if (!root.element.value) {\n            return;\n        }\n\n        // extract files and move value of webkitRelativePath path to _relativePath\n        const files = Array.from(root.element.files).map(file => {\n            file._relativePath = file.webkitRelativePath;\n            return file;\n        });\n\n        // we add a little delay so the OS file select window can move out of the way before we add our file\n        setTimeout(() => {\n            // load files\n            props.onload(files);\n\n            // reset input, it's just for exposing a method to drop files, should not retain any state\n            resetFileInput(root.element);\n        }, 250);\n    };\n\n    root.element.addEventListener('change', root.ref.handleChange);\n};\n\nconst setAcceptedFileTypes = ({ root, action }) => {\n    if (!root.query('GET_ALLOW_SYNC_ACCEPT_ATTRIBUTE')) return;\n    attrToggle(root.element, 'accept', !!action.value, action.value ? action.value.join(',') : '');\n};\n\nconst toggleAllowMultiple = ({ root, action }) => {\n    attrToggle(root.element, 'multiple', action.value);\n};\n\nconst toggleDirectoryFilter = ({ root, action }) => {\n    attrToggle(root.element, 'webkitdirectory', action.value);\n};\n\nconst toggleDisabled = ({ root }) => {\n    const isDisabled = root.query('GET_DISABLED');\n    const doesAllowBrowse = root.query('GET_ALLOW_BROWSE');\n    const disableField = isDisabled || !doesAllowBrowse;\n    attrToggle(root.element, 'disabled', disableField);\n};\n\nconst toggleRequired = ({ root, action }) => {\n    // want to remove required, always possible\n    if (!action.value) {\n        attrToggle(root.element, 'required', false);\n    }\n    // if want to make required, only possible when zero items\n    else if (root.query('GET_TOTAL_ITEMS') === 0) {\n        attrToggle(root.element, 'required', true);\n    }\n};\n\nconst setCaptureMethod = ({ root, action }) => {\n    attrToggle(root.element, 'capture', !!action.value, action.value === true ? '' : action.value);\n};\n\nconst updateRequiredStatus = ({ root }) => {\n    const { element } = root;\n    // always remove the required attribute when more than zero items\n    if (root.query('GET_TOTAL_ITEMS') > 0) {\n        attrToggle(element, 'required', false);\n        attrToggle(element, 'name', false);\n    } else {\n        // add name attribute\n        attrToggle(element, 'name', true, root.query('GET_NAME'));\n\n        // remove any validation messages\n        const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n        if (shouldCheckValidity) {\n            element.setCustomValidity('');\n        }\n\n        // we only add required if the field has been deemed required\n        if (root.query('GET_REQUIRED')) {\n            attrToggle(element, 'required', true);\n        }\n    }\n};\n\nconst updateFieldValidityStatus = ({ root }) => {\n    const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n    if (!shouldCheckValidity) return;\n    root.element.setCustomValidity(root.query('GET_LABEL_INVALID_FIELD'));\n};\n\nconst browser = createView({\n    tag: 'input',\n    name: 'browser',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    attributes: {\n        type: 'file',\n    },\n    create: create$a,\n    destroy: ({ root }) => {\n        root.element.removeEventListener('change', root.ref.handleChange);\n    },\n    write: createRoute({\n        DID_LOAD_ITEM: updateRequiredStatus,\n        DID_REMOVE_ITEM: updateRequiredStatus,\n        DID_THROW_ITEM_INVALID: updateFieldValidityStatus,\n\n        DID_SET_DISABLED: toggleDisabled,\n        DID_SET_ALLOW_BROWSE: toggleDisabled,\n        DID_SET_ALLOW_DIRECTORIES_ONLY: toggleDirectoryFilter,\n        DID_SET_ALLOW_MULTIPLE: toggleAllowMultiple,\n        DID_SET_ACCEPTED_FILE_TYPES: setAcceptedFileTypes,\n        DID_SET_CAPTURE_METHOD: setCaptureMethod,\n        DID_SET_REQUIRED: toggleRequired,\n    }),\n});\n\nconst Key = {\n    ENTER: 13,\n    SPACE: 32,\n};\n\nconst create$b = ({ root, props }) => {\n    // create the label and link it to the file browser\n    const label = createElement$1('label');\n    attr(label, 'for', `filepond--browser-${props.id}`);\n\n    // use for labeling file input (aria-labelledby on file input)\n    attr(label, 'id', `filepond--drop-label-${props.id}`);\n\n    // hide the label for screenreaders, the input element will read the contents of the label when it's focussed. If we don't set aria-hidden the screenreader will also navigate the contents of the label separately from the input.\n    attr(label, 'aria-hidden', 'true');\n\n    // handle keys\n    root.ref.handleKeyDown = e => {\n        const isActivationKey = e.keyCode === Key.ENTER || e.keyCode === Key.SPACE;\n        if (!isActivationKey) return;\n        // stops from triggering the element a second time\n        e.preventDefault();\n\n        // click link (will then in turn activate file input)\n        root.ref.label.click();\n    };\n\n    root.ref.handleClick = e => {\n        const isLabelClick = e.target === label || label.contains(e.target);\n\n        // don't want to click twice\n        if (isLabelClick) return;\n\n        // click link (will then in turn activate file input)\n        root.ref.label.click();\n    };\n\n    // attach events\n    label.addEventListener('keydown', root.ref.handleKeyDown);\n    root.element.addEventListener('click', root.ref.handleClick);\n\n    // update\n    updateLabelValue(label, props.caption);\n\n    // add!\n    root.appendChild(label);\n    root.ref.label = label;\n};\n\nconst updateLabelValue = (label, value) => {\n    label.innerHTML = value;\n    const clickable = label.querySelector('.filepond--label-action');\n    if (clickable) {\n        attr(clickable, 'tabindex', '0');\n    }\n    return value;\n};\n\nconst dropLabel = createView({\n    name: 'drop-label',\n    ignoreRect: true,\n    create: create$b,\n    destroy: ({ root }) => {\n        root.ref.label.addEventListener('keydown', root.ref.handleKeyDown);\n        root.element.removeEventListener('click', root.ref.handleClick);\n    },\n    write: createRoute({\n        DID_SET_LABEL_IDLE: ({ root, action }) => {\n            updateLabelValue(root.ref.label, action.value);\n        },\n    }),\n    mixins: {\n        styles: ['opacity', 'translateX', 'translateY'],\n        animations: {\n            opacity: { type: 'tween', duration: 150 },\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\nconst blob = createView({\n    name: 'drip-blob',\n    ignoreRect: true,\n    mixins: {\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            translateX: 'spring',\n            translateY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n    },\n});\n\nconst addBlob = ({ root }) => {\n    const centerX = root.rect.element.width * 0.5;\n    const centerY = root.rect.element.height * 0.5;\n\n    root.ref.blob = root.appendChildView(\n        root.createChildView(blob, {\n            opacity: 0,\n            scaleX: 2.5,\n            scaleY: 2.5,\n            translateX: centerX,\n            translateY: centerY,\n        })\n    );\n};\n\nconst moveBlob = ({ root, action }) => {\n    if (!root.ref.blob) {\n        addBlob({ root });\n        return;\n    }\n\n    root.ref.blob.translateX = action.position.scopeLeft;\n    root.ref.blob.translateY = action.position.scopeTop;\n    root.ref.blob.scaleX = 1;\n    root.ref.blob.scaleY = 1;\n    root.ref.blob.opacity = 1;\n};\n\nconst hideBlob = ({ root }) => {\n    if (!root.ref.blob) {\n        return;\n    }\n    root.ref.blob.opacity = 0;\n};\n\nconst explodeBlob = ({ root }) => {\n    if (!root.ref.blob) {\n        return;\n    }\n    root.ref.blob.scaleX = 2.5;\n    root.ref.blob.scaleY = 2.5;\n    root.ref.blob.opacity = 0;\n};\n\nconst write$7 = ({ root, props, actions }) => {\n    route$4({ root, props, actions });\n\n    const { blob } = root.ref;\n\n    if (actions.length === 0 && blob && blob.opacity === 0) {\n        root.removeChildView(blob);\n        root.ref.blob = null;\n    }\n};\n\nconst route$4 = createRoute({\n    DID_DRAG: moveBlob,\n    DID_DROP: explodeBlob,\n    DID_END_DRAG: hideBlob,\n});\n\nconst drip = createView({\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'drip',\n    write: write$7,\n});\n\nconst setInputFiles = (element, files) => {\n    try {\n        // Create a DataTransfer instance and add a newly created file\n        const dataTransfer = new DataTransfer();\n        files.forEach(file => {\n            if (file instanceof File) {\n                dataTransfer.items.add(file);\n            } else {\n                dataTransfer.items.add(\n                    new File([file], file.name, {\n                        type: file.type,\n                    })\n                );\n            }\n        });\n\n        // Assign the DataTransfer files list to the file input\n        element.files = dataTransfer.files;\n    } catch (err) {\n        return false;\n    }\n    return true;\n};\n\nconst create$c = ({ root }) => (root.ref.fields = {});\n\nconst getField = (root, id) => root.ref.fields[id];\n\nconst syncFieldPositionsWithItems = root => {\n    root.query('GET_ACTIVE_ITEMS').forEach(item => {\n        if (!root.ref.fields[item.id]) return;\n        root.element.appendChild(root.ref.fields[item.id]);\n    });\n};\n\nconst didReorderItems = ({ root }) => syncFieldPositionsWithItems(root);\n\nconst didAddItem = ({ root, action }) => {\n    const fileItem = root.query('GET_ITEM', action.id);\n    const isLocalFile = fileItem.origin === FileOrigin.LOCAL;\n    const shouldUseFileInput = !isLocalFile && root.query('SHOULD_UPDATE_FILE_INPUT');\n    const dataContainer = createElement$1('input');\n    dataContainer.type = shouldUseFileInput ? 'file' : 'hidden';\n    dataContainer.name = root.query('GET_NAME');\n    dataContainer.disabled = root.query('GET_DISABLED');\n    root.ref.fields[action.id] = dataContainer;\n    syncFieldPositionsWithItems(root);\n};\n\nconst didLoadItem$1 = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n\n    // store server ref in hidden input\n    if (action.serverFileReference !== null) field.value = action.serverFileReference;\n\n    // store file item in file input\n    if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n\n    const fileItem = root.query('GET_ITEM', action.id);\n    setInputFiles(field, [fileItem.file]);\n};\n\nconst didPrepareOutput = ({ root, action }) => {\n    // this timeout pushes the handler after 'load'\n    if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n    setTimeout(() => {\n        const field = getField(root, action.id);\n        if (!field) return;\n        setInputFiles(field, [action.file]);\n    }, 0);\n};\n\nconst didSetDisabled = ({ root }) => {\n    root.element.disabled = root.query('GET_DISABLED');\n};\n\nconst didRemoveItem = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    if (field.parentNode) field.parentNode.removeChild(field);\n    delete root.ref.fields[action.id];\n};\n\n// only runs for server files. will refuse to update the value if the field\n// is a file field\nconst didDefineValue = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    if (action.value === null) {\n        // clear field value\n        field.removeAttribute('value');\n    } else {\n        // set field value\n        if (field.type != 'file') {\n            field.value = action.value;\n        }\n    }\n    syncFieldPositionsWithItems(root);\n};\n\nconst write$8 = createRoute({\n    DID_SET_DISABLED: didSetDisabled,\n    DID_ADD_ITEM: didAddItem,\n    DID_LOAD_ITEM: didLoadItem$1,\n    DID_REMOVE_ITEM: didRemoveItem,\n    DID_DEFINE_VALUE: didDefineValue,\n    DID_PREPARE_OUTPUT: didPrepareOutput,\n    DID_REORDER_ITEMS: didReorderItems,\n    DID_SORT_ITEMS: didReorderItems,\n});\n\nconst data = createView({\n    tag: 'fieldset',\n    name: 'data',\n    create: create$c,\n    write: write$8,\n    ignoreRect: true,\n});\n\nconst getRootNode = element => ('getRootNode' in element ? element.getRootNode() : document);\n\nconst images = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];\nconst text$1 = ['css', 'csv', 'html', 'txt'];\nconst map = {\n    zip: 'zip|compressed',\n    epub: 'application/epub+zip',\n};\n\nconst guesstimateMimeType = (extension = '') => {\n    extension = extension.toLowerCase();\n    if (images.includes(extension)) {\n        return (\n            'image/' + (extension === 'jpg' ? 'jpeg' : extension === 'svg' ? 'svg+xml' : extension)\n        );\n    }\n    if (text$1.includes(extension)) {\n        return 'text/' + extension;\n    }\n\n    return map[extension] || '';\n};\n\nconst requestDataTransferItems = dataTransfer =>\n    new Promise((resolve, reject) => {\n        // try to get links from transfer, if found we'll exit immediately (unless a file is in the dataTransfer as well, this is because Firefox could represent the file as a URL and a file object at the same time)\n        const links = getLinks(dataTransfer);\n        if (links.length && !hasFiles(dataTransfer)) {\n            return resolve(links);\n        }\n        // try to get files from the transfer\n        getFiles(dataTransfer).then(resolve);\n    });\n\n/**\n * Test if datatransfer has files\n */\nconst hasFiles = dataTransfer => {\n    if (dataTransfer.files) return dataTransfer.files.length > 0;\n    return false;\n};\n\n/**\n * Extracts files from a DataTransfer object\n */\nconst getFiles = dataTransfer =>\n    new Promise((resolve, reject) => {\n        // get the transfer items as promises\n        const promisedFiles = (dataTransfer.items ? Array.from(dataTransfer.items) : [])\n\n            // only keep file system items (files and directories)\n            .filter(item => isFileSystemItem(item))\n\n            // map each item to promise\n            .map(item => getFilesFromItem(item));\n\n        // if is empty, see if we can extract some info from the files property as a fallback\n        if (!promisedFiles.length) {\n            // TODO: test for directories (should not be allowed)\n            // Use FileReader, problem is that the files property gets lost in the process\n            resolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);\n            return;\n        }\n\n        // done!\n        Promise.all(promisedFiles)\n            .then(returnedFileGroups => {\n                // flatten groups\n                const files = [];\n                returnedFileGroups.forEach(group => {\n                    files.push.apply(files, group);\n                });\n\n                // done (filter out empty files)!\n                resolve(\n                    files\n                        .filter(file => file)\n                        .map(file => {\n                            if (!file._relativePath) file._relativePath = file.webkitRelativePath;\n                            return file;\n                        })\n                );\n            })\n            .catch(console.error);\n    });\n\nconst isFileSystemItem = item => {\n    if (isEntry(item)) {\n        const entry = getAsEntry(item);\n        if (entry) {\n            return entry.isFile || entry.isDirectory;\n        }\n    }\n    return item.kind === 'file';\n};\n\nconst getFilesFromItem = item =>\n    new Promise((resolve, reject) => {\n        if (isDirectoryEntry(item)) {\n            getFilesInDirectory(getAsEntry(item))\n                .then(resolve)\n                .catch(reject);\n            return;\n        }\n\n        resolve([item.getAsFile()]);\n    });\n\nconst getFilesInDirectory = entry =>\n    new Promise((resolve, reject) => {\n        const files = [];\n\n        // the total entries to read\n        let dirCounter = 0;\n        let fileCounter = 0;\n\n        const resolveIfDone = () => {\n            if (fileCounter === 0 && dirCounter === 0) {\n                resolve(files);\n            }\n        };\n\n        // the recursive function\n        const readEntries = dirEntry => {\n            dirCounter++;\n\n            const directoryReader = dirEntry.createReader();\n\n            // directories are returned in batches, we need to process all batches before we're done\n            const readBatch = () => {\n                directoryReader.readEntries(entries => {\n                    if (entries.length === 0) {\n                        dirCounter--;\n                        resolveIfDone();\n                        return;\n                    }\n\n                    entries.forEach(entry => {\n                        // recursively read more directories\n                        if (entry.isDirectory) {\n                            readEntries(entry);\n                        } else {\n                            // read as file\n                            fileCounter++;\n\n                            entry.file(file => {\n                                const correctedFile = correctMissingFileType(file);\n                                if (entry.fullPath) correctedFile._relativePath = entry.fullPath;\n                                files.push(correctedFile);\n                                fileCounter--;\n                                resolveIfDone();\n                            });\n                        }\n                    });\n\n                    // try to get next batch of files\n                    readBatch();\n                }, reject);\n            };\n\n            // read first batch of files\n            readBatch();\n        };\n\n        // go!\n        readEntries(entry);\n    });\n\nconst correctMissingFileType = file => {\n    if (file.type.length) return file;\n    const date = file.lastModifiedDate;\n    const name = file.name;\n    const type = guesstimateMimeType(getExtensionFromFilename(file.name));\n    if (!type.length) return file;\n    file = file.slice(0, file.size, type);\n    file.name = name;\n    file.lastModifiedDate = date;\n    return file;\n};\n\nconst isDirectoryEntry = item => isEntry(item) && (getAsEntry(item) || {}).isDirectory;\n\nconst isEntry = item => 'webkitGetAsEntry' in item;\n\nconst getAsEntry = item => item.webkitGetAsEntry();\n\n/**\n * Extracts links from a DataTransfer object\n */\nconst getLinks = dataTransfer => {\n    let links = [];\n    try {\n        // look in meta data property\n        links = getLinksFromTransferMetaData(dataTransfer);\n        if (links.length) {\n            return links;\n        }\n        links = getLinksFromTransferURLData(dataTransfer);\n    } catch (e) {\n        // nope nope nope (probably IE trouble)\n    }\n    return links;\n};\n\nconst getLinksFromTransferURLData = dataTransfer => {\n    let data = dataTransfer.getData('url');\n    if (typeof data === 'string' && data.length) {\n        return [data];\n    }\n    return [];\n};\n\nconst getLinksFromTransferMetaData = dataTransfer => {\n    let data = dataTransfer.getData('text/html');\n    if (typeof data === 'string' && data.length) {\n        const matches = data.match(/src\\s*=\\s*\"(.+?)\"/);\n        if (matches) {\n            return [matches[1]];\n        }\n    }\n    return [];\n};\n\nconst dragNDropObservers = [];\n\nconst eventPosition = e => ({\n    pageLeft: e.pageX,\n    pageTop: e.pageY,\n    scopeLeft: e.offsetX || e.layerX,\n    scopeTop: e.offsetY || e.layerY,\n});\n\nconst createDragNDropClient = (element, scopeToObserve, filterElement) => {\n    const observer = getDragNDropObserver(scopeToObserve);\n\n    const client = {\n        element,\n        filterElement,\n        state: null,\n        ondrop: () => {},\n        onenter: () => {},\n        ondrag: () => {},\n        onexit: () => {},\n        onload: () => {},\n        allowdrop: () => {},\n    };\n\n    client.destroy = observer.addListener(client);\n\n    return client;\n};\n\nconst getDragNDropObserver = element => {\n    // see if already exists, if so, return\n    const observer = dragNDropObservers.find(item => item.element === element);\n    if (observer) {\n        return observer;\n    }\n\n    // create new observer, does not yet exist for this element\n    const newObserver = createDragNDropObserver(element);\n    dragNDropObservers.push(newObserver);\n    return newObserver;\n};\n\nconst createDragNDropObserver = element => {\n    const clients = [];\n\n    const routes = {\n        dragenter,\n        dragover,\n        dragleave,\n        drop,\n    };\n\n    const handlers = {};\n\n    forin(routes, (event, createHandler) => {\n        handlers[event] = createHandler(element, clients);\n        element.addEventListener(event, handlers[event], false);\n    });\n\n    const observer = {\n        element,\n        addListener: client => {\n            // add as client\n            clients.push(client);\n\n            // return removeListener function\n            return () => {\n                // remove client\n                clients.splice(clients.indexOf(client), 1);\n\n                // if no more clients, clean up observer\n                if (clients.length === 0) {\n                    dragNDropObservers.splice(dragNDropObservers.indexOf(observer), 1);\n\n                    forin(routes, event => {\n                        element.removeEventListener(event, handlers[event], false);\n                    });\n                }\n            };\n        },\n    };\n\n    return observer;\n};\n\nconst elementFromPoint = (root, point) => {\n    if (!('elementFromPoint' in root)) {\n        root = document;\n    }\n    return root.elementFromPoint(point.x, point.y);\n};\n\nconst isEventTarget = (e, target) => {\n    // get root\n    const root = getRootNode(target);\n\n    // get element at position\n    // if root is not actual shadow DOM and does not have elementFromPoint method, use the one on document\n    const elementAtPosition = elementFromPoint(root, {\n        x: e.pageX - window.pageXOffset,\n        y: e.pageY - window.pageYOffset,\n    });\n\n    // test if target is the element or if one of its children is\n    return elementAtPosition === target || target.contains(elementAtPosition);\n};\n\nlet initialTarget = null;\n\nconst setDropEffect = (dataTransfer, effect) => {\n    // is in try catch as IE11 will throw error if not\n    try {\n        dataTransfer.dropEffect = effect;\n    } catch (e) {}\n};\n\nconst dragenter = (root, clients) => e => {\n    e.preventDefault();\n\n    initialTarget = e.target;\n\n    clients.forEach(client => {\n        const { element, onenter } = client;\n\n        if (isEventTarget(e, element)) {\n            client.state = 'enter';\n\n            // fire enter event\n            onenter(eventPosition(e));\n        }\n    });\n};\n\nconst dragover = (root, clients) => e => {\n    e.preventDefault();\n\n    const dataTransfer = e.dataTransfer;\n\n    requestDataTransferItems(dataTransfer).then(items => {\n        let overDropTarget = false;\n\n        clients.some(client => {\n            const { filterElement, element, onenter, onexit, ondrag, allowdrop } = client;\n\n            // by default we can drop\n            setDropEffect(dataTransfer, 'copy');\n\n            // allow transfer of these items\n            const allowsTransfer = allowdrop(items);\n\n            // only used when can be dropped on page\n            if (!allowsTransfer) {\n                setDropEffect(dataTransfer, 'none');\n                return;\n            }\n\n            // targetting this client\n            if (isEventTarget(e, element)) {\n                overDropTarget = true;\n\n                // had no previous state, means we are entering this client\n                if (client.state === null) {\n                    client.state = 'enter';\n                    onenter(eventPosition(e));\n                    return;\n                }\n\n                // now over element (no matter if it allows the drop or not)\n                client.state = 'over';\n\n                // needs to allow transfer\n                if (filterElement && !allowsTransfer) {\n                    setDropEffect(dataTransfer, 'none');\n                    return;\n                }\n\n                // dragging\n                ondrag(eventPosition(e));\n            } else {\n                // should be over an element to drop\n                if (filterElement && !overDropTarget) {\n                    setDropEffect(dataTransfer, 'none');\n                }\n\n                // might have just left this client?\n                if (client.state) {\n                    client.state = null;\n                    onexit(eventPosition(e));\n                }\n            }\n        });\n    });\n};\n\nconst drop = (root, clients) => e => {\n    e.preventDefault();\n\n    const dataTransfer = e.dataTransfer;\n\n    requestDataTransferItems(dataTransfer).then(items => {\n        clients.forEach(client => {\n            const { filterElement, element, ondrop, onexit, allowdrop } = client;\n\n            client.state = null;\n\n            // if we're filtering on element we need to be over the element to drop\n            if (filterElement && !isEventTarget(e, element)) return;\n\n            // no transfer for this client\n            if (!allowdrop(items)) return onexit(eventPosition(e));\n\n            // we can drop these items on this client\n            ondrop(eventPosition(e), items);\n        });\n    });\n};\n\nconst dragleave = (root, clients) => e => {\n    if (initialTarget !== e.target) {\n        return;\n    }\n\n    clients.forEach(client => {\n        const { onexit } = client;\n\n        client.state = null;\n\n        onexit(eventPosition(e));\n    });\n};\n\nconst createHopper = (scope, validateItems, options) => {\n    // is now hopper scope\n    scope.classList.add('filepond--hopper');\n\n    // shortcuts\n    const { catchesDropsOnPage, requiresDropOnElement, filterItems = items => items } = options;\n\n    // create a dnd client\n    const client = createDragNDropClient(\n        scope,\n        catchesDropsOnPage ? document.documentElement : scope,\n        requiresDropOnElement\n    );\n\n    // current client state\n    let lastState = '';\n    let currentState = '';\n\n    // determines if a file may be dropped\n    client.allowdrop = items => {\n        // TODO: if we can, throw error to indicate the items cannot by dropped\n\n        return validateItems(filterItems(items));\n    };\n\n    client.ondrop = (position, items) => {\n        const filteredItems = filterItems(items);\n\n        if (!validateItems(filteredItems)) {\n            api.ondragend(position);\n            return;\n        }\n\n        currentState = 'drag-drop';\n\n        api.onload(filteredItems, position);\n    };\n\n    client.ondrag = position => {\n        api.ondrag(position);\n    };\n\n    client.onenter = position => {\n        currentState = 'drag-over';\n\n        api.ondragstart(position);\n    };\n\n    client.onexit = position => {\n        currentState = 'drag-exit';\n\n        api.ondragend(position);\n    };\n\n    const api = {\n        updateHopperState: () => {\n            if (lastState !== currentState) {\n                scope.dataset.hopperState = currentState;\n                lastState = currentState;\n            }\n        },\n        onload: () => {},\n        ondragstart: () => {},\n        ondrag: () => {},\n        ondragend: () => {},\n        destroy: () => {\n            // destroy client\n            client.destroy();\n        },\n    };\n\n    return api;\n};\n\nlet listening = false;\nconst listeners$1 = [];\n\nconst handlePaste = e => {\n    // if is pasting in input or textarea and the target is outside of a filepond scope, ignore\n    const activeEl = document.activeElement;\n    if (activeEl && /textarea|input/i.test(activeEl.nodeName)) {\n        // test textarea or input is contained in filepond root\n        let inScope = false;\n        let element = activeEl;\n        while (element !== document.body) {\n            if (element.classList.contains('filepond--root')) {\n                inScope = true;\n                break;\n            }\n            element = element.parentNode;\n        }\n\n        if (!inScope) return;\n    }\n\n    requestDataTransferItems(e.clipboardData).then(files => {\n        // no files received\n        if (!files.length) {\n            return;\n        }\n\n        // notify listeners of received files\n        listeners$1.forEach(listener => listener(files));\n    });\n};\n\nconst listen = cb => {\n    // can't add twice\n    if (listeners$1.includes(cb)) {\n        return;\n    }\n\n    // add initial listener\n    listeners$1.push(cb);\n\n    // setup paste listener for entire page\n    if (listening) {\n        return;\n    }\n\n    listening = true;\n    document.addEventListener('paste', handlePaste);\n};\n\nconst unlisten = listener => {\n    arrayRemove(listeners$1, listeners$1.indexOf(listener));\n\n    // clean up\n    if (listeners$1.length === 0) {\n        document.removeEventListener('paste', handlePaste);\n        listening = false;\n    }\n};\n\nconst createPaster = () => {\n    const cb = files => {\n        api.onload(files);\n    };\n\n    const api = {\n        destroy: () => {\n            unlisten(cb);\n        },\n        onload: () => {},\n    };\n\n    listen(cb);\n\n    return api;\n};\n\n/**\n * Creates the file view\n */\nconst create$d = ({ root, props }) => {\n    root.element.id = `filepond--assistant-${props.id}`;\n    attr(root.element, 'role', 'status');\n    attr(root.element, 'aria-live', 'polite');\n    attr(root.element, 'aria-relevant', 'additions');\n};\n\nlet addFilesNotificationTimeout = null;\nlet notificationClearTimeout = null;\n\nconst filenames = [];\n\nconst assist = (root, message) => {\n    root.element.textContent = message;\n};\n\nconst clear$1 = root => {\n    root.element.textContent = '';\n};\n\nconst listModified = (root, filename, label) => {\n    const total = root.query('GET_TOTAL_ITEMS');\n    assist(\n        root,\n        `${label} ${filename}, ${total} ${\n            total === 1\n                ? root.query('GET_LABEL_FILE_COUNT_SINGULAR')\n                : root.query('GET_LABEL_FILE_COUNT_PLURAL')\n        }`\n    );\n\n    // clear group after set amount of time so the status is not read twice\n    clearTimeout(notificationClearTimeout);\n    notificationClearTimeout = setTimeout(() => {\n        clear$1(root);\n    }, 1500);\n};\n\nconst isUsingFilePond = root => root.element.parentNode.contains(document.activeElement);\n\nconst itemAdded = ({ root, action }) => {\n    if (!isUsingFilePond(root)) {\n        return;\n    }\n\n    root.element.textContent = '';\n    const item = root.query('GET_ITEM', action.id);\n    filenames.push(item.filename);\n\n    clearTimeout(addFilesNotificationTimeout);\n    addFilesNotificationTimeout = setTimeout(() => {\n        listModified(root, filenames.join(', '), root.query('GET_LABEL_FILE_ADDED'));\n        filenames.length = 0;\n    }, 750);\n};\n\nconst itemRemoved = ({ root, action }) => {\n    if (!isUsingFilePond(root)) {\n        return;\n    }\n\n    const item = action.item;\n    listModified(root, item.filename, root.query('GET_LABEL_FILE_REMOVED'));\n};\n\nconst itemProcessed = ({ root, action }) => {\n    // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n    const label = root.query('GET_LABEL_FILE_PROCESSING_COMPLETE');\n\n    assist(root, `${filename} ${label}`);\n};\n\nconst itemProcessedUndo = ({ root, action }) => {\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n    const label = root.query('GET_LABEL_FILE_PROCESSING_ABORTED');\n\n    assist(root, `${filename} ${label}`);\n};\n\nconst itemError = ({ root, action }) => {\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n\n    // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    assist(root, `${action.status.main} ${filename} ${action.status.sub}`);\n};\n\nconst assistant = createView({\n    create: create$d,\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: itemAdded,\n        DID_REMOVE_ITEM: itemRemoved,\n        DID_COMPLETE_ITEM_PROCESSING: itemProcessed,\n\n        DID_ABORT_ITEM_PROCESSING: itemProcessedUndo,\n        DID_REVERT_ITEM_PROCESSING: itemProcessedUndo,\n\n        DID_THROW_ITEM_REMOVE_ERROR: itemError,\n        DID_THROW_ITEM_LOAD_ERROR: itemError,\n        DID_THROW_ITEM_INVALID: itemError,\n        DID_THROW_ITEM_PROCESSING_ERROR: itemError,\n    }),\n    tag: 'span',\n    name: 'assistant',\n});\n\nconst toCamels = (string, separator = '-') =>\n    string.replace(new RegExp(`${separator}.`, 'g'), sub => sub.charAt(1).toUpperCase());\n\nconst debounce = (func, interval = 16, immidiateOnly = true) => {\n    let last = Date.now();\n    let timeout = null;\n\n    return (...args) => {\n        clearTimeout(timeout);\n\n        const dist = Date.now() - last;\n\n        const fn = () => {\n            last = Date.now();\n            func(...args);\n        };\n\n        if (dist < interval) {\n            // we need to delay by the difference between interval and dist\n            // for example: if distance is 10 ms and interval is 16 ms,\n            // we need to wait an additional 6ms before calling the function)\n            if (!immidiateOnly) {\n                timeout = setTimeout(fn, interval - dist);\n            }\n        } else {\n            // go!\n            fn();\n        }\n    };\n};\n\nconst MAX_FILES_LIMIT = 1000000;\n\nconst prevent = e => e.preventDefault();\n\nconst create$e = ({ root, props }) => {\n    // Add id\n    const id = root.query('GET_ID');\n    if (id) {\n        root.element.id = id;\n    }\n\n    // Add className\n    const className = root.query('GET_CLASS_NAME');\n    if (className) {\n        className\n            .split(' ')\n            .filter(name => name.length)\n            .forEach(name => {\n                root.element.classList.add(name);\n            });\n    }\n\n    // Field label\n    root.ref.label = root.appendChildView(\n        root.createChildView(dropLabel, {\n            ...props,\n            translateY: null,\n            caption: root.query('GET_LABEL_IDLE'),\n        })\n    );\n\n    // List of items\n    root.ref.list = root.appendChildView(root.createChildView(listScroller, { translateY: null }));\n\n    // Background panel\n    root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'panel-root' }));\n\n    // Assistant notifies assistive tech when content changes\n    root.ref.assistant = root.appendChildView(root.createChildView(assistant, { ...props }));\n\n    // Data\n    root.ref.data = root.appendChildView(root.createChildView(data, { ...props }));\n\n    // Measure (tests if fixed height was set)\n    // DOCTYPE needs to be set for this to work\n    root.ref.measure = createElement$1('div');\n    root.ref.measure.style.height = '100%';\n    root.element.appendChild(root.ref.measure);\n\n    // information on the root height or fixed height status\n    root.ref.bounds = null;\n\n    // apply initial style properties\n    root.query('GET_STYLES')\n        .filter(style => !isEmpty(style.value))\n        .map(({ name, value }) => {\n            root.element.dataset[name] = value;\n        });\n\n    // determine if width changed\n    root.ref.widthPrevious = null;\n    root.ref.widthUpdated = debounce(() => {\n        root.ref.updateHistory = [];\n        root.dispatch('DID_RESIZE_ROOT');\n    }, 250);\n\n    // history of updates\n    root.ref.previousAspectRatio = null;\n    root.ref.updateHistory = [];\n\n    // prevent scrolling and zooming on iOS (only if supports pointer events, for then we can enable reorder)\n    const canHover = window.matchMedia('(pointer: fine) and (hover: hover)').matches;\n    const hasPointerEvents = 'PointerEvent' in window;\n    if (root.query('GET_ALLOW_REORDER') && hasPointerEvents && !canHover) {\n        root.element.addEventListener('touchmove', prevent, { passive: false });\n        root.element.addEventListener('gesturestart', prevent);\n    }\n\n    // add credits\n    const credits = root.query('GET_CREDITS');\n    const hasCredits = credits.length === 2;\n    if (hasCredits) {\n        const frag = document.createElement('a');\n        frag.className = 'filepond--credits';\n        frag.setAttribute('aria-hidden', 'true');\n        frag.href = credits[0];\n        frag.tabindex = -1;\n        frag.target = '_blank';\n        frag.rel = 'noopener noreferrer';\n        frag.textContent = credits[1];\n        root.element.appendChild(frag);\n        root.ref.credits = frag;\n    }\n};\n\nconst write$9 = ({ root, props, actions }) => {\n    // route actions\n    route$5({ root, props, actions });\n\n    // apply style properties\n    actions\n        .filter(action => /^DID_SET_STYLE_/.test(action.type))\n        .filter(action => !isEmpty(action.data.value))\n        .map(({ type, data }) => {\n            const name = toCamels(type.substring(8).toLowerCase(), '_');\n            root.element.dataset[name] = data.value;\n            root.invalidateLayout();\n        });\n\n    if (root.rect.element.hidden) return;\n\n    if (root.rect.element.width !== root.ref.widthPrevious) {\n        root.ref.widthPrevious = root.rect.element.width;\n        root.ref.widthUpdated();\n    }\n\n    // get box bounds, we do this only once\n    let bounds = root.ref.bounds;\n    if (!bounds) {\n        bounds = root.ref.bounds = calculateRootBoundingBoxHeight(root);\n\n        // destroy measure element\n        root.element.removeChild(root.ref.measure);\n        root.ref.measure = null;\n    }\n\n    // get quick references to various high level parts of the upload tool\n    const { hopper, label, list, panel } = root.ref;\n\n    // sets correct state to hopper scope\n    if (hopper) {\n        hopper.updateHopperState();\n    }\n\n    // bool to indicate if we're full or not\n    const aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n    const isMultiItem = root.query('GET_ALLOW_MULTIPLE');\n    const totalItems = root.query('GET_TOTAL_ITEMS');\n    const maxItems = isMultiItem ? root.query('GET_MAX_FILES') || MAX_FILES_LIMIT : 1;\n    const atMaxCapacity = totalItems === maxItems;\n\n    // action used to add item\n    const addAction = actions.find(action => action.type === 'DID_ADD_ITEM');\n\n    // if reached max capacity and we've just reached it\n    if (atMaxCapacity && addAction) {\n        // get interaction type\n        const interactionMethod = addAction.data.interactionMethod;\n\n        // hide label\n        label.opacity = 0;\n\n        if (isMultiItem) {\n            label.translateY = -40;\n        } else {\n            if (interactionMethod === InteractionMethod.API) {\n                label.translateX = 40;\n            } else if (interactionMethod === InteractionMethod.BROWSE) {\n                label.translateY = 40;\n            } else {\n                label.translateY = 30;\n            }\n        }\n    } else if (!atMaxCapacity) {\n        label.opacity = 1;\n        label.translateX = 0;\n        label.translateY = 0;\n    }\n\n    const listItemMargin = calculateListItemMargin(root);\n\n    const listHeight = calculateListHeight(root);\n\n    const labelHeight = label.rect.element.height;\n    const currentLabelHeight = !isMultiItem || atMaxCapacity ? 0 : labelHeight;\n\n    const listMarginTop = atMaxCapacity ? list.rect.element.marginTop : 0;\n    const listMarginBottom = totalItems === 0 ? 0 : list.rect.element.marginBottom;\n\n    const visualHeight = currentLabelHeight + listMarginTop + listHeight.visual + listMarginBottom;\n    const boundsHeight = currentLabelHeight + listMarginTop + listHeight.bounds + listMarginBottom;\n\n    // link list to label bottom position\n    list.translateY =\n        Math.max(0, currentLabelHeight - list.rect.element.marginTop) - listItemMargin.top;\n\n    if (aspectRatio) {\n        // fixed aspect ratio\n\n        // calculate height based on width\n        const width = root.rect.element.width;\n        const height = width * aspectRatio;\n\n        // clear history if aspect ratio has changed\n        if (aspectRatio !== root.ref.previousAspectRatio) {\n            root.ref.previousAspectRatio = aspectRatio;\n            root.ref.updateHistory = [];\n        }\n\n        // remember this width\n        const history = root.ref.updateHistory;\n        history.push(width);\n\n        const MAX_BOUNCES = 2;\n        if (history.length > MAX_BOUNCES * 2) {\n            const l = history.length;\n            const bottom = l - 10;\n            let bounces = 0;\n            for (let i = l; i >= bottom; i--) {\n                if (history[i] === history[i - 2]) {\n                    bounces++;\n                }\n\n                if (bounces >= MAX_BOUNCES) {\n                    // dont adjust height\n                    return;\n                }\n            }\n        }\n\n        // fix height of panel so it adheres to aspect ratio\n        panel.scalable = false;\n        panel.height = height;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            height -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        if (listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = height;\n    } else if (bounds.fixedHeight) {\n        // fixed height\n\n        // fix height of panel\n        panel.scalable = false;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            bounds.fixedHeight -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        // set list height\n        if (listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // no need to set container bounds as these are handles by CSS fixed height\n    } else if (bounds.cappedHeight) {\n        // max-height\n\n        // not a fixed height panel\n        const isCappedHeight = visualHeight >= bounds.cappedHeight;\n        const panelHeight = Math.min(bounds.cappedHeight, visualHeight);\n        panel.scalable = true;\n        panel.height = isCappedHeight\n            ? panelHeight\n            : panelHeight - listItemMargin.top - listItemMargin.bottom;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            panelHeight -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        // set list height (if is overflowing)\n        if (visualHeight > bounds.cappedHeight && listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = Math.min(\n            bounds.cappedHeight,\n            boundsHeight - listItemMargin.top - listItemMargin.bottom\n        );\n    } else {\n        // flexible height\n\n        // not a fixed height panel\n        const itemMargin = totalItems > 0 ? listItemMargin.top + listItemMargin.bottom : 0;\n        panel.scalable = true;\n        panel.height = Math.max(labelHeight, visualHeight - itemMargin);\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = Math.max(labelHeight, boundsHeight - itemMargin);\n    }\n\n    // move credits to bottom\n    if (root.ref.credits && panel.heightCurrent)\n        root.ref.credits.style.transform = `translateY(${panel.heightCurrent}px)`;\n};\n\nconst calculateListItemMargin = root => {\n    const item = root.ref.list.childViews[0].childViews[0];\n    return item\n        ? {\n              top: item.rect.element.marginTop,\n              bottom: item.rect.element.marginBottom,\n          }\n        : {\n              top: 0,\n              bottom: 0,\n          };\n};\n\nconst calculateListHeight = root => {\n    let visual = 0;\n    let bounds = 0;\n\n    // get file list reference\n    const scrollList = root.ref.list;\n    const itemList = scrollList.childViews[0];\n    const visibleChildren = itemList.childViews.filter(child => child.rect.element.height);\n    const children = root\n        .query('GET_ACTIVE_ITEMS')\n        .map(item => visibleChildren.find(child => child.id === item.id))\n        .filter(item => item);\n\n    // no children, done!\n    if (children.length === 0) return { visual, bounds };\n\n    const horizontalSpace = itemList.rect.element.width;\n    const dragIndex = getItemIndexByPosition(itemList, children, scrollList.dragCoordinates);\n\n    const childRect = children[0].rect.element;\n\n    const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n\n    const itemWidth = childRect.width + itemHorizontalMargin;\n    const itemHeight = childRect.height + itemVerticalMargin;\n\n    const newItem = typeof dragIndex !== 'undefined' && dragIndex >= 0 ? 1 : 0;\n    const removedItem = children.find(child => child.markedForRemoval && child.opacity < 0.45)\n        ? -1\n        : 0;\n    const verticalItemCount = children.length + newItem + removedItem;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        children.forEach(item => {\n            const height = item.rect.element.height + itemVerticalMargin;\n            bounds += height;\n            visual += height * item.opacity;\n        });\n    }\n    // grid\n    else {\n        bounds = Math.ceil(verticalItemCount / itemsPerRow) * itemHeight;\n        visual = bounds;\n    }\n\n    return { visual, bounds };\n};\n\nconst calculateRootBoundingBoxHeight = root => {\n    const height = root.ref.measureHeight || null;\n    const cappedHeight = parseInt(root.style.maxHeight, 10) || null;\n    const fixedHeight = height === 0 ? null : height;\n\n    return {\n        cappedHeight,\n        fixedHeight,\n    };\n};\n\nconst exceedsMaxFiles = (root, items) => {\n    const allowReplace = root.query('GET_ALLOW_REPLACE');\n    const allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n    const totalItems = root.query('GET_TOTAL_ITEMS');\n    let maxItems = root.query('GET_MAX_FILES');\n\n    // total amount of items being dragged\n    const totalBrowseItems = items.length;\n\n    // if does not allow multiple items and dragging more than one item\n    if (!allowMultiple && totalBrowseItems > 1) {\n        root.dispatch('DID_THROW_MAX_FILES', {\n            source: items,\n            error: createResponse('warning', 0, 'Max files'),\n        });\n        return true;\n    }\n\n    // limit max items to one if not allowed to drop multiple items\n    maxItems = allowMultiple ? maxItems : 1;\n\n    if (!allowMultiple && allowReplace) {\n        // There is only one item, so there is room to replace or add an item\n        return false;\n    }\n\n    // no more room?\n    const hasMaxItems = isInt(maxItems);\n    if (hasMaxItems && totalItems + totalBrowseItems > maxItems) {\n        root.dispatch('DID_THROW_MAX_FILES', {\n            source: items,\n            error: createResponse('warning', 0, 'Max files'),\n        });\n        return true;\n    }\n\n    return false;\n};\n\nconst getDragIndex = (list, children, position) => {\n    const itemList = list.childViews[0];\n    return getItemIndexByPosition(itemList, children, {\n        left: position.scopeLeft - itemList.rect.element.left,\n        top:\n            position.scopeTop -\n            (list.rect.outer.top + list.rect.element.marginTop + list.rect.element.scrollTop),\n    });\n};\n\n/**\n * Enable or disable file drop functionality\n */\nconst toggleDrop = root => {\n    const isAllowed = root.query('GET_ALLOW_DROP');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.hopper) {\n        const hopper = createHopper(\n            root.element,\n            items => {\n                // allow quick validation of dropped items\n                const beforeDropFile = root.query('GET_BEFORE_DROP_FILE') || (() => true);\n\n                // all items should be validated by all filters as valid\n                const dropValidation = root.query('GET_DROP_VALIDATION');\n                return dropValidation\n                    ? items.every(\n                          item =>\n                              applyFilters('ALLOW_HOPPER_ITEM', item, {\n                                  query: root.query,\n                              }).every(result => result === true) && beforeDropFile(item)\n                      )\n                    : true;\n            },\n            {\n                filterItems: items => {\n                    const ignoredFiles = root.query('GET_IGNORED_FILES');\n                    return items.filter(item => {\n                        if (isFile(item)) {\n                            return !ignoredFiles.includes(item.name.toLowerCase());\n                        }\n                        return true;\n                    });\n                },\n                catchesDropsOnPage: root.query('GET_DROP_ON_PAGE'),\n                requiresDropOnElement: root.query('GET_DROP_ON_ELEMENT'),\n            }\n        );\n\n        hopper.onload = (items, position) => {\n            // get item children elements and sort based on list sort\n            const list = root.ref.list.childViews[0];\n            const visibleChildren = list.childViews.filter(child => child.rect.element.height);\n            const children = root\n                .query('GET_ACTIVE_ITEMS')\n                .map(item => visibleChildren.find(child => child.id === item.id))\n                .filter(item => item);\n\n            applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(queue => {\n                // these files don't fit so stop here\n                if (exceedsMaxFiles(root, queue)) return false;\n\n                // go\n                root.dispatch('ADD_ITEMS', {\n                    items: queue,\n                    index: getDragIndex(root.ref.list, children, position),\n                    interactionMethod: InteractionMethod.DROP,\n                });\n            });\n\n            root.dispatch('DID_DROP', { position });\n\n            root.dispatch('DID_END_DRAG', { position });\n        };\n\n        hopper.ondragstart = position => {\n            root.dispatch('DID_START_DRAG', { position });\n        };\n\n        hopper.ondrag = debounce(position => {\n            root.dispatch('DID_DRAG', { position });\n        });\n\n        hopper.ondragend = position => {\n            root.dispatch('DID_END_DRAG', { position });\n        };\n\n        root.ref.hopper = hopper;\n\n        root.ref.drip = root.appendChildView(root.createChildView(drip));\n    } else if (!enabled && root.ref.hopper) {\n        root.ref.hopper.destroy();\n        root.ref.hopper = null;\n        root.removeChildView(root.ref.drip);\n    }\n};\n\n/**\n * Enable or disable browse functionality\n */\nconst toggleBrowse = (root, props) => {\n    const isAllowed = root.query('GET_ALLOW_BROWSE');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.browser) {\n        root.ref.browser = root.appendChildView(\n            root.createChildView(browser, {\n                ...props,\n                onload: items => {\n                    applyFilterChain('ADD_ITEMS', items, {\n                        dispatch: root.dispatch,\n                    }).then(queue => {\n                        // these files don't fit so stop here\n                        if (exceedsMaxFiles(root, queue)) return false;\n\n                        // add items!\n                        root.dispatch('ADD_ITEMS', {\n                            items: queue,\n                            index: -1,\n                            interactionMethod: InteractionMethod.BROWSE,\n                        });\n                    });\n                },\n            }),\n            0\n        );\n    } else if (!enabled && root.ref.browser) {\n        root.removeChildView(root.ref.browser);\n        root.ref.browser = null;\n    }\n};\n\n/**\n * Enable or disable paste functionality\n */\nconst togglePaste = root => {\n    const isAllowed = root.query('GET_ALLOW_PASTE');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.paster) {\n        root.ref.paster = createPaster();\n        root.ref.paster.onload = items => {\n            applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(queue => {\n                // these files don't fit so stop here\n                if (exceedsMaxFiles(root, queue)) return false;\n\n                // add items!\n                root.dispatch('ADD_ITEMS', {\n                    items: queue,\n                    index: -1,\n                    interactionMethod: InteractionMethod.PASTE,\n                });\n            });\n        };\n    } else if (!enabled && root.ref.paster) {\n        root.ref.paster.destroy();\n        root.ref.paster = null;\n    }\n};\n\n/**\n * Route actions\n */\nconst route$5 = createRoute({\n    DID_SET_ALLOW_BROWSE: ({ root, props }) => {\n        toggleBrowse(root, props);\n    },\n    DID_SET_ALLOW_DROP: ({ root }) => {\n        toggleDrop(root);\n    },\n    DID_SET_ALLOW_PASTE: ({ root }) => {\n        togglePaste(root);\n    },\n    DID_SET_DISABLED: ({ root, props }) => {\n        toggleDrop(root);\n        togglePaste(root);\n        toggleBrowse(root, props);\n        const isDisabled = root.query('GET_DISABLED');\n        if (isDisabled) {\n            root.element.dataset.disabled = 'disabled';\n        } else {\n            // delete root.element.dataset.disabled; <= this does not work on iOS 10\n            root.element.removeAttribute('data-disabled');\n        }\n    },\n});\n\nconst root = createView({\n    name: 'root',\n    read: ({ root }) => {\n        if (root.ref.measure) {\n            root.ref.measureHeight = root.ref.measure.offsetHeight;\n        }\n    },\n    create: create$e,\n    write: write$9,\n    destroy: ({ root }) => {\n        if (root.ref.paster) {\n            root.ref.paster.destroy();\n        }\n        if (root.ref.hopper) {\n            root.ref.hopper.destroy();\n        }\n        root.element.removeEventListener('touchmove', prevent);\n        root.element.removeEventListener('gesturestart', prevent);\n    },\n    mixins: {\n        styles: ['height'],\n    },\n});\n\n// creates the app\nconst createApp = (initialOptions = {}) => {\n    // let element\n    let originalElement = null;\n\n    // get default options\n    const defaultOptions = getOptions();\n\n    // create the data store, this will contain all our app info\n    const store = createStore(\n        // initial state (should be serializable)\n        createInitialState(defaultOptions),\n\n        // queries\n        [queries, createOptionQueries(defaultOptions)],\n\n        // action handlers\n        [actions, createOptionActions(defaultOptions)]\n    );\n\n    // set initial options\n    store.dispatch('SET_OPTIONS', { options: initialOptions });\n\n    // kick thread if visibility changes\n    const visibilityHandler = () => {\n        if (document.hidden) return;\n        store.dispatch('KICK');\n    };\n    document.addEventListener('visibilitychange', visibilityHandler);\n\n    // re-render on window resize start and finish\n    let resizeDoneTimer = null;\n    let isResizing = false;\n    let isResizingHorizontally = false;\n    let initialWindowWidth = null;\n    let currentWindowWidth = null;\n    const resizeHandler = () => {\n        if (!isResizing) {\n            isResizing = true;\n        }\n        clearTimeout(resizeDoneTimer);\n        resizeDoneTimer = setTimeout(() => {\n            isResizing = false;\n            initialWindowWidth = null;\n            currentWindowWidth = null;\n            if (isResizingHorizontally) {\n                isResizingHorizontally = false;\n                store.dispatch('DID_STOP_RESIZE');\n            }\n        }, 500);\n    };\n    window.addEventListener('resize', resizeHandler);\n\n    // render initial view\n    const view = root(store, { id: getUniqueId() });\n\n    //\n    // PRIVATE API -------------------------------------------------------------------------------------\n    //\n    let isResting = false;\n    let isHidden = false;\n\n    const readWriteApi = {\n        // necessary for update loop\n\n        /**\n         * Reads from dom (never call manually)\n         * @private\n         */\n        _read: () => {\n            // test if we're resizing horizontally\n            // TODO: see if we can optimize this by measuring root rect\n            if (isResizing) {\n                currentWindowWidth = window.innerWidth;\n                if (!initialWindowWidth) {\n                    initialWindowWidth = currentWindowWidth;\n                }\n\n                if (!isResizingHorizontally && currentWindowWidth !== initialWindowWidth) {\n                    store.dispatch('DID_START_RESIZE');\n                    isResizingHorizontally = true;\n                }\n            }\n\n            if (isHidden && isResting) {\n                // test if is no longer hidden\n                isResting = view.element.offsetParent === null;\n            }\n\n            // if resting, no need to read as numbers will still all be correct\n            if (isResting) return;\n\n            // read view data\n            view._read();\n\n            // if is hidden we need to know so we exit rest mode when revealed\n            isHidden = view.rect.element.hidden;\n        },\n\n        /**\n         * Writes to dom (never call manually)\n         * @private\n         */\n        _write: ts => {\n            // get all actions from store\n            const actions = store\n                .processActionQueue()\n\n                // filter out set actions (these will automatically trigger DID_SET)\n                .filter(action => !/^SET_/.test(action.type));\n\n            // if was idling and no actions stop here\n            if (isResting && !actions.length) return;\n\n            // some actions might trigger events\n            routeActionsToEvents(actions);\n\n            // update the view\n            isResting = view._write(ts, actions, isResizingHorizontally);\n\n            // will clean up all archived items\n            removeReleasedItems(store.query('GET_ITEMS'));\n\n            // now idling\n            if (isResting) {\n                store.processDispatchQueue();\n            }\n        },\n    };\n\n    //\n    // EXPOSE EVENTS -------------------------------------------------------------------------------------\n    //\n    const createEvent = name => data => {\n        // create default event\n        const event = {\n            type: name,\n        };\n\n        // no data to add\n        if (!data) {\n            return event;\n        }\n\n        // copy relevant props\n        if (data.hasOwnProperty('error')) {\n            event.error = data.error ? { ...data.error } : null;\n        }\n\n        if (data.status) {\n            event.status = { ...data.status };\n        }\n\n        if (data.file) {\n            event.output = data.file;\n        }\n\n        // only source is available, else add item if possible\n        if (data.source) {\n            event.file = data.source;\n        } else if (data.item || data.id) {\n            const item = data.item ? data.item : store.query('GET_ITEM', data.id);\n            event.file = item ? createItemAPI(item) : null;\n        }\n\n        // map all items in a possible items array\n        if (data.items) {\n            event.items = data.items.map(createItemAPI);\n        }\n\n        // if this is a progress event add the progress amount\n        if (/progress/.test(name)) {\n            event.progress = data.progress;\n        }\n\n        // copy relevant props\n        if (data.hasOwnProperty('origin') && data.hasOwnProperty('target')) {\n            event.origin = data.origin;\n            event.target = data.target;\n        }\n\n        return event;\n    };\n\n    const eventRoutes = {\n        DID_DESTROY: createEvent('destroy'),\n\n        DID_INIT: createEvent('init'),\n\n        DID_THROW_MAX_FILES: createEvent('warning'),\n\n        DID_INIT_ITEM: createEvent('initfile'),\n        DID_START_ITEM_LOAD: createEvent('addfilestart'),\n        DID_UPDATE_ITEM_LOAD_PROGRESS: createEvent('addfileprogress'),\n        DID_LOAD_ITEM: createEvent('addfile'),\n\n        DID_THROW_ITEM_INVALID: [createEvent('error'), createEvent('addfile')],\n\n        DID_THROW_ITEM_LOAD_ERROR: [createEvent('error'), createEvent('addfile')],\n\n        DID_THROW_ITEM_REMOVE_ERROR: [createEvent('error'), createEvent('removefile')],\n\n        DID_PREPARE_OUTPUT: createEvent('preparefile'),\n\n        DID_START_ITEM_PROCESSING: createEvent('processfilestart'),\n        DID_UPDATE_ITEM_PROCESS_PROGRESS: createEvent('processfileprogress'),\n        DID_ABORT_ITEM_PROCESSING: createEvent('processfileabort'),\n        DID_COMPLETE_ITEM_PROCESSING: createEvent('processfile'),\n        DID_COMPLETE_ITEM_PROCESSING_ALL: createEvent('processfiles'),\n        DID_REVERT_ITEM_PROCESSING: createEvent('processfilerevert'),\n\n        DID_THROW_ITEM_PROCESSING_ERROR: [createEvent('error'), createEvent('processfile')],\n\n        DID_REMOVE_ITEM: createEvent('removefile'),\n\n        DID_UPDATE_ITEMS: createEvent('updatefiles'),\n\n        DID_ACTIVATE_ITEM: createEvent('activatefile'),\n\n        DID_REORDER_ITEMS: createEvent('reorderfiles'),\n    };\n\n    const exposeEvent = event => {\n        // create event object to be dispatched\n        const detail = { pond: exports, ...event };\n        delete detail.type;\n        view.element.dispatchEvent(\n            new CustomEvent(`FilePond:${event.type}`, {\n                // event info\n                detail,\n\n                // event behaviour\n                bubbles: true,\n                cancelable: true,\n                composed: true, // triggers listeners outside of shadow root\n            })\n        );\n\n        // event object to params used for `on()` event handlers and callbacks `oninit()`\n        const params = [];\n\n        // if is possible error event, make it the first param\n        if (event.hasOwnProperty('error')) {\n            params.push(event.error);\n        }\n\n        // file is always section\n        if (event.hasOwnProperty('file')) {\n            params.push(event.file);\n        }\n\n        // append other props\n        const filtered = ['type', 'error', 'file'];\n        Object.keys(event)\n            .filter(key => !filtered.includes(key))\n            .forEach(key => params.push(event[key]));\n\n        // on(type, () => { })\n        exports.fire(event.type, ...params);\n\n        // oninit = () => {}\n        const handler = store.query(`GET_ON${event.type.toUpperCase()}`);\n        if (handler) {\n            handler(...params);\n        }\n    };\n\n    const routeActionsToEvents = actions => {\n        if (!actions.length) return;\n        actions\n            .filter(action => eventRoutes[action.type])\n            .forEach(action => {\n                const routes = eventRoutes[action.type];\n                (Array.isArray(routes) ? routes : [routes]).forEach(route => {\n                    // this isn't fantastic, but because of the stacking of settimeouts plugins can handle the did_load before the did_init\n                    if (action.type === 'DID_INIT_ITEM') {\n                        exposeEvent(route(action.data));\n                    } else {\n                        setTimeout(() => {\n                            exposeEvent(route(action.data));\n                        }, 0);\n                    }\n                });\n            });\n    };\n\n    //\n    // PUBLIC API -------------------------------------------------------------------------------------\n    //\n    const setOptions = options => store.dispatch('SET_OPTIONS', { options });\n\n    const getFile = query => store.query('GET_ACTIVE_ITEM', query);\n\n    const prepareFile = query =>\n        new Promise((resolve, reject) => {\n            store.dispatch('REQUEST_ITEM_PREPARE', {\n                query,\n                success: item => {\n                    resolve(item);\n                },\n                failure: error => {\n                    reject(error);\n                },\n            });\n        });\n\n    const addFile = (source, options = {}) =>\n        new Promise((resolve, reject) => {\n            addFiles([{ source, options }], { index: options.index })\n                .then(items => resolve(items && items[0]))\n                .catch(reject);\n        });\n\n    const isFilePondFile = obj => obj.file && obj.id;\n\n    const removeFile = (query, options) => {\n        // if only passed options\n        if (typeof query === 'object' && !isFilePondFile(query) && !options) {\n            options = query;\n            query = undefined;\n        }\n\n        // request item removal\n        store.dispatch('REMOVE_ITEM', { ...options, query });\n\n        // see if item has been removed\n        return store.query('GET_ACTIVE_ITEM', query) === null;\n    };\n\n    const addFiles = (...args) =>\n        new Promise((resolve, reject) => {\n            const sources = [];\n            const options = {};\n\n            // user passed a sources array\n            if (isArray(args[0])) {\n                sources.push.apply(sources, args[0]);\n                Object.assign(options, args[1] || {});\n            } else {\n                // user passed sources as arguments, last one might be options object\n                const lastArgument = args[args.length - 1];\n                if (typeof lastArgument === 'object' && !(lastArgument instanceof Blob)) {\n                    Object.assign(options, args.pop());\n                }\n\n                // add rest to sources\n                sources.push(...args);\n            }\n\n            store.dispatch('ADD_ITEMS', {\n                items: sources,\n                index: options.index,\n                interactionMethod: InteractionMethod.API,\n                success: resolve,\n                failure: reject,\n            });\n        });\n\n    const getFiles = () => store.query('GET_ACTIVE_ITEMS');\n\n    const processFile = query =>\n        new Promise((resolve, reject) => {\n            store.dispatch('REQUEST_ITEM_PROCESSING', {\n                query,\n                success: item => {\n                    resolve(item);\n                },\n                failure: error => {\n                    reject(error);\n                },\n            });\n        });\n\n    const prepareFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n        const items = queries.length ? queries : getFiles();\n        return Promise.all(items.map(prepareFile));\n    };\n\n    const processFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n        if (!queries.length) {\n            const files = getFiles().filter(\n                item =>\n                    !(item.status === ItemStatus.IDLE && item.origin === FileOrigin.LOCAL) &&\n                    item.status !== ItemStatus.PROCESSING &&\n                    item.status !== ItemStatus.PROCESSING_COMPLETE &&\n                    item.status !== ItemStatus.PROCESSING_REVERT_ERROR\n            );\n            return Promise.all(files.map(processFile));\n        }\n        return Promise.all(queries.map(processFile));\n    };\n\n    const removeFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n\n        let options;\n        if (typeof queries[queries.length - 1] === 'object') {\n            options = queries.pop();\n        } else if (Array.isArray(args[0])) {\n            options = args[1];\n        }\n\n        const files = getFiles();\n\n        if (!queries.length) return Promise.all(files.map(file => removeFile(file, options)));\n\n        // when removing by index the indexes shift after each file removal so we need to convert indexes to ids\n        const mappedQueries = queries\n            .map(query => (isNumber(query) ? (files[query] ? files[query].id : null) : query))\n            .filter(query => query);\n\n        return mappedQueries.map(q => removeFile(q, options));\n    };\n\n    const exports = {\n        // supports events\n        ...on(),\n\n        // inject private api methods\n        ...readWriteApi,\n\n        // inject all getters and setters\n        ...createOptionAPI(store, defaultOptions),\n\n        /**\n         * Override options defined in options object\n         * @param options\n         */\n        setOptions,\n\n        /**\n         * Load the given file\n         * @param source - the source of the file (either a File, base64 data uri or url)\n         * @param options - object, { index: 0 }\n         */\n        addFile,\n\n        /**\n         * Load the given files\n         * @param sources - the sources of the files to load\n         * @param options - object, { index: 0 }\n         */\n        addFiles,\n\n        /**\n         * Returns the file objects matching the given query\n         * @param query { string, number, null }\n         */\n        getFile,\n\n        /**\n         * Upload file with given name\n         * @param query { string, number, null  }\n         */\n        processFile,\n\n        /**\n         * Request prepare output for file with given name\n         * @param query { string, number, null  }\n         */\n        prepareFile,\n\n        /**\n         * Removes a file by its name\n         * @param query { string, number, null  }\n         */\n        removeFile,\n\n        /**\n         * Moves a file to a new location in the files list\n         */\n        moveFile: (query, index) => store.dispatch('MOVE_ITEM', { query, index }),\n\n        /**\n         * Returns all files (wrapped in public api)\n         */\n        getFiles,\n\n        /**\n         * Starts uploading all files\n         */\n        processFiles,\n\n        /**\n         * Clears all files from the files list\n         */\n        removeFiles,\n\n        /**\n         * Starts preparing output of all files\n         */\n        prepareFiles,\n\n        /**\n         * Sort list of files\n         */\n        sort: compare => store.dispatch('SORT', { compare }),\n\n        /**\n         * Browse the file system for a file\n         */\n        browse: () => {\n            // needs to be trigger directly as user action needs to be traceable (is not traceable in requestAnimationFrame)\n            var input = view.element.querySelector('input[type=file]');\n            if (input) {\n                input.click();\n            }\n        },\n\n        /**\n         * Destroys the app\n         */\n        destroy: () => {\n            // request destruction\n            exports.fire('destroy', view.element);\n\n            // stop active processes (file uploads, fetches, stuff like that)\n            // loop over items and depending on states call abort for ongoing processes\n            store.dispatch('ABORT_ALL');\n\n            // destroy view\n            view._destroy();\n\n            // stop listening to resize\n            window.removeEventListener('resize', resizeHandler);\n\n            // stop listening to the visiblitychange event\n            document.removeEventListener('visibilitychange', visibilityHandler);\n\n            // dispatch destroy\n            store.dispatch('DID_DESTROY');\n        },\n\n        /**\n         * Inserts the plugin before the target element\n         */\n        insertBefore: element => insertBefore(view.element, element),\n\n        /**\n         * Inserts the plugin after the target element\n         */\n        insertAfter: element => insertAfter(view.element, element),\n\n        /**\n         * Appends the plugin to the target element\n         */\n        appendTo: element => element.appendChild(view.element),\n\n        /**\n         * Replaces an element with the app\n         */\n        replaceElement: element => {\n            // insert the app before the element\n            insertBefore(view.element, element);\n\n            // remove the original element\n            element.parentNode.removeChild(element);\n\n            // remember original element\n            originalElement = element;\n        },\n\n        /**\n         * Restores the original element\n         */\n        restoreElement: () => {\n            if (!originalElement) {\n                return; // no element to restore\n            }\n\n            // restore original element\n            insertAfter(originalElement, view.element);\n\n            // remove our element\n            view.element.parentNode.removeChild(view.element);\n\n            // remove reference\n            originalElement = null;\n        },\n\n        /**\n         * Returns true if the app root is attached to given element\n         * @param element\n         */\n        isAttachedTo: element => view.element === element || originalElement === element,\n\n        /**\n         * Returns the root element\n         */\n        element: {\n            get: () => view.element,\n        },\n\n        /**\n         * Returns the current pond status\n         */\n        status: {\n            get: () => store.query('GET_STATUS'),\n        },\n    };\n\n    // Done!\n    store.dispatch('DID_INIT');\n\n    // create actual api object\n    return createObject(exports);\n};\n\nconst createAppObject = (customOptions = {}) => {\n    // default options\n    const defaultOptions = {};\n    forin(getOptions(), (key, value) => {\n        defaultOptions[key] = value[0];\n    });\n\n    // set app options\n    const app = createApp({\n        // default options\n        ...defaultOptions,\n\n        // custom options\n        ...customOptions,\n    });\n\n    // return the plugin instance\n    return app;\n};\n\nconst lowerCaseFirstLetter = string => string.charAt(0).toLowerCase() + string.slice(1);\n\nconst attributeNameToPropertyName = attributeName => toCamels(attributeName.replace(/^data-/, ''));\n\nconst mapObject = (object, propertyMap) => {\n    // remove unwanted\n    forin(propertyMap, (selector, mapping) => {\n        forin(object, (property, value) => {\n            // create regexp shortcut\n            const selectorRegExp = new RegExp(selector);\n\n            // tests if\n            const matches = selectorRegExp.test(property);\n\n            // no match, skip\n            if (!matches) {\n                return;\n            }\n\n            // if there's a mapping, the original property is always removed\n            delete object[property];\n\n            // should only remove, we done!\n            if (mapping === false) {\n                return;\n            }\n\n            // move value to new property\n            if (isString(mapping)) {\n                object[mapping] = value;\n                return;\n            }\n\n            // move to group\n            const group = mapping.group;\n            if (isObject(mapping) && !object[group]) {\n                object[group] = {};\n            }\n\n            object[group][lowerCaseFirstLetter(property.replace(selectorRegExp, ''))] = value;\n        });\n\n        // do submapping\n        if (mapping.mapping) {\n            mapObject(object[mapping.group], mapping.mapping);\n        }\n    });\n};\n\nconst getAttributesAsObject = (node, attributeMapping = {}) => {\n    // turn attributes into object\n    const attributes = [];\n    forin(node.attributes, index => {\n        attributes.push(node.attributes[index]);\n    });\n\n    const output = attributes\n        .filter(attribute => attribute.name)\n        .reduce((obj, attribute) => {\n            const value = attr(node, attribute.name);\n\n            obj[attributeNameToPropertyName(attribute.name)] =\n                value === attribute.name ? true : value;\n            return obj;\n        }, {});\n\n    // do mapping of object properties\n    mapObject(output, attributeMapping);\n\n    return output;\n};\n\nconst createAppAtElement = (element, options = {}) => {\n    // how attributes of the input element are mapped to the options for the plugin\n    const attributeMapping = {\n        // translate to other name\n        '^class$': 'className',\n        '^multiple$': 'allowMultiple',\n        '^capture$': 'captureMethod',\n        '^webkitdirectory$': 'allowDirectoriesOnly',\n\n        // group under single property\n        '^server': {\n            group: 'server',\n            mapping: {\n                '^process': {\n                    group: 'process',\n                },\n                '^revert': {\n                    group: 'revert',\n                },\n                '^fetch': {\n                    group: 'fetch',\n                },\n                '^restore': {\n                    group: 'restore',\n                },\n                '^load': {\n                    group: 'load',\n                },\n            },\n        },\n\n        // don't include in object\n        '^type$': false,\n        '^files$': false,\n    };\n\n    // add additional option translators\n    applyFilters('SET_ATTRIBUTE_TO_OPTION_MAP', attributeMapping);\n\n    // create final options object by setting options object and then overriding options supplied on element\n    const mergedOptions = {\n        ...options,\n    };\n\n    const attributeOptions = getAttributesAsObject(\n        element.nodeName === 'FIELDSET' ? element.querySelector('input[type=file]') : element,\n        attributeMapping\n    );\n\n    // merge with options object\n    Object.keys(attributeOptions).forEach(key => {\n        if (isObject(attributeOptions[key])) {\n            if (!isObject(mergedOptions[key])) {\n                mergedOptions[key] = {};\n            }\n            Object.assign(mergedOptions[key], attributeOptions[key]);\n        } else {\n            mergedOptions[key] = attributeOptions[key];\n        }\n    });\n\n    // if parent is a fieldset, get files from parent by selecting all input fields that are not file upload fields\n    // these will then be automatically set to the initial files\n    mergedOptions.files = (options.files || []).concat(\n        Array.from(element.querySelectorAll('input:not([type=file])')).map(input => ({\n            source: input.value,\n            options: {\n                type: input.dataset.type,\n            },\n        }))\n    );\n\n    // build plugin\n    const app = createAppObject(mergedOptions);\n\n    // add already selected files\n    if (element.files) {\n        Array.from(element.files).forEach(file => {\n            app.addFile(file);\n        });\n    }\n\n    // replace the target element\n    app.replaceElement(element);\n\n    // expose\n    return app;\n};\n\n// if an element is passed, we create the instance at that element, if not, we just create an up object\nconst createApp$1 = (...args) =>\n    isNode(args[0]) ? createAppAtElement(...args) : createAppObject(...args);\n\nconst PRIVATE_METHODS = ['fire', '_read', '_write'];\n\nconst createAppAPI = app => {\n    const api = {};\n\n    copyObjectPropertiesToObject(app, api, PRIVATE_METHODS);\n\n    return api;\n};\n\n/**\n * Replaces placeholders in given string with replacements\n * @param string - \"Foo {bar}\"\"\n * @param replacements - { \"bar\": 10 }\n */\nconst replaceInString = (string, replacements) =>\n    string.replace(/(?:{([a-zA-Z]+)})/g, (match, group) => replacements[group]);\n\nconst createWorker = fn => {\n    const workerBlob = new Blob(['(', fn.toString(), ')()'], {\n        type: 'application/javascript',\n    });\n    const workerURL = URL.createObjectURL(workerBlob);\n    const worker = new Worker(workerURL);\n\n    return {\n        transfer: (message, cb) => {},\n        post: (message, cb, transferList) => {\n            const id = getUniqueId();\n\n            worker.onmessage = e => {\n                if (e.data.id === id) {\n                    cb(e.data.message);\n                }\n            };\n\n            worker.postMessage(\n                {\n                    id,\n                    message,\n                },\n                transferList\n            );\n        },\n        terminate: () => {\n            worker.terminate();\n            URL.revokeObjectURL(workerURL);\n        },\n    };\n};\n\nconst loadImage = url =>\n    new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n            resolve(img);\n        };\n        img.onerror = e => {\n            reject(e);\n        };\n        img.src = url;\n    });\n\nconst renameFile = (file, name) => {\n    const renamedFile = file.slice(0, file.size, file.type);\n    renamedFile.lastModifiedDate = file.lastModifiedDate;\n    renamedFile.name = name;\n    return renamedFile;\n};\n\nconst copyFile = file => renameFile(file, file.name);\n\n// already registered plugins (can't register twice)\nconst registeredPlugins = [];\n\n// pass utils to plugin\nconst createAppPlugin = plugin => {\n    // already registered\n    if (registeredPlugins.includes(plugin)) {\n        return;\n    }\n\n    // remember this plugin\n    registeredPlugins.push(plugin);\n\n    // setup!\n    const pluginOutline = plugin({\n        addFilter,\n        utils: {\n            Type,\n            forin,\n            isString,\n            isFile,\n            toNaturalFileSize,\n            replaceInString,\n            getExtensionFromFilename,\n            getFilenameWithoutExtension,\n            guesstimateMimeType,\n            getFileFromBlob,\n            getFilenameFromURL,\n            createRoute,\n            createWorker,\n            createView,\n            createItemAPI,\n            loadImage,\n            copyFile,\n            renameFile,\n            createBlob,\n            applyFilterChain,\n            text,\n            getNumericAspectRatioFromString,\n        },\n        views: {\n            fileActionButton,\n        },\n    });\n\n    // add plugin options to default options\n    extendDefaultOptions(pluginOutline.options);\n};\n\n// feature detection used by supported() method\nconst isOperaMini = () => Object.prototype.toString.call(window.operamini) === '[object OperaMini]';\nconst hasPromises = () => 'Promise' in window;\nconst hasBlobSlice = () => 'slice' in Blob.prototype;\nconst hasCreateObjectURL = () => 'URL' in window && 'createObjectURL' in window.URL;\nconst hasVisibility = () => 'visibilityState' in document;\nconst hasTiming = () => 'performance' in window; // iOS 8.x\nconst hasCSSSupports = () => 'supports' in (window.CSS || {}); // use to detect Safari 9+\nconst isIE11 = () => /MSIE|Trident/.test(window.navigator.userAgent);\n\nconst supported = (() => {\n    // Runs immediately and then remembers result for subsequent calls\n    const isSupported =\n        // Has to be a browser\n        isBrowser() &&\n        // Can't run on Opera Mini due to lack of everything\n        !isOperaMini() &&\n        // Require these APIs to feature detect a modern browser\n        hasVisibility() &&\n        hasPromises() &&\n        hasBlobSlice() &&\n        hasCreateObjectURL() &&\n        hasTiming() &&\n        // doesn't need CSSSupports but is a good way to detect Safari 9+ (we do want to support IE11 though)\n        (hasCSSSupports() || isIE11());\n\n    return () => isSupported;\n})();\n\n/**\n * Plugin internal state (over all instances)\n */\nconst state = {\n    // active app instances, used to redraw the apps and to find the later\n    apps: [],\n};\n\n// plugin name\nconst name = 'filepond';\n\n/**\n * Public Plugin methods\n */\nconst fn = () => {};\nlet Status$1 = {};\nlet FileStatus = {};\nlet FileOrigin$1 = {};\nlet OptionTypes = {};\nlet create$f = fn;\nlet destroy = fn;\nlet parse = fn;\nlet find = fn;\nlet registerPlugin = fn;\nlet getOptions$1 = fn;\nlet setOptions$1 = fn;\n\n// if not supported, no API\nif (supported()) {\n    // start painter and fire load event\n    createPainter(\n        () => {\n            state.apps.forEach(app => app._read());\n        },\n        ts => {\n            state.apps.forEach(app => app._write(ts));\n        }\n    );\n\n    // fire loaded event so we know when FilePond is available\n    const dispatch = () => {\n        // let others know we have area ready\n        document.dispatchEvent(\n            new CustomEvent('FilePond:loaded', {\n                detail: {\n                    supported,\n                    create: create$f,\n                    destroy,\n                    parse,\n                    find,\n                    registerPlugin,\n                    setOptions: setOptions$1,\n                },\n            })\n        );\n\n        // clean up event\n        document.removeEventListener('DOMContentLoaded', dispatch);\n    };\n\n    if (document.readyState !== 'loading') {\n        // move to back of execution queue, FilePond should have been exported by then\n        setTimeout(() => dispatch(), 0);\n    } else {\n        document.addEventListener('DOMContentLoaded', dispatch);\n    }\n\n    // updates the OptionTypes object based on the current options\n    const updateOptionTypes = () =>\n        forin(getOptions(), (key, value) => {\n            OptionTypes[key] = value[1];\n        });\n\n    Status$1 = { ...Status };\n    FileOrigin$1 = { ...FileOrigin };\n    FileStatus = { ...ItemStatus };\n\n    OptionTypes = {};\n    updateOptionTypes();\n\n    // create method, creates apps and adds them to the app array\n    create$f = (...args) => {\n        const app = createApp$1(...args);\n        app.on('destroy', destroy);\n        state.apps.push(app);\n        return createAppAPI(app);\n    };\n\n    // destroys apps and removes them from the app array\n    destroy = hook => {\n        // returns true if the app was destroyed successfully\n        const indexToRemove = state.apps.findIndex(app => app.isAttachedTo(hook));\n        if (indexToRemove >= 0) {\n            // remove from apps\n            const app = state.apps.splice(indexToRemove, 1)[0];\n\n            // restore original dom element\n            app.restoreElement();\n\n            return true;\n        }\n\n        return false;\n    };\n\n    // parses the given context for plugins (does not include the context element itself)\n    parse = context => {\n        // get all possible hooks\n        const matchedHooks = Array.from(context.querySelectorAll(`.${name}`));\n\n        // filter out already active hooks\n        const newHooks = matchedHooks.filter(\n            newHook => !state.apps.find(app => app.isAttachedTo(newHook))\n        );\n\n        // create new instance for each hook\n        return newHooks.map(hook => create$f(hook));\n    };\n\n    // returns an app based on the given element hook\n    find = hook => {\n        const app = state.apps.find(app => app.isAttachedTo(hook));\n        if (!app) {\n            return null;\n        }\n        return createAppAPI(app);\n    };\n\n    // adds a plugin extension\n    registerPlugin = (...plugins) => {\n        // register plugins\n        plugins.forEach(createAppPlugin);\n\n        // update OptionTypes, each plugin might have extended the default options\n        updateOptionTypes();\n    };\n\n    getOptions$1 = () => {\n        const opts = {};\n        forin(getOptions(), (key, value) => {\n            opts[key] = value[0];\n        });\n        return opts;\n    };\n\n    setOptions$1 = opts => {\n        if (isObject(opts)) {\n            // update existing plugins\n            state.apps.forEach(app => {\n                app.setOptions(opts);\n            });\n\n            // override defaults\n            setOptions(opts);\n        }\n\n        // return new options\n        return getOptions$1();\n    };\n}\n\nexport {\n    FileOrigin$1 as FileOrigin,\n    FileStatus,\n    OptionTypes,\n    Status$1 as Status,\n    create$f as create,\n    destroy,\n    find,\n    getOptions$1 as getOptions,\n    parse,\n    registerPlugin,\n    setOptions$1 as setOptions,\n    supported,\n};\n","/*!\n * FilePondPluginFileValidateSize 2.2.8\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst plugin = ({ addFilter, utils }) => {\n    // get quick reference to Type utils\n    const { Type, replaceInString, toNaturalFileSize } = utils;\n\n    // filtering if an item is allowed in hopper\n    addFilter('ALLOW_HOPPER_ITEM', (file, { query }) => {\n        if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n            return true;\n        }\n\n        const sizeMax = query('GET_MAX_FILE_SIZE');\n        if (sizeMax !== null && file.size > sizeMax) {\n            return false;\n        }\n\n        const sizeMin = query('GET_MIN_FILE_SIZE');\n        if (sizeMin !== null && file.size < sizeMin) {\n            return false;\n        }\n\n        return true;\n    });\n\n    // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n    addFilter(\n        'LOAD_FILE',\n        (file, { query }) =>\n            new Promise((resolve, reject) => {\n                // if not allowed, all fine, exit\n                if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n                    return resolve(file);\n                }\n\n                // check if file should be filtered\n                const fileFilter = query('GET_FILE_VALIDATE_SIZE_FILTER');\n                if (fileFilter && !fileFilter(file)) {\n                    return resolve(file);\n                }\n\n                // reject or resolve based on file size\n                const sizeMax = query('GET_MAX_FILE_SIZE');\n                if (sizeMax !== null && file.size > sizeMax) {\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_MAX_FILE_SIZE_EXCEEDED'),\n                            sub: replaceInString(query('GET_LABEL_MAX_FILE_SIZE'), {\n                                filesize: toNaturalFileSize(\n                                    sizeMax,\n                                    '.',\n                                    query('GET_FILE_SIZE_BASE'),\n                                    query('GET_FILE_SIZE_LABELS', query)\n                                ),\n                            }),\n                        },\n                    });\n                    return;\n                }\n\n                // reject or resolve based on file size\n                const sizeMin = query('GET_MIN_FILE_SIZE');\n                if (sizeMin !== null && file.size < sizeMin) {\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_MIN_FILE_SIZE_EXCEEDED'),\n                            sub: replaceInString(query('GET_LABEL_MIN_FILE_SIZE'), {\n                                filesize: toNaturalFileSize(\n                                    sizeMin,\n                                    '.',\n                                    query('GET_FILE_SIZE_BASE'),\n                                    query('GET_FILE_SIZE_LABELS', query)\n                                ),\n                            }),\n                        },\n                    });\n                    return;\n                }\n\n                // returns the current option value\n                const totalSizeMax = query('GET_MAX_TOTAL_FILE_SIZE');\n                if (totalSizeMax !== null) {\n                    // get the current total file size\n                    const currentTotalSize = query('GET_ACTIVE_ITEMS').reduce((total, item) => {\n                        return total + item.fileSize;\n                    }, 0);\n\n                    // get the size of the new file\n                    if (currentTotalSize > totalSizeMax) {\n                        reject({\n                            status: {\n                                main: query('GET_LABEL_MAX_TOTAL_FILE_SIZE_EXCEEDED'),\n                                sub: replaceInString(query('GET_LABEL_MAX_TOTAL_FILE_SIZE'), {\n                                    filesize: toNaturalFileSize(\n                                        totalSizeMax,\n                                        '.',\n                                        query('GET_FILE_SIZE_BASE'),\n                                        query('GET_FILE_SIZE_LABELS', query)\n                                    ),\n                                }),\n                            },\n                        });\n                        return;\n                    }\n                }\n\n                // file is fine, let's pass it back\n                resolve(file);\n            })\n    );\n\n    return {\n        options: {\n            // Enable or disable file type validation\n            allowFileSizeValidation: [true, Type.BOOLEAN],\n\n            // Max individual file size in bytes\n            maxFileSize: [null, Type.INT],\n\n            // Min individual file size in bytes\n            minFileSize: [null, Type.INT],\n\n            // Max total file size in bytes\n            maxTotalFileSize: [null, Type.INT],\n\n            // Filter the files that need to be validated for size\n            fileValidateSizeFilter: [null, Type.FUNCTION],\n\n            // error labels\n            labelMinFileSizeExceeded: ['File is too small', Type.STRING],\n            labelMinFileSize: ['Minimum file size is {filesize}', Type.STRING],\n\n            labelMaxFileSizeExceeded: ['File is too large', Type.STRING],\n            labelMaxFileSize: ['Maximum file size is {filesize}', Type.STRING],\n\n            labelMaxTotalFileSizeExceeded: ['Maximum total size exceeded', Type.STRING],\n            labelMaxTotalFileSize: ['Maximum total file size is {filesize}', Type.STRING],\n        },\n    };\n};\n\n// fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\nconst isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nif (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', { detail: plugin }));\n}\n\nexport default plugin;\n","/*!\n * FilePondPluginFileValidateType 1.2.9\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst plugin = ({ addFilter, utils }) => {\n    // get quick reference to Type utils\n    const {\n        Type,\n        isString,\n        replaceInString,\n        guesstimateMimeType,\n        getExtensionFromFilename,\n        getFilenameFromURL,\n    } = utils;\n\n    const mimeTypeMatchesWildCard = (mimeType, wildcard) => {\n        const mimeTypeGroup = (/^[^/]+/.exec(mimeType) || []).pop(); // image/png -> image\n        const wildcardGroup = wildcard.slice(0, -2); // image/* -> image\n        return mimeTypeGroup === wildcardGroup;\n    };\n\n    const isValidMimeType = (acceptedTypes, userInputType) =>\n        acceptedTypes.some(acceptedType => {\n            // accepted is wildcard mime type\n            if (/\\*$/.test(acceptedType)) {\n                return mimeTypeMatchesWildCard(userInputType, acceptedType);\n            }\n\n            // is normal mime type\n            return acceptedType === userInputType;\n        });\n\n    const getItemType = item => {\n        // if the item is a url we guess the mime type by the extension\n        let type = '';\n        if (isString(item)) {\n            const filename = getFilenameFromURL(item);\n            const extension = getExtensionFromFilename(filename);\n            if (extension) {\n                type = guesstimateMimeType(extension);\n            }\n        } else {\n            type = item.type;\n        }\n\n        return type;\n    };\n\n    const validateFile = (item, acceptedFileTypes, typeDetector) => {\n        // no types defined, everything is allowed \\o/\n        if (acceptedFileTypes.length === 0) {\n            return true;\n        }\n\n        // gets the item type\n        const type = getItemType(item);\n\n        // no type detector, test now\n        if (!typeDetector) {\n            return isValidMimeType(acceptedFileTypes, type);\n        }\n\n        // use type detector\n        return new Promise((resolve, reject) => {\n            typeDetector(item, type)\n                .then(detectedType => {\n                    if (isValidMimeType(acceptedFileTypes, detectedType)) {\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                })\n                .catch(reject);\n        });\n    };\n\n    const applyMimeTypeMap = map => acceptedFileType =>\n        map[acceptedFileType] === null ? false : map[acceptedFileType] || acceptedFileType;\n\n    // setup attribute mapping for accept\n    addFilter('SET_ATTRIBUTE_TO_OPTION_MAP', map =>\n        Object.assign(map, {\n            accept: 'acceptedFileTypes',\n        })\n    );\n\n    // filtering if an item is allowed in hopper\n    addFilter('ALLOW_HOPPER_ITEM', (file, { query }) => {\n        // if we are not doing file type validation exit\n        if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n            return true;\n        }\n\n        // we validate the file against the accepted file types\n        return validateFile(file, query('GET_ACCEPTED_FILE_TYPES'));\n    });\n\n    // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n    addFilter(\n        'LOAD_FILE',\n        (file, { query }) =>\n            new Promise((resolve, reject) => {\n                if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n                    resolve(file);\n                    return;\n                }\n\n                const acceptedFileTypes = query('GET_ACCEPTED_FILE_TYPES');\n\n                // custom type detector method\n                const typeDetector = query('GET_FILE_VALIDATE_TYPE_DETECT_TYPE');\n\n                // if invalid, exit here\n                const validationResult = validateFile(file, acceptedFileTypes, typeDetector);\n\n                const handleRejection = () => {\n                    const acceptedFileTypesMapped = acceptedFileTypes\n                        .map(\n                            applyMimeTypeMap(\n                                query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES_MAP')\n                            )\n                        )\n                        .filter(label => label !== false);\n\n                    const acceptedFileTypesMappedUnique = acceptedFileTypesMapped.filter(\n                        (item, index) => acceptedFileTypesMapped.indexOf(item) === index\n                    );\n\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_FILE_TYPE_NOT_ALLOWED'),\n                            sub: replaceInString(\n                                query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES'),\n                                {\n                                    allTypes: acceptedFileTypesMappedUnique.join(', '),\n                                    allButLastType: acceptedFileTypesMappedUnique\n                                        .slice(0, -1)\n                                        .join(', '),\n                                    lastType:\n                                        acceptedFileTypesMappedUnique[\n                                            acceptedFileTypesMappedUnique.length - 1\n                                        ],\n                                }\n                            ),\n                        },\n                    });\n                };\n\n                // has returned new filename immidiately\n                if (typeof validationResult === 'boolean') {\n                    if (!validationResult) {\n                        return handleRejection();\n                    }\n                    return resolve(file);\n                }\n\n                // is promise\n                validationResult\n                    .then(() => {\n                        resolve(file);\n                    })\n                    .catch(handleRejection);\n            })\n    );\n\n    // expose plugin\n    return {\n        // default options\n        options: {\n            // Enable or disable file type validation\n            allowFileTypeValidation: [true, Type.BOOLEAN],\n\n            // What file types to accept\n            acceptedFileTypes: [[], Type.ARRAY],\n            // - must be comma separated\n            // - mime types: image/png, image/jpeg, image/gif\n            // - extensions: .png, .jpg, .jpeg ( not enabled yet )\n            // - wildcards: image/*\n\n            // label to show when a type is not allowed\n            labelFileTypeNotAllowed: ['File is of invalid type', Type.STRING],\n\n            // nicer label\n            fileValidateTypeLabelExpectedTypes: [\n                'Expects {allButLastType} or {lastType}',\n                Type.STRING,\n            ],\n\n            // map mime types to extensions\n            fileValidateTypeLabelExpectedTypesMap: [{}, Type.OBJECT],\n\n            // Custom function to detect type of file\n            fileValidateTypeDetectType: [null, Type.FUNCTION],\n        },\n    };\n};\n\n// fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\nconst isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nif (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', { detail: plugin }));\n}\n\nexport default plugin;\n","import * as FilePond from \"filepond\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"../styles/fileupload.css\";\n\nimport { AsyncForm } from \"./async_form.js\";\n\nexport class FileUpload {\n\tconstructor(el) {\n\t\tif (el.dataset.refFileUpload) {\n\t\t\treturn FileUpload.refs[el.dataset.refFileUpload];\n\t\t}\n\n\t\tthis.ref = Math.random();\n\t\tFileUpload.refs[this.ref] = this;\n\t\tel.dataset.refFileUpload = this.ref;\n\n\t\tthis.inputs = el.querySelectorAll('input[type=\"file\"]');\n\n\t\tthis.fileponds = {};\n\t\tthis.headers = {\n\t\t\tAuthorization: \"pFdRC99ihTG!C%BQB6EJKjc!n%\",\n\t\t};\n\n\t\tdocument.addEventListener(\"FilePond:loaded\", () => this.onload());\n\t\tconst asyncForm = new AsyncForm(el.closest(\"[c-async-form]\"));\n\t\tasyncForm.onBeforeSubmit = () => this.beforeSubmit();\n\t\tasyncForm.onPayload = (payload) => this.onPayload(payload);\n\t\tasyncForm.onInput = async (input, value) => await this.inputHandler(input, value);\n\t}\n\n\tonload() {\n\t\tFilePond.registerPlugin(FilePondPluginFileValidateType);\n\t\tFilePond.registerPlugin(FilePondPluginFileValidateSize);\n\n\t\tconst options = {\n\t\t\tserver: {\n\t\t\t\turl: \"https://formupload.agentur-chapeau.de/\",\n\t\t\t\tprocess: {\n\t\t\t\t\turl: \"process\",\n\t\t\t\t\theaders: this.headers,\n\t\t\t\t},\n\t\t\t\trevert: {\n\t\t\t\t\turl: \"revert\",\n\t\t\t\t\theaders: this.headers,\n\t\t\t\t},\n\t\t\t\trestore: null,\n\t\t\t\tload: null,\n\t\t\t\tfetch: null,\n\t\t\t},\n\t\t\tcredits: false,\n\t\t\t...defaultLabels,\n\t\t\t...window.c_fileupload_options,\n\t\t};\n\n\t\tfor (const input of this.inputs) {\n\t\t\tthis.fileponds[input.name] = FilePond.create(input, {\n\t\t\t\t...options,\n\t\t\t\tmaxFiles: input.dataset.maxFiles || null,\n\t\t\t\tmaxFileSize: input.dataset.maxFileSize || null,\n\t\t\t\tmaxTotalFileSize: input.dataset.maxTotalFileSize || null,\n\t\t\t});\n\t\t}\n\t}\n\n\tbeforeSubmit() {\n\t\tfor (const [_, filepond] of Object.entries(this.fileponds)) {\n\t\t\tif (!(filepond.status == FilePond.Status.EMPTY || filepond.status == FilePond.Status.READY)) {\n\t\t\t\talert(\"Es sind noch nicht alle Dateien hochgeladen!\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tonPayload(payload) {\n\t\tfor (const input of this.inputs) {\n\t\t\tif (input.multiple) {\n\t\t\t\tpayload[input.name] = [];\n\t\t\t}\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\tasync inputHandler(input, value) {\n\t\tif (!input.closest(\".filepond--root\")) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (!input.closest(\".filepond--data\")) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst filepond = this.fileponds[input.name];\n\t\tconst fileObject = filepond.getFiles().find((f) => f.serverId === value);\n\n\t\tconst res = await fetch(`${filepond.server.url}finish`, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: value,\n\t\t\theaders: this.headers,\n\t\t});\n\n\t\tif (!res.ok) {\n\t\t\tthrow new Error(\"Upload could not finish \", res);\n\t\t}\n\n\t\tconst fileUrl = await res.text();\n\t\tconst fileName = fileObject.filename;\n\t\tconst fileSize = fileObject.fileSize;\n\n\t\treturn {\n\t\t\turl: fileUrl,\n\t\t\tname: fileName,\n\t\t\tsize: fileSize,\n\t\t};\n\t}\n}\n\nFileUpload.refs = {};\n\nwindow.FileUpload = FileUpload;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\tArray.from(document.querySelectorAll(\"[c-file-upload]\")).forEach((el) => new FileUpload(el));\n});\n\nconst defaultLabels = {\n\tlabelIdle: `Dateien hierher ziehen oder <span class=\"filepond--label-action\">auswählen</span>`,\n\tlabelInvalidField: \"Feld enthält ungültige Dateien\",\n\tlabelFileWaitingForSize: \"Auf Größe warten\",\n\tlabelFileSizeNotAvailable: \"Größe nicht verfügbar\",\n\tlabelFileLoading: \"Laden\",\n\tlabelFileLoadError: \"Fehler beim Laden\",\n\tlabelFileProcessing: \"Hochladen\",\n\tlabelFileProcessingComplete: \"Hochgeladen\",\n\tlabelFileProcessingAborted: \"Hochladen abgebrochen\",\n\tlabelFileProcessingError: \"Fehler beim Hochladen\",\n\tlabelFileProcessingRevertError: \"Fehler beim Entfernen\",\n\tlabelFileRemoveError: \"Fehler beim Löschen\",\n\tlabelTapToCancel: \"Tippen zum Abbrechen \",\n\tlabelTapToRetry: \"Tippen zum Wiederholen\",\n\tlabelTapToUndo: \"Tippen zum Entfernen\",\n\tlabelButtonRemoveItem: \"Entfernen\",\n\tlabelButtonAbortItemLoad: \"Abbrechen\",\n\tlabelButtonRetryItemLoad: \"Wiederholen\",\n\tlabelButtonAbortItemProcessing: \"Abbrechen\",\n\tlabelButtonUndoItemProcessing: \"Entfernen\",\n\tlabelButtonRetryItemProcessing: \"Wiederholen\",\n\tlabelButtonProcessItem: \"Hochladen\",\n\tlabelMaxFileSizeExceeded: \"Datei ist zu groß\",\n\tlabelMaxFileSize: \"Maximale Dateigröße beträgt {filesize}\",\n\tlabelMaxTotalFileSizeExceeded: \"Maximale Gesamtgröße überschritten\",\n\tlabelMaxTotalFileSize: \"Maximale Gesamtgröße beträgt {filesize}\",\n\tlabelFileTypeNotAllowed: \"Ungültiger Dateityp\",\n\tfileValidateTypeLabelExpectedTypes: \"Gültige Dateitypen: {allButLastType} und {lastType}\",\n\tfileValidateTypeLabelExpectedTypesMap: {\n\t\t\"image/*\": \"Bilddateien\",\n\t\t\"image/png\": \".png\",\n\t\t\"image/jpg\": \".jpg\",\n\t\t\"image/jpeg\": \".jpeg\",\n\t\t\"application/pdf\": \".pdf\",\n\t\t\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\": \".docx\",\n\t},\n};\n","import * as AWF from \"advanced-webflow-forms/dist/awf.js\";\nimport { AsyncForm } from \"chapeaujs\";\nimport { FileUpload } from \"chapeaujs/fileupload\";\nimport \"../styles/chapeau_formular.css\";\n\nvar Webflow = window.Webflow || [];\nWebflow.push(() => {\n\tcreateChapeauFormular();\n});\n\nfunction createChapeauFormular() {\n\tconst $main = document.querySelector('[c-chapeau-form=\"main\"]');\n\n\tconst $nav = $main.querySelector('[c-chapeau-form=\"nav\"]');\n\tconst $totalSteps = $main.querySelector('[c-chapeau-form=\"total-steps\"]');\n\tconst $progress = $main.querySelector('[c-chapeau-form=\"progress\"]');\n\n\tconst $slider = $main.querySelector('[c-chapeau-form=\"slider\"]');\n\tconst $slideList = $main.querySelector('[c-chapeau-form=\"slides\"]');\n\tconst $notQualifiedMsg = $main.querySelector('[c-chapeau-form=\"not-qualified-message\"]');\n\n\tconst $buttons = $main.querySelector('[c-chapeau-form=\"buttons\"]');\n\n\tconst formSelector = '[c-chapeau-form=\"form\"]';\n\tconst nextSelector = '[c-chapeau-form=\"next\"]';\n\tconst backSelector = '[c-chapeau-form=\"back\"]';\n\tconst currentStepSelector = '[c-chapeau-form=\"current-step\"]';\n\n\tmoveCmsSlidesToSlider($slider, $slideList);\n\n\t// Create MultiStepForm\n\tconst msf = new AWF.MSF({\n\t\thiddeButtonsOnSubmit: false, // Buttons will be manually hidden\n\t\tscrollTopOnStepChange: false,\n\t\tformSelector: formSelector,\n\t\tnextSelector: nextSelector,\n\t\tbackSelector: backSelector,\n\t\tcurrentStepSelector: currentStepSelector,\n\t});\n\n\tuseDisabledClass(msf);\n\tuseProgressBar(msf, $progress);\n\tuseBrowserValidation(msf);\n\tuseNotQualified(msf, $notQualifiedMsg, $nav, $buttons);\n\tuseAyncForm(msf);\n\tuseFileUpload(msf, $main);\n\n\t// Set total step count\n\tconst totalSteps = msf.view.steps.length;\n\t$totalSteps.textContent = totalSteps;\n\n\t// Make msf available in console\n\twindow.msf = msf;\n\n\t$main.removeAttribute(\"c-cloak\");\n\n\tmsf.view.setMaskHeight(0);\n}\n\nfunction moveCmsSlidesToSlider($slider, $slideList) {\n\tconst sliderMask = $slider.querySelector(\":scope > .w-slider-mask\");\n\tconst slides = Array.from($slideList.querySelectorAll(\":scope > .w-dyn-items > .w-dyn-item\"));\n\n\tArray.from(sliderMask.querySelectorAll(\".w-slide\")).forEach((el) => el.remove());\n\n\tslides.forEach((slide) => {\n\t\tslide.classList.add(\"w-slide\");\n\t\tsliderMask.appendChild(slide);\n\t});\n\n\t$slideList.remove();\n\n\t// Reset Webflow Slider\n\tWebflow.destroy();\n\tWebflow.ready();\n\tWebflow.require(\"ix2\").init();\n\tWebflow.require(\"slider\").redraw();\n\tWebflow.require(\"slider\").ready();\n}\n\nfunction useProgressBar({ view, controller }, $progress) {\n\tview.next.addEventListener(\"click\", updateProgressBar);\n\tview.back.addEventListener(\"click\", updateProgressBar);\n\tupdateProgressBar();\n\n\tfunction updateProgressBar() {\n\t\tconst currentStep = controller.currentStep + 1; // 0-based\n\t\tconst totalSteps = view.steps.length;\n\t\tconst progress = Math.min((currentStep / totalSteps) * 100, 100);\n\n\t\t$progress.style.width = `${progress}%`;\n\t}\n}\n\nfunction useNotQualified({ view, controller }, notQualifiedMsg, nav, buttons) {\n\tview.form.addEventListener(\"change\", checkQualified);\n\tfunction checkQualified() {\n\t\tconst inputs = view.getInputs(controller.currentStep);\n\n\t\tconst notQualified = inputs.some((input) => {\n\t\t\tif (input.checked) {\n\t\t\t\treturn input.parentElement.querySelector('[c-chapeau-form=\"not-qualified\"]') != null;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tconst currentSlide = view.steps[controller.currentStep];\n\t\tconst isNextSlideNotQualifiedMessage = currentSlide.nextSibling?.matches(\n\t\t\t'[c-chapeau-form=\"not-qualified-message\"]'\n\t\t);\n\t\tif (notQualified) {\n\t\t\tview.next.dataset.trackDisabled = true;\n\t\t\tif (!isNextSlideNotQualifiedMessage) {\n\t\t\t\tcurrentSlide.insertAdjacentHTML(\"afterend\", notQualifiedMsg.outerHTML);\n\t\t\t\tcurrentSlide.nextElementSibling\n\t\t\t\t\t.querySelector('[c-chapeau-form=\"not-qualified-back\"]')\n\t\t\t\t\t.addEventListener(\"click\", () => view.back.click());\n\t\t\t}\n\t\t} else {\n\t\t\tview.next.dataset.trackDisabled = false;\n\t\t\tif (isNextSlideNotQualifiedMessage) {\n\t\t\t\tcurrentSlide.nextSibling.remove();\n\t\t\t}\n\t\t}\n\n\t\tcurrentSlide.dataset.notQualified = notQualified;\n\n\t\tWebflow.require(\"slider\").redraw();\n\t\tWebflow.require(\"slider\").ready();\n\t}\n\n\t// Do not submit if not qualified\n\tconst originalSubmitForm = view.submitForm.bind(view);\n\tview.submitForm = () => {\n\t\tconst lastSlide = view.steps[view.steps.length - 1];\n\t\tif (lastSlide.dataset.notQualified === \"true\") {\n\t\t\tview.goNext();\n\t\t\thideElements();\n\t\t} else {\n\t\t\toriginalSubmitForm();\n\t\t}\n\t};\n\n\tview.next.addEventListener(\"click\", () => {\n\t\tconst lastSlide = view.steps[controller.currentStep - 1];\n\t\tif (lastSlide.dataset.notQualified === \"true\") {\n\t\t\thideElements();\n\t\t}\n\t});\n\n\tview.back.addEventListener(\"click\", () => {\n\t\tshowElements();\n\t});\n\n\tfunction hideElements() {\n\t\tview.hideElement(nav);\n\t\tview.hideElement(buttons);\n\t}\n\n\tfunction showElements() {\n\t\tview.showElement(nav);\n\t\tview.showElement(buttons);\n\t}\n}\n\nfunction useDisabledClass({ view }) {\n\t// Back Button is already disabled using built-in method. So redo that\n\tview.enableElement(view.back);\n\n\tview.disableElement = (el) => {\n\t\tif (!el) return;\n\t\tel.classList.add(\"disabled\");\n\t};\n\n\tview.enableElement = (el) => {\n\t\tif (!el) return;\n\t\tel.classList.remove(\"disabled\");\n\t};\n\n\tview.disableElement(view.back);\n}\n\nfunction useBrowserValidation(msf) {\n\tconst view = msf.view;\n\tconst controller = msf.controller;\n\n\t// Safe original implementation\n\tconst originalCheckRequiredInputs = controller.checkRequiredInputs.bind(controller);\n\n\tfunction newCheckRequiredInputs() {\n\t\tthis.inputsCurrentlyValid = true;\n\n\t\tconst inputs = this.view.getInputs(this.currentStep);\n\n\t\tfor (const input of inputs) {\n\t\t\tconst isValid = input.reportValidity();\n\t\t\t// Short circuit and directly return false if one input is not valid\n\t\t\tif (!isValid) {\n\t\t\t\tthis.inputsCurrentlyValid = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Run original implementation (for warning classes, etc.)\n\t\treturn originalCheckRequiredInputs();\n\t}\n\n\t// Monkeypatch `checkRequiredInputs` with custom function\n\tcontroller.checkRequiredInputs = newCheckRequiredInputs.bind(controller);\n}\n\nfunction useAyncForm(msf) {\n\tconst view = msf.view;\n\tconst controller = msf.controller;\n\n\t// Get elements\n\tconst $formBlock = view.form.closest(\"[c-async-form]\");\n\tconst $back = view.back;\n\tconst $next = view.next;\n\n\tconst asyncForm = new AsyncForm($formBlock);\n\tasyncForm.onState = (state) => {\n\t\t// Hide Buttons on success\n\t\tif (state === \"success\") {\n\t\t\tview.hideElement($back);\n\t\t\tview.hideElement($next);\n\t\t}\n\t};\n\n\t// Next button text should always reflect submit button (e.g. loading text)\n\tcontroller.observeSubmitText();\n\t// Remove submit functionality by monkeypatching, because AsyncForm handles it\n\tcontroller.handleSubmit = () => {\n\t\t// Prevent currentStep from exceding the maximum\n\t\tcontroller.currentStep = Math.min(controller.currentStep, view.steps.length - 1);\n\t};\n}\n\nfunction useFileUpload(msf, $main) {\n\tconst fileupload = new FileUpload($main);\n\n\tconst view = msf.view;\n\tconst controller = msf.controller;\n\n\t// Update mask height if files are added or removed\n\tview.form.addEventListener(\"FilePond:updatefiles\", () => {\n\t\tsetTimeout(() => view.setMaskHeight(controller.currentStep), 100); // 100ms delay to let FilePond-Element update\n\t});\n}\n"],"names":["params","gclid","fbclid","fbc","ttclid","form","inputs","obj","name","input","conversionIds","getConversionIDs","el","event","url","fbp","getCookie","useragent","parts","oa","a","M","j","pa","e","t","r","qa","o","n","$","l","i","ca","G","N","R","U","V","O","X","ra","da","sa","ta","s","v","ua","Y","va","ea","wa","xa","c","d","h","u","f","m","y","p","w","b","E","k","x","S","g","H","q","T","C","F","A","ya","I","za","fa","Aa","Ba","Ca","Da","Z","_","Ea","Fa","ga","aa","Ga","Ha","Ia","Ja","P","ha","Ka","La","J","Ma","Na","Oa","Pa","Qa","Ra","ia","Sa","Ta","Ua","Va","ja","Wa","Xa","Ya","Za","ka","$a","_a","ab","bb","W","z","Q","K","B","ba","L","cb","db","la","eb","ma","fb","gb","hb","ib","jb","D","na","kb","lb","module","AsyncForm","fn","prev","handler","payload","options","err","inputElements","value","inputHandler","state","isNode","createStore","initialState","queries","actions","actionQueue","dispatchQueue","getState","processActionQueue","queue","processDispatchQueue","type","data","dispatch","isBlocking","actionHandlers","query","str","args","queryHandles","api","action","defineProperty","property","definition","forin","key","createObject","attr","node","ns","svgElements","isSVGElement","tag","createElement","className","attributes","element","appendChild","parent","child","index","appendChildView","childViews","view","removeChildView","IS_BROWSER","isBrowser","testElement","getChildCount","getViewRect","elementRect","offset","scale","left","top","right","bottom","rect","childView","childViewRect","expandRect","calculateRectSize","isNumber","thereYet","position","destination","velocity","errorMargin","spring","stiffness","damping","mass","target","resting","ts","skipToEndState","easeInOutQuad","tween","duration","easing","delay","start","reverse","animator","createAnimator","category","def","props","addGetSet","keys","overwrite","getter","setter","animations","mixinConfig","viewProps","viewInternalAPI","viewExternalAPI","initialProps","animation","addEvent","removeEvent","listeners","viewState","events","add","remove","apis","isDefined","defaults","styles","currentProps","getOffset","getScale","getRect","propsHaveChanged","applyStyles","newProps","prop","opacity","perspective","translateX","translateY","scaleX","scaleY","rotateX","rotateY","rotateZ","originX","originY","width","height","transforms","elementCurrentStyle","Mixins","updateRect","style","createView","read","write","create","destroy","filterFrameActionsForChild","didCreateView","didWriteView","ignoreRect","ignoreRectUpdate","mixins","store","frameRect","isResting","activeMixins","ref","writers","readers","destroyers","getElement","getChildViews","getReference","createChildView","getStyle","_read","internalAPI","reader","_write","frameActions","shouldOptimize","writer","mixin","_destroy","destroyer","sharedAPIDefinition","internalAPIDefinition","needle","externalAPIDefinition","mixinAPIDefinition","mixinAPI","childCount","createPainter","fps","painter","interval","last","id","requestTick","cancelTick","setTimerType","tick","delta","createRoute","routes","root","timestamp","insertBefore","newNode","referenceNode","insertAfter","isArray","isEmpty","trim","toString","toArray","splitter","isBoolean","toBoolean","isString","toNumber","toInt","toFloat","isInt","toBytes","base","naturalFileSize","isFunction","toFunctionReference","string","levels","level","methods","createServerAPI","outline","createAction","method","timeout","headers","toServerAPI","isNull","isObject","isAPI","getType","replaceSingleQuotes","conversionTable","convertTo","getValueByType","newValue","defaultValue","valueType","newValueType","convertedValue","createOption","currentValue","createOptions","optionDefinition","createInitialState","fromCamels","separator","part","createOptionAPI","createOptionActions","createOptionQueries","InteractionMethod","getUniqueId","arrayRemove","arr","run","sync","on","off","listener","fire","copyObjectPropertiesToObject","src","excluded","PRIVATE","createItemAPI","item","removeReleasedItems","items","ItemStatus","FileOrigin","getNonNumeric","getDecimalSeparator","getThousandsSeparator","decimalSeparator","thousandsStringWithSeparator","Type","filters","applyFilterChain","utils","resolve","reject","matchingFilters","initialFilter","current","next","error","applyFilters","addFilter","extendDefaultOptions","additionalOptions","defaultOptions","getOptions","setOptions","opts","getItemByQuery","getNumericAspectRatioFromString","aspectRatio","getActiveItems","Status","res","canUpdateFileInput","dataTransfer","ITEM_ERROR","ITEM_BUSY","ITEM_READY","isItemInErrorState","isItemInBusyState","isItemInReadyState","isAsync","EMPTY","ERROR","BUSY","IDLE","READY","option","status","hasRoomForItem","count","maxFileCount","limit","min","max","arrayInsert","insertItem","isBase64DataURI","getFilenameFromURL","getExtensionFromFilename","guesstimateExtension","subtype","leftPad","padding","getDateString","date","getFileFromBlob","blob","filename","extension","file","getBlobBuilder","createBlob","arrayBuffer","mimeType","BB","getBlobFromByteStringWithMimeType","byteString","getMimeTypeFromBase64DataURI","dataURI","getBase64DataFromBase64DataURI","getByteStringFromBase64DataURI","getBlobFromBase64DataURI","getFileFromBase64DataURI","getFileNameFromHeader","header","matches","getFileSizeFromHeader","size","getTranfserIdFromHeader","getFileInfoFromHeaders","info","rows","source","createFileLoader","fetchFn","getProgress","abort","load","loadURL","response","computable","total","fileinfo","isGet","sendRequest","aborted","xhr","headersReceived","process","createResponse","code","body","createTimeoutResponse","hasQS","buildURL","createFetchFunction","apiUrl","onload","onerror","progress","request","ChunkStatus","processFileChunked","metadata","transfer","chunks","chunkTransferId","chunkServer","chunkSize","chunkRetryDelays","ondata","fd","requestTransferId","formData","requestParams","requestTransferOffset","requestUrl","lastChunkIndex","completeProcessingChunks","canProcessChunk","chunk","processChunk","processChunks","lengthComputable","loaded","updateTotalProgress","retryProcessChunk","totalBytesTransfered","totalSize","abortChunks","serverId","createFileProcessorFunction","canChunkUpload","shouldChunkUpload","willChunkUpload","createProcessorFunction","createRevertFunction","uniqueFileId","getRandomNumber","createPerceivedPerformanceUpdater","tickMin","tickMax","runtime","createFileProcessor","processFn","allowMinimumUploadDuration","progressFn","completeFn","transferId","reset","getDuration","getFilenameWithoutExtension","createFileStub","isFile","deepCloneObject","createItem","origin","serverFileReference","abortProcessingRequestComplete","setStatus","getFileExtension","getFileType","getFileSize","getFile","loader","meta","success","result","retryLoad","abortLoad","processor","onprocess","requestProcessing","abortProcessing","revert","revertFileUpload","forceRevert","serverTransferId","setMetadata","silent","itemAPI","getItemIndexByQuery","getItemById","itemId","fetchBlob","getDomainFromURL","isExternalURL","dynamicLabel","label","isMockItem","listUpdated","optionalPromise","sortItems","compare","getItemByQueryFromState","itemHandler","failure","files","activeItems","change","shouldPrepareOutput","beforePrepareFile","upload","doUpload","currentIndex","interactionMethod","insertLocation","totalItems","ignoredFiles","isValidFile","promises","itemInsertLocation","mainStatus","handleAdd","shouldAdd","loadComplete","restore","fetch","processNow","maxParallelUploads","processNext","queueEntry","itemReference","server","noop","shouldRemove","removeFromView","handleRevert","shouldRevert","requestRemoveResult","optionKeys","prioritizedOptionKeys","PrioritizedOptions","formatFilename","createElement$1","tagName","text","textNode","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","describeArc","startAngle","endAngle","arcSweep","end","percentageArc","from","to","svg","ringStrokeWidth","ringFrom","ringTo","coordinates","progressIndicator","create$1","write$1","isDisabled","shouldDisable","fileActionButton","toNaturalFileSize","bytes","labelBytes","labelKilobytes","labelMegabytes","labelGigabytes","KB","MB","GB","removeDecimalsWhenZero","decimalCount","create$2","fileName","fileSize","updateFile","updateFileSizeOnError","fileInfo","toPercentage","create$3","main","sub","didSetItemLoadProgress","title","didSetItemProcessProgress","didRequestItemProcessing","didAbortItemProcessing","didCompleteItemProcessing","clear","fileStatus","Buttons","ButtonKeys","calculateFileInfoOffset","getRemoveIndicatorAligment","buttonRect","calculateButtonWidth","calculateFileVerticalCenterOffset","calculateFileHorizontalCenterOffset","getLoadIndicatorAlignment","getProcessIndicatorAlignment","DefaultStyle","IdleStyle","ProcessingStyle","StyleMap","processingCompleteIndicatorView","create$4","LocalButtons","curr","allowRevert","allowRemove","allowProcess","instantUpload","alignRemoveItemButton","buttonFilter","enabledButtons","map","buttonView","loadIndicatorView","progressIndicatorView","write$2","route","stylesToApply","defaultStyles","control","create$5","didLoadItem","fileWrapper","PANEL_SPRING_PROPS","create$6","section","createSection","viewConstructor","write$3","topRect","bottomRect","panel","createDragHelper","itemIds","prevIndex","ITEM_TRANSLATE_SPRING","ITEM_SCALE_SPRING","StateMap","create$7","grab","removedActivateListener","dragState","drag","drop","route$1","write$4","getItemsPerRow","horizontalSpace","itemWidth","getItemIndexByPosition","children","positionInView","itemRect","itemHorizontalMargin","itemsPerRow","childMid","itemVerticalMargin","itemHeight","indexX","indexY","offsetX","offsetY","itemTop","itemRight","itemBottom","dropAreaDimensions","val","create$8","addItemView","now","spawnDate","cooldown","dist","moveItem","vx","vy","introItemView","removeItemView","getItemHeight","getItemWidth","dragItem","numItems","oldIndex","dragPosition","dragHeight","dragWidth","cols","location","visibleChildren","idx","childHeight","childBottom","childTop","route$2","write$5","dragCoordinates","dragIndex","addIndex","dragIndexOffset","removeIndexOffset","addIndexOffset","childRect","dragOffset","visualHeight","prevX","prevY","visualIndex","vectorX","vectorY","filterSetItemActions","list","create$9","storeDragCoordinates","clearDragCoordinates","route$3","write$6","newHeight","listScroller","attrToggle","enabledValue","resetFileInput","parentNode","create$a","setAcceptedFileTypes","toggleAllowMultiple","toggleDirectoryFilter","toggleDisabled","toggleRequired","setCaptureMethod","doesAllowBrowse","disableField","updateRequiredStatus","updateFieldValidityStatus","browser","Key","create$b","updateLabelValue","clickable","dropLabel","addBlob","moveBlob","hideBlob","explodeBlob","write$7","route$4","drip","setInputFiles","create$c","getField","syncFieldPositionsWithItems","didReorderItems","didAddItem","shouldUseFileInput","dataContainer","didLoadItem$1","field","fileItem","didPrepareOutput","didSetDisabled","didRemoveItem","didDefineValue","write$8","getRootNode","images","text$1","guesstimateMimeType","requestDataTransferItems","links","getLinks","hasFiles","getFiles","promisedFiles","isFileSystemItem","getFilesFromItem","returnedFileGroups","group","isEntry","entry","getAsEntry","isDirectoryEntry","getFilesInDirectory","dirCounter","fileCounter","resolveIfDone","readEntries","dirEntry","directoryReader","readBatch","entries","correctedFile","correctMissingFileType","getLinksFromTransferMetaData","getLinksFromTransferURLData","dragNDropObservers","eventPosition","createDragNDropClient","scopeToObserve","filterElement","observer","getDragNDropObserver","client","newObserver","createDragNDropObserver","clients","dragenter","dragover","dragleave","handlers","createHandler","elementFromPoint","point","isEventTarget","elementAtPosition","initialTarget","setDropEffect","effect","onenter","overDropTarget","onexit","ondrag","allowdrop","allowsTransfer","ondrop","createHopper","scope","validateItems","catchesDropsOnPage","requiresDropOnElement","filterItems","lastState","currentState","filteredItems","listening","listeners$1","handlePaste","activeEl","inScope","listen","unlisten","createPaster","create$d","addFilesNotificationTimeout","notificationClearTimeout","filenames","assist","message","clear$1","listModified","isUsingFilePond","itemAdded","itemRemoved","itemProcessed","itemProcessedUndo","itemError","assistant","toCamels","debounce","func","immidiateOnly","MAX_FILES_LIMIT","prevent","create$e","canHover","hasPointerEvents","credits","frag","write$9","route$5","bounds","calculateRootBoundingBoxHeight","hopper","isMultiItem","maxItems","atMaxCapacity","addAction","listItemMargin","calculateListItemMargin","listHeight","calculateListHeight","labelHeight","currentLabelHeight","listMarginTop","listMarginBottom","boundsHeight","history","MAX_BOUNCES","bounces","listAvailableHeight","isCappedHeight","panelHeight","itemMargin","visual","scrollList","itemList","newItem","removedItem","verticalItemCount","exceedsMaxFiles","allowReplace","allowMultiple","totalBrowseItems","getDragIndex","toggleDrop","isAllowed","enabled","beforeDropFile","toggleBrowse","togglePaste","createApp","initialOptions","originalElement","visibilityHandler","resizeDoneTimer","isResizing","isResizingHorizontally","initialWindowWidth","currentWindowWidth","resizeHandler","isHidden","readWriteApi","routeActionsToEvents","createEvent","eventRoutes","exposeEvent","detail","exports","filtered","prepareFile","addFile","addFiles","isFilePondFile","removeFile","sources","lastArgument","processFile","prepareFiles","processFiles","removeFiles","createAppObject","customOptions","lowerCaseFirstLetter","attributeNameToPropertyName","attributeName","mapObject","object","propertyMap","selector","mapping","selectorRegExp","getAttributesAsObject","attributeMapping","output","attribute","createAppAtElement","mergedOptions","attributeOptions","app","createApp$1","PRIVATE_METHODS","createAppAPI","replaceInString","replacements","match","createWorker","workerBlob","workerURL","worker","transferList","loadImage","img","renameFile","renamedFile","copyFile","registeredPlugins","createAppPlugin","plugin","pluginOutline","isOperaMini","hasPromises","hasBlobSlice","hasCreateObjectURL","hasVisibility","hasTiming","hasCSSSupports","isIE11","supported","isSupported","Status$1","OptionTypes","create$f","parse","find","registerPlugin","getOptions$1","setOptions$1","updateOptionTypes","hook","indexToRemove","context","newHook","plugins","sizeMax","sizeMin","fileFilter","totalSizeMax","mimeTypeMatchesWildCard","wildcard","mimeTypeGroup","wildcardGroup","isValidMimeType","acceptedTypes","userInputType","acceptedType","getItemType","validateFile","acceptedFileTypes","typeDetector","detectedType","applyMimeTypeMap","acceptedFileType","validationResult","handleRejection","acceptedFileTypesMapped","acceptedFileTypesMappedUnique","FileUpload","asyncForm","FilePond.registerPlugin","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","defaultLabels","FilePond.create","filepond","FilePond.Status","fileObject","fileUrl","Webflow","createChapeauFormular","$main","$nav","$totalSteps","$progress","$slider","$slideList","$notQualifiedMsg","$buttons","formSelector","nextSelector","backSelector","currentStepSelector","moveCmsSlidesToSlider","msf","AWF.MSF","useDisabledClass","useProgressBar","useBrowserValidation","useNotQualified","useAyncForm","useFileUpload","totalSteps","sliderMask","slides","slide","controller","updateProgressBar","currentStep","notQualifiedMsg","nav","buttons","checkQualified","notQualified","currentSlide","isNextSlideNotQualifiedMessage","originalSubmitForm","hideElements","showElements","originalCheckRequiredInputs","newCheckRequiredInputs","$formBlock","$back","$next"],"mappings":"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","x_google_ignoreList":[1,4,5,6]}